<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' inline='true' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127069640_12018_923_airline_delay_causes_012013_012018' name='textscan.0lnav6n1ber7n71dkfo0y187gcjk'>
            <connection class='textscan' directory='C:/MyWorks/Google Drive/Data Analyst_NanoDegree/Visualization/project' filename='127069640_12018_923_airline_delay_causes_012013_012018.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport]' />
              <expression op='[airports.csv].[iata]' />
            </expression>
          </clause>
          <relation connection='textscan.0lnav6n1ber7n71dkfo0y187gcjk' name='127069640_12018_923_airline_delay_causes_012013_012018.csv' table='[127069640_12018_923_airline_delay_causes_012013_012018#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='integer' date-parse-format='MM' name=' month' ordinal='1' />
              <column datatype='string' name='carrier' ordinal='2' />
              <column datatype='string' name='carrier_name' ordinal='3' />
              <column datatype='string' name='airport' ordinal='4' />
              <column datatype='string' name='airport_name' ordinal='5' />
              <column datatype='real' name='arr_flights' ordinal='6' />
              <column datatype='real' name='arr_del15' ordinal='7' />
              <column datatype='real' name='carrier_ct' ordinal='8' />
              <column datatype='real' name=' weather_ct' ordinal='9' />
              <column datatype='real' name='nas_ct' ordinal='10' />
              <column datatype='real' name='security_ct' ordinal='11' />
              <column datatype='real' name='late_aircraft_ct' ordinal='12' />
              <column datatype='real' name='arr_cancelled' ordinal='13' />
              <column datatype='real' name='arr_diverted' ordinal='14' />
              <column datatype='real' name=' arr_delay' ordinal='15' />
              <column datatype='real' name=' carrier_delay' ordinal='16' />
              <column datatype='real' name='weather_delay' ordinal='17' />
              <column datatype='real' name='nas_delay' ordinal='18' />
              <column datatype='real' name='security_delay' ordinal='19' />
              <column datatype='real' name='late_aircraft_delay' ordinal='20' />
              <column datatype='string' name='F22' ordinal='21' />
            </columns>
          </relation>
          <relation connection='textscan.0lnav6n1ber7n71dkfo0y187gcjk' name='airports.csv' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='iata' ordinal='0' />
              <column datatype='string' name='airport' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='string' name='country' ordinal='4' />
              <column datatype='real' name='lat' ordinal='5' />
              <column datatype='real' name='long' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ arr_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ arr_delay]' />
          <map key='[ carrier_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ carrier_delay]' />
          <map key='[ month]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ month]' />
          <map key='[ weather_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ weather_ct]' />
          <map key='[F22]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[F22]' />
          <map key='[airport (airports.csv)]' value='[airports.csv].[airport]' />
          <map key='[airport]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport]' />
          <map key='[airport_name]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport_name]' />
          <map key='[arr_cancelled]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_cancelled]' />
          <map key='[arr_del15]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_del15]' />
          <map key='[arr_diverted]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_diverted]' />
          <map key='[arr_flights]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_flights]' />
          <map key='[carrier]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier]' />
          <map key='[carrier_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier_ct]' />
          <map key='[carrier_name]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier_name]' />
          <map key='[city]' value='[airports.csv].[city]' />
          <map key='[country]' value='[airports.csv].[country]' />
          <map key='[iata]' value='[airports.csv].[iata]' />
          <map key='[lat]' value='[airports.csv].[lat]' />
          <map key='[late_aircraft_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[late_aircraft_ct]' />
          <map key='[late_aircraft_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[late_aircraft_delay]' />
          <map key='[long]' value='[airports.csv].[long]' />
          <map key='[nas_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[nas_ct]' />
          <map key='[nas_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[nas_delay]' />
          <map key='[security_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[security_ct]' />
          <map key='[security_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[security_delay]' />
          <map key='[state]' value='[airports.csv].[state]' />
          <map key='[weather_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[weather_delay]' />
          <map key='[year]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ month]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_flights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_flights]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_flights</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_del15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_del15]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_del15</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[carrier_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier_ct</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> weather_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ weather_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> weather_ct</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>nas_ct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>security_ct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>late_aircraft_ct</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_cancelled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_cancelled]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_cancelled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_diverted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_diverted]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_diverted</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> arr_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ arr_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> arr_delay</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> carrier_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ carrier_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> carrier_delay</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F22</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F22]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>F22</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iata]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>iata</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport (airports.csv)]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
      <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
      <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;' value='All Delays' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;' value='Arrival Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;' value='Average Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;' value='Carrier Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;' value='Late Aircraft Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;' value='NAS Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;' value='Security Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;' value='Weather Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;' value='Agg. Carrier Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;' value='Agg. Weather Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;' value='Agg. NAS Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;' value='Agg. Security Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;' value='Agg. Late Aircraft Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489063486:qk]&quot;' value='Agg. Arrival Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094506573894:qk]&quot;' value='Cancelled or Diverted' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;' value='Cancelled out of Total Arriving' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;' value='Diverted out of Total Arriving' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;' value='Delay out of Total Arriving' />
        </aliases>
      </column>
      <column caption='Month' datatype='string' name='[Calculation_1349391092679319552]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [ month] &#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;Feburary&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' />
      </column>
      <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
      </column>
      <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
      </column>
      <column caption='Avg Arrival Delay' datatype='real' name='[Calculation_1349391092860329998]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([ arr_delay])/SUM([arr_flights])' />
      </column>
      <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
      </column>
      <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
      </column>
      <column caption='Top 10 Carriers' datatype='string' name='[Carrier Name (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[carrier_name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alaska Airlines Inc., American Airlines Inc., Delta Air Lines Inc. and 7 more&quot;'>
            <value>&quot;Alaska Airlines Inc.&quot;</value>
            <value>&quot;American Airlines Inc.&quot;</value>
            <value>&quot;Delta Air Lines Inc.&quot;</value>
            <value>&quot;Envoy Air&quot;</value>
            <value>&quot;ExpressJet Airlines Inc.&quot;</value>
            <value>&quot;JetBlue Airways&quot;</value>
            <value>&quot;SkyWest Airlines Inc.&quot;</value>
            <value>&quot;Southwest Airlines Co.&quot;</value>
            <value>&quot;United Air Lines Inc.&quot;</value>
            <value>&quot;US Airways Inc.&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Carrier Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[carrier_name]' default='&quot;Other&quot;' new-bin='true' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
      <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Airport Full' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
      <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
      <column caption='Diverted Count' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
      <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='Airport City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Airport Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='IATA Code' datatype='string' name='[iata]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Airport Latitude' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
      <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Airport Longitude' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
      <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[airport (airports.csv)]' derivation='Attribute' name='[attr:airport (airports.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[lat]' derivation='Attribute' name='[attr:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ arr_delay]' derivation='Avg' name='[avg: arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Avg' name='[avg: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391094447632402]' derivation='Avg' name='[avg:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_flights]' derivation='Avg' name='[avg:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_delay]' derivation='Avg' name='[avg:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_delay]' derivation='Avg' name='[avg:nas_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_delay]' derivation='Avg' name='[avg:security_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather_delay]' derivation='Avg' name='[avg:weather_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[cum:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Avg' name='[diff:avg: arr_delay:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Avg' name='[diff:avg: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[diff:avg:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[airport]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[diff:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[diff:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[diff:sum:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[diff:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[diff:usr:Calculation_1349391092860329998:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[diff:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092679319552]' derivation='None' name='[none:Calculation_1349391092679319552:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
      <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcto:avg:arr_flights:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcto:avg:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[pcto:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcto:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[pcto:sum:arr_flights:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[pcto:sum:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcto:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[pcto:usr:Calculation_1349391092860329998:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[pcto:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcva:avg:arr_flights:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcva:avg:arr_flights:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcva:avg:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcva:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcva:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance aggregation-param='95' column='[arr_flights]' derivation='Percentile' name='[prc95:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ arr_delay]' derivation='Sum' name='[sum: arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ weather_ct]' derivation='Sum' name='[sum: weather_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_del15]' derivation='Sum' name='[sum:arr_del15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_diverted]' derivation='Sum' name='[sum:arr_diverted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Sum' name='[sum:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_ct]' derivation='Sum' name='[sum:late_aircraft_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[long]' derivation='Sum' name='[sum:long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_ct]' derivation='Sum' name='[sum:nas_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_ct]' derivation='Sum' name='[sum:security_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Airport Name)' hidden='true' name='[Action (Airport Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[airport (airports.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Airport Name,Airport Code)' hidden='true' name='[Action (Airport Name,Airport Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[airport (airports.csv)]' />
          <groupfilter function='level-members' level='[airport]' />
        </groupfilter>
      </group>
      <group caption='Action (Carrier Name)' hidden='true' name='[Action (Carrier Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier_name]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(MonthYear))' hidden='true' name='[Action (MONTH(MonthYear))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Calculation_1349391092718141443:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Airport Code,Airport Name)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:airport:nk]' />
          <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' />
        </groupfilter>
      </group>
      <group name='[Top 10 Delayed Carriers]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1349391092689137666]' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[carrier_name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 10 Delayed Airports' name='[Top 20 Delayed Airports]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1349391092689137666]' function='order' user:ui-marker='order'>
            <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[airport (airports.csv)]' to='&quot;Yuma MCAS-Yuma International&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, state, city' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.40113' group-percentage='0.0663842' measure-ordering='alphabetic' measure-percentage='0.532486' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:airport (airports.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albuquerque International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Illinois Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Metropolitan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durango-La Plata County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Smith Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gregg County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack McNamara &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Los Angeles International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Memphis International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Natrona County Intl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pease International Tradeport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reno/Tahoe International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Barbara Municipal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springfield-Branson Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;William B Hartsfield-Atlanta Intl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangor International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burbank-Glendale-Pasadena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chippewa County International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glynco Jetport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hilo International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juneau International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawton-Ft Sill Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mbs International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pueblo Memorial&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theodore F Green State&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waterloo Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adams &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellingham Intl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cape Girardeau Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;City of Colorado Springs Muni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forbes &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greater Peoria Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Idaho Falls Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kent County International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McGhee-Tyson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muskegon County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Owensboro-Daviess County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raleigh-Durham International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Diego International-Lindbergh &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southeast Texas Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trenton-Mercer County &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wichita Mid-Continent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arcata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlotte County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas Love &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eglin Air Force Base&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gainesville Regional&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James C. Johnson Petersburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Crosse Municipal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luis Munoz Marin International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newport News/Williamsburg International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phoenix Sky Harbor International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roanoke Regional/ Woodrum &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Savannah International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Illinois-Willard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Billings Logan Intl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Nebraska Regional &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corpus Christi International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagle County Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Wayne International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Hole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Klamath Falls International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisville International-Standiford &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercedita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Castle County &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pellston Regional  of Emmet County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhinelander-Oneida County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe Municipal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Cloud Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;William P Hobby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Akron-Canton Regional&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bemidji-Beltrami County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Capital&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleveland-Hopkins Intl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dothan &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greater Rochester Int&apos;l&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Imperial County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ketchikan International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McKinney Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Beach International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pago Pago International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ralph Wien Memorial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Francisco International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southwest Florida International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tri-Cities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wiley Post Will Rogers Memorial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Austin-Bergstrom International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brownsville/S.Padre Island International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicago O&apos;Hare International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delta County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erie Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gillette-Campbell County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Helena Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joplin Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laredo International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette County Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ogden-Hinckley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronald Reagan Washington National&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shreveport Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ted Stevens Anchorage International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Youngstown-Warren Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barkley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippewa Valley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detroit Metropolitan-Wayne County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Falls International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Golden Triangle Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honolulu International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lea County Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Clellan-Palomar Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monterey Peninsula&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quad City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salt Lake City Intl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sloulin Field International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tinian International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watertown Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bradley International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmira/Corning Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;General Mitchell International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hays Municipal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John F Kennedy Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lambert-St Louis International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Bend Muni&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Columbus Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rock Springs-Sweetwater County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shenandoah Valley Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tallahassee Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany Cty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benedum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Capital City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Metropolitan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dubuque Municipal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Collins-Loveland &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greater Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indianapolis International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Key &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach (Daugherty )&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meadows &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nantucket Memorial&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Beach International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Jose International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southwest Georgia Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tri-Cities Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilkes-Barre/Scranton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arnold Palmer Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismarck Municipal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlotte/Douglas International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dallas-Fort Worth International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Paso International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gallatin &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hagerstown Regional-Richard Henson &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James M Cox Dayton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lynchburg Municipal-Preston Glenn &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle Georgia Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niagara Falls Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piedmont Triad International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert Gray AAF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scott AFB/MidAmerica &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stillwater Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asheville Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Grass &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlottesville-Albermarle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dane County Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elko Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garden City Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisburg Intl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamestown Municipal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaGuardia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahlon Sweet &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pittsburgh International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roberts &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotts Bluff County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton Metro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valdosta Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yampa Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austin Straubel International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brainerd-Crow Wing County Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago Midway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Del Rio International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eppley Airfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;George Bush Intercontinental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hector International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wayne /Orange Co&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laramie Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missoula International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northwest Arkansas Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portland International Jetport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rogue Valley International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheppard AFB/Wichita Falls Municipal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampa International &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waco Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yellowstone Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baltimore-Washington International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo Niagara Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chico Municipal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evansville Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glacier Park Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry E. Rohlsen &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joslin Field - Magic Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laughlin/Bullhead International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marthas Vineyard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modesto City-County-Harry Sham &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogdensburg Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Provo Muni&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell Industrial Air Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sioux Gateway &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texarkana Regional-Webb &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Dulles International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yuma MCAS-Yuma International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena County Regional &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Binghamton Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Wisconsin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Craven County Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Iowa &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fresno Yosemite International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulfport-Biloxi Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kodiak &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lovell &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merle K (Mudhole) Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Orleans International &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria Pub/Capt G Allan Hancock &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St George Muni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tweed-New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilmington International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albert J Ellis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bert Mooney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cedar City Muni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia Regional&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duluth International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Lauderdale-Hollywood Int&apos;l&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenville-Spartanburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inyokern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Key West International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island - MacArthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne International &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashville International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm Springs International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redding Municipal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Obispo Co-McChesney &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane Intl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tri-State/Walker-Long &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Will Rogers World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene Regional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barnstable Mun Boardman/Polando &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bush &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chisholm-Hibbing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devils Lake Municipal-Knoke &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fayetteville Municipal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Houghton County Memorial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalamazoo County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lehigh Valley International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McAllen Miller International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery Regional Apt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orlando Sanford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Municipal-Baldwin &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Angelo Regional /Mathis &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sonoma Co&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toledo Express&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wendover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aspen-Pitkin Co/Sardy &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise Air Terminal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherry Capital&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellington &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gen Edw L Logan Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg-Laurel Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Foss &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mammoth Yosemite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis-St Paul Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pocatello Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rochester International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seattle-Tacoma Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syracuse-Hancock Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valley International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yeager&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Birmingham International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleston AFB/International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyril E. King&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Easterwood &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Friedman Memorial&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gunnison County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kona International At Keahole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lubbock International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Oakland International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newark Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philadelphia Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rickenbacker International &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sarasota Bradenton International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Petersburg-Clearwater International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler Pounds &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worcester Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baton Rouge Metropolitan, Ryan &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canyonlands &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati Northern Kentucky Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickinson Municipal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flagstaff Pulliam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Falls Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntsville International &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston-Nez Perce County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McCarran International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Outagamie County Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rafael Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Bend Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Cty &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westchester Cty&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1349391092679319552:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;April&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Feburary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;May&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:airport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ACY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BET&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BTM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CLD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DAY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ENV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FWA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HDN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LAW&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MQT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OTZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PVD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SBA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SPI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TUL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ABE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ASE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BOI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CGI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GRR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IAG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LNK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MKG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OKC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ROC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SIT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WYS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ABY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AVL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BQN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CIC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CWA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EGE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FNT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GTF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IFP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KTN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MMH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SLC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TOL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AGS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BUR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CMH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EVV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GFK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HOB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ISP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LCH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MEM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MSP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PGD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RDM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SCE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;STC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TXK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ADK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BFF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BTR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DBQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GCC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HIB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;INL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MDT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MRY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PAH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PWM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SBN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SPN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ACK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AVP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BRD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CID&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CYS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EKO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FOE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GTR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ILG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MBS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MOB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ORF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PSG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SMF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TPA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;APN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BMI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CDV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DRT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GRI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HYS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JAX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LIT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PIH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RNO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SHD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VPS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CRW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DVL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FLG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GSO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IAH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JMS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LRD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MLB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OMA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PNS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ROW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SJC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;XNA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AMA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BJI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DLH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FAI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GPT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HSV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JAC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LGB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MHK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MYR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PIA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RIC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SGF&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VEL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AZO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CIU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DAB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ELM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FSD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GUC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ILM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LAR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MCI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MOD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ORH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PSP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SMX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AKN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BHM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CMI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DHN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EWN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GGG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HOU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ITH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MFE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MSY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PHF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RDU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SDF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;STL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TYR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BIL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BZN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CMX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DIK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GJT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HPN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ITO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LFT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MFR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MTJ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RFD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SEA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;STS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TYS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ANC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BLI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DRO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GRB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HYA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JAN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LIH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MHT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OAJ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PIB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RKS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SGU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SUN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VLD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BNA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CEC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CPR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DSM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FAY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GRK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LMT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MKE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OGG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PIT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ROA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SHV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SWF&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WRG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ADQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BFL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BTV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DCA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ESC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GCK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HLN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IPL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LBB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MDW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MSN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PBI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RAP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SBP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SPS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TVC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ACV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BDL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CKB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ELP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IMT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MCN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MOT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OTH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PUB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SAV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TTN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ABQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ATW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BPT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CSG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EAU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FLL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GSP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ICT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JNU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LSE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OME&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PPG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SJT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TKI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;YAK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BIS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CNY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DLG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EYW&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GNV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HRL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IYK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MGM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MVY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PHX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RHI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;STT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AEX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BGM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BUF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EUG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GEG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HNL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ISN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LBE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MEI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MSO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PDX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RDD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SCC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SRQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TWF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ABR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BQK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CVG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EFD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FNL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IDA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KOA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LWS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MLU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ONT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PSC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RSW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SJU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TLH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;YUM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Carrier Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AirTran Airways Corporation, Allegiant Air, American Eagle Airlines Inc. and 10 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Carrier Name (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alaska Airlines Inc., American Airlines Inc., Delta Air Lines Inc. and 7 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:airport (airports.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albuquerque International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Illinois Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Metropolitan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durango-La Plata County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Smith Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gregg County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack McNamara &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Los Angeles International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Memphis International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Natrona County Intl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pease International Tradeport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reno/Tahoe International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Barbara Municipal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springfield-Branson Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;William B Hartsfield-Atlanta Intl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangor International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burbank-Glendale-Pasadena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chippewa County International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glynco Jetport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hilo International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juneau International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawton-Ft Sill Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mbs International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pueblo Memorial&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theodore F Green State&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waterloo Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adams &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellingham Intl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cape Girardeau Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;City of Colorado Springs Muni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forbes &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greater Peoria Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Idaho Falls Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kent County International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McGhee-Tyson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muskegon County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Owensboro-Daviess County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raleigh-Durham International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Diego International-Lindbergh &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southeast Texas Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trenton-Mercer County &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wichita Mid-Continent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arcata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlotte County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas Love &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eglin Air Force Base&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gainesville Regional&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James C. Johnson Petersburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Crosse Municipal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luis Munoz Marin International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newport News/Williamsburg International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phoenix Sky Harbor International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roanoke Regional/ Woodrum &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Savannah International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Illinois-Willard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Billings Logan Intl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Nebraska Regional &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corpus Christi International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagle County Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Wayne International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Hole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Klamath Falls International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisville International-Standiford &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercedita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Castle County &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pellston Regional  of Emmet County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhinelander-Oneida County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe Municipal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Cloud Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;William P Hobby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Akron-Canton Regional&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bemidji-Beltrami County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Capital&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleveland-Hopkins Intl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dothan &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greater Rochester Int&apos;l&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Imperial County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ketchikan International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McKinney Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Beach International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pago Pago International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ralph Wien Memorial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Francisco International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southwest Florida International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tri-Cities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wiley Post Will Rogers Memorial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Austin-Bergstrom International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brownsville/S.Padre Island International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicago O&apos;Hare International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delta County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erie Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gillette-Campbell County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Helena Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joplin Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laredo International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette County Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ogden-Hinckley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronald Reagan Washington National&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shreveport Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ted Stevens Anchorage International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Youngstown-Warren Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barkley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippewa Valley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detroit Metropolitan-Wayne County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Falls International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Golden Triangle Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honolulu International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lea County Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Clellan-Palomar Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monterey Peninsula&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quad City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salt Lake City Intl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sloulin Field International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tinian International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watertown Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bradley International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmira/Corning Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;General Mitchell International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hays Municipal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John F Kennedy Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lambert-St Louis International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Bend Muni&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Columbus Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rock Springs-Sweetwater County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shenandoah Valley Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tallahassee Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany Cty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benedum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Capital City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Metropolitan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dubuque Municipal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Collins-Loveland &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greater Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indianapolis International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Key &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach (Daugherty )&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meadows &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nantucket Memorial&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Beach International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Jose International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southwest Georgia Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tri-Cities Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilkes-Barre/Scranton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arnold Palmer Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismarck Municipal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlotte/Douglas International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dallas-Fort Worth International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Paso International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gallatin &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hagerstown Regional-Richard Henson &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James M Cox Dayton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lynchburg Municipal-Preston Glenn &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle Georgia Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niagara Falls Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piedmont Triad International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert Gray AAF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scott AFB/MidAmerica &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stillwater Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asheville Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Grass &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlottesville-Albermarle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dane County Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elko Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garden City Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisburg Intl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamestown Municipal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaGuardia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahlon Sweet &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pittsburgh International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roberts &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotts Bluff County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton Metro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valdosta Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yampa Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austin Straubel International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brainerd-Crow Wing County Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago Midway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Del Rio International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eppley Airfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;George Bush Intercontinental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hector International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wayne /Orange Co&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laramie Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missoula International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northwest Arkansas Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portland International Jetport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rogue Valley International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheppard AFB/Wichita Falls Municipal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampa International &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waco Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yellowstone Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baltimore-Washington International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo Niagara Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chico Municipal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evansville Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glacier Park Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry E. Rohlsen &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joslin Field - Magic Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laughlin/Bullhead International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marthas Vineyard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modesto City-County-Harry Sham &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogdensburg Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Provo Muni&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell Industrial Air Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sioux Gateway &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texarkana Regional-Webb &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Dulles International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yuma MCAS-Yuma International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena County Regional &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Binghamton Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Wisconsin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Craven County Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Iowa &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fresno Yosemite International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulfport-Biloxi Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kodiak &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lovell &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merle K (Mudhole) Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Orleans International &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria Pub/Capt G Allan Hancock &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St George Muni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tweed-New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilmington International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albert J Ellis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bert Mooney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cedar City Muni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia Regional&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duluth International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Lauderdale-Hollywood Int&apos;l&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenville-Spartanburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inyokern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Key West International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island - MacArthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne International &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashville International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm Springs International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redding Municipal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Obispo Co-McChesney &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane Intl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tri-State/Walker-Long &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Will Rogers World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene Regional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barnstable Mun Boardman/Polando &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bush &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chisholm-Hibbing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devils Lake Municipal-Knoke &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fayetteville Municipal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Houghton County Memorial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalamazoo County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lehigh Valley International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McAllen Miller International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery Regional Apt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orlando Sanford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Municipal-Baldwin &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Angelo Regional /Mathis &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sonoma Co&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toledo Express&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wendover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aspen-Pitkin Co/Sardy &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise Air Terminal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherry Capital&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellington &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gen Edw L Logan Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg-Laurel Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Foss &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mammoth Yosemite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis-St Paul Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pocatello Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rochester International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seattle-Tacoma Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syracuse-Hancock Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valley International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yeager&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Birmingham International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleston AFB/International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyril E. King&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Easterwood &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Friedman Memorial&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gunnison County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kona International At Keahole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lubbock International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Oakland International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newark Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philadelphia Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rickenbacker International &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sarasota Bradenton International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Petersburg-Clearwater International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler Pounds &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worcester Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baton Rouge Metropolitan, Ryan &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canyonlands &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati Northern Kentucky Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickinson Municipal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flagstaff Pulliam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Falls Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntsville International &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston-Nez Perce County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McCarran International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Outagamie County Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rafael Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Bend Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Cty &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westchester Cty&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:carrier_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PSA Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ExpressJet Airlines Inc.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spirit Air Lines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Envoy Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Endeavor Air Inc.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allegiant Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinnacle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American Eagle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;US Airways Inc.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AirTran Airways Corporation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SkyWest Airlines Inc.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:carrier_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PSA Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ExpressJet Airlines Inc.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spirit Air Lines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Envoy Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Endeavor Air Inc.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allegiant Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinnacle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American Eagle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;US Airways Inc.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AirTran Airways Corporation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SkyWest Airlines Inc.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:Calculation_1349391094473297953:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474334245:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474469414:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474547239:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474715176:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474752041:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474768426:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg: arr_delay:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473068575:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473150496:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473297953:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473531426:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473584675:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473875492:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094474334245:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094478700588:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488068152:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489063486:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:weather_delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652334158:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652371023:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652440656:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652534865:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094462717972:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487859252:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094652883026:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_ct:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: weather_ct:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:security_delay:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487965750:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:carrier_name:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Carrier : Name]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468005909:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468177942:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468263959:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469132314:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469279771:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469361692:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094472036381:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094462615571:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094468976665:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488018999:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:long:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:long:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:avg:arr_flights:qk:2]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:avg:arr_flights:qk:2]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:avg:arr_flights:qk:4]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[prc95:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094500548672:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094501011521:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094498680895:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_diverted:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[cum:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391092860329998:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391092860329998:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_ct:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094514778185:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_del15:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094504779842:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094504861763:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094506397764:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094506479685:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094506573894:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094514802762:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:arr_flights:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487744563:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:lat:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:lat:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:lat:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_ct:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:nas_delay:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487920693:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field=' month' />
        <field-sort-custom-order field='Calculation_1349391092679319552' />
        <field-sort-custom-order field='Calculation_1349391092718141443' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_flights' />
        <field-sort-custom-order field='arr_del15' />
        <field-sort-custom-order field='Calculation_1349391094446825489' />
        <field-sort-custom-order field='Calculation_1349391094447632402' />
        <field-sort-custom-order field='carrier_ct' />
        <field-sort-custom-order field=' weather_ct' />
        <field-sort-custom-order field='nas_ct' />
        <field-sort-custom-order field='security_ct' />
        <field-sort-custom-order field='late_aircraft_ct' />
        <field-sort-custom-order field='arr_cancelled' />
        <field-sort-custom-order field='arr_diverted' />
        <field-sort-custom-order field=' arr_delay' />
        <field-sort-custom-order field='Calculation_1349391092860329998' />
        <field-sort-custom-order field='Calculation_1349391092689137666' />
        <field-sort-custom-order field=' carrier_delay' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='F22' />
        <field-sort-custom-order field='iata' />
        <field-sort-custom-order field='airport (airports.csv)' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='lat' />
        <field-sort-custom-order field='long' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
        <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Different Delays' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Different Delays' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Delay by Carriers Yearwise' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Carrier Name' />
        <param name='target' value='Delay by Carriers Yearwise' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Carrier Name' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Delay by Carriers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Delay by Carriers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' worksheet='Delay for Top 10 Airports' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Delay by Airports' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cancelled or Diverted'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cancelled or Diverted</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Month' datatype='string' name='[Calculation_1349391092679319552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [ month] &#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;Feburary&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='SUM([Cancelled Arrival Count])/SUM([Arriving Flights Count])' datatype='real' name='[Calculation_1349391094515146827]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([arr_cancelled])/SUM([arr_flights])' />
            </column>
            <column caption='SUM([Diverted Count])/SUM([Arriving Flights Count])' datatype='real' name='[Calculation_1349391094515183692]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([arr_diverted])/SUM([arr_flights])' />
            </column>
            <column caption='SUM([Delayed Carrier Count])/SUM([Arriving Flights Count])' datatype='real' name='[Calculation_1349391094519586893]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([carrier_ct])/SUM([arr_flights])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Diverted Count' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1349391092679319552]' derivation='None' name='[none:Calculation_1349391092679319552:nk]' pivot='key' type='nominal' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1349391094515146827]' derivation='User' name='[usr:Calculation_1349391094515146827:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094515183692]' derivation='User' name='[usr:Calculation_1349391094515183692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094519586893]' derivation='User' name='[usr:Calculation_1349391094519586893:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]'>
            <groupfilter function='level-members' level='[tmn:Calculation_1349391092718141443:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;January&quot;</bucket>
              <bucket>&quot;Feburary&quot;</bucket>
              <bucket>&quot;March&quot;</bucket>
              <bucket>&quot;April&quot;</bucket>
              <bucket>&quot;May&quot;</bucket>
              <bucket>&quot;June&quot;</bucket>
              <bucket>&quot;July&quot;</bucket>
              <bucket>&quot;August&quot;</bucket>
              <bucket>&quot;September&quot;</bucket>
              <bucket>&quot;October&quot;</bucket>
              <bucket>&quot;November&quot;</bucket>
              <bucket>&quot;December&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Proportional to Total Arriving Count' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' value='Delay Causes'>
              <formatted-text>
                <run>Delay Causes</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <tooltip column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Airport'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>By Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 20 Delayed Airports]' derivation='InOut' name='[io:Top 20 Delayed Airports:nk]' pivot='key' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]'>
            <groupfilter function='member' level='[io:Top 20 Delayed Airports:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Yuma MCAS-Yuma International&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1239' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]' value='In / Out of Top 10  Airports'>
              <formatted-text>
                <run>In / Out of Top 10  Airports</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delay by Airports'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'> Delay by Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]'>
            <groupfilter function='level-members' level='[carrier_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Cherry Capital&quot;' />
              <groupfilter from='&quot;Chicago Midway&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Elko Regional&quot;' />
              <groupfilter from='&quot;Elmira/Corning Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;McGhee-Tyson&quot;' />
              <groupfilter from='&quot;Meadows &quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Miami International&quot;' />
              <groupfilter from='&quot;Midland International&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Watertown Intl&quot;' />
              <groupfilter from='&quot;Westchester Cty&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Yuma MCAS-Yuma International&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='35048589.031235337' min='24753073.694885064' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='6177843.4610888883' min='2822114.3360016025' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min='1000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport Name:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Airport Code:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Delay:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6584098339080811' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Airports_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'> Delay by Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]'>
            <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;George Bush Intercontinental&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]'>
            <groupfilter function='member' level='[carrier_name]' member='&quot;American Airlines Inc.&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]'>
            <groupfilter function='level-members' level='[io:Top 10 Delayed Carriers:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='40712245.208655387' min='19467615.368795577' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='7191568.523452498' min='1686775.1144263207' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min='1000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' value='In / Out of Top 10 Carriers'>
              <formatted-text>
                <run>In / Out of Top 10 Carriers</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport Name:&#9;&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Airport Code:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Delay:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&gt; minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier Delay:   </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Late Aircraft Delay:  </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>NAS Delay: </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>Weather Delay : &lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>Security : &lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6584098339080811' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Carriers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay by Carriers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[pcto:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcto:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcto:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name,Airport Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[airport (airports.csv)]' />
              <groupfilter function='level-members' level='[airport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]'>
            <groupfilter function='member' level='[io:Top 10 Delayed Carriers:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='DESC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name,Airport Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1606' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Carrier Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Average Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Late Aircraft Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average Delay: </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delay by Carriers Yearwise'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay by Carriers Yearwise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391094447632402]' derivation='Avg' name='[avg:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Year-Trunc' name='[tyr:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]'>
            <groupfilter function='level-members' level='[airport (airports.csv)]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='ASC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]' />
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]' scope='cols' value='Year (Month wise)' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay for Top 10 Airports'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay for Top 10 Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Dallas-Fort Worth International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Denver Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;George Bush Intercontinental&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;John F Kennedy Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Los Angeles International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Newark Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;San Francisco International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;William B Hartsfield-Atlanta Intl&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' direction='DESC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1303' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max='75000.0' max-size='1' min='25000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delayed Flight Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delayed flights count by Cause</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column-instance column='[ weather_ct]' derivation='Sum' name='[sum: weather_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_ct]' derivation='Sum' name='[sum:late_aircraft_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_ct]' derivation='Sum' name='[sum:nas_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_ct]' derivation='Sum' name='[sum:security_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: weather_ct:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='Arriving Flights' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Other Delays' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk] + [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Different Delays'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Different Delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='[Total Delay]/[Total Delay]' datatype='real' name='[Calculation_1349391094472744990]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='[Calculation_1349391092689137666]/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Arrival Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094474784811]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([ arr_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Average Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094478749741]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([Calculation_1349391094447632402])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Carrier Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094478942254]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([ carrier_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Late Aircraft Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479024175]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([late_aircraft_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([NAS Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479102000]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([nas_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Security Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479196209]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([security_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Weather Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479257650]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([weather_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1349391094472744990]' derivation='User' name='[usr:Calculation_1349391094472744990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094474784811]' derivation='User' name='[usr:Calculation_1349391094474784811:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094478749741]' derivation='User' name='[usr:Calculation_1349391094478749741:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094478942254]' derivation='User' name='[usr:Calculation_1349391094478942254:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479024175]' derivation='User' name='[usr:Calculation_1349391094479024175:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479102000]' derivation='User' name='[usr:Calculation_1349391094479102000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479196209]' derivation='User' name='[usr:Calculation_1349391094479196209:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479257650]' derivation='User' name='[usr:Calculation_1349391094479257650:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]'>
            <groupfilter function='level-members' level='[tmn:Calculation_1349391092718141443:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='Proportional of total' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' value='Differrent Delays'>
              <formatted-text>
                <run>Differrent Delays</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='336' />
                <format attr='maxwidth' value='336' />
                <format attr='minheight' value='140' />
                <format attr='maxheight' value='140' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</rows>
        <cols>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk] * [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='Different flight delays'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Different flight delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[ arr_delay]' derivation='Sum' name='[sum: arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Others ( in Minutes )' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='Arrival Delay (in minutes)' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk:4]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk] + [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Flight Counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Avg' name='[avg:arr_flights:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]' />
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='DESC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' />
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:arr_flights:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='40206' id='1' name='Different Delays' w='99879' x='1690' y='1260'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7376' id='6' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' w='16811' x='78538' y='11850'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7618' id='8' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' w='16811' x='78538' y='19589'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7618' id='7' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16811' x='78671' y='3869'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='59129' id='10' name='Cancelled or Diverted' w='39535' x='58937' y='40750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='12125' id='16' name='Cancelled or Diverted' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' w='14100' x='83500' y='41250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='54983' id='17' name='Different flight delays' w='56186' x='1448' y='41008'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='22222' id='18' name='Different flight delays' pane-specification-id='3' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' w='9604' x='66567' y='6415' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='57920' id='1' name='Delay by Airports' w='97010' x='1794' y='2056'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='8' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' w='16800' x='78300' y='23750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='9' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16800' x='78300' y='9000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='11000' id='11' name='Delay by Airports' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' w='14000' x='79600' y='31500'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='7' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' type='filter' w='16800' x='78200' y='16000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='41596' id='12' name='Delay by Carriers' w='98804' x='0' y='58888'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='8706' id='18' name='Delay by Carriers' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' w='9302' x='68837' y='57074'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='5488' id='9' mode='checkdropdown' name='Delay by Carriers' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='11061' x='79107' y='88913'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='39078' id='26' name='Delay by Carriers' w='93515' x='741' y='61142' />
        <zone h='7245' id='27' name='Delay by Carriers' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' w='8862' x='87516' y='59605' />
        <zone h='6257' id='28' mode='checkdropdown' name='Delay by Carriers' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' type='filter' w='9897' x='76649' y='60922' />
        <zone h='58836' id='29' name='Delay by Airports' w='96313' x='1035' y='878' />
        <zone h='11636' id='31' name='Delay by Airports' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' w='9056' x='87710' y='43908' />
        <zone h='9660' id='32' name='Delay by Airports' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' w='9056' x='87128' y='33809' />
        <zone h='8013' id='33' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='10349' x='86158' y='18990' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 4'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='56469' id='1' name='Delay by Carriers Yearwise' w='82743' x='462' y='726'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='6651' id='6' mode='checkdropdown' name='Delay by Carriers Yearwise' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16795' x='83436' y='1814'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='43773' id='7' name='Delay by Carriers Yearwise' pane-specification-id='2' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' w='14638' x='83975' y='9432'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='43908' id='8' name='Delay for Top 10 Airports' w='71410' x='65' y='55873' />
        <zone h='38090' id='9' name='Flight Counts' w='33312' x='72380' y='60922' />
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='782' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98168' id='1' param='vert' removable='false' type='layout-flow' w='99040' x='480' y='916'>
            <zone fixed-size='138' h='15808' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99040' x='480' y='916' />
            <zone h='82360' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99040' x='480' y='16724'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Flight Delays due to various reasons peaks at around June-July and also around December. July 2014 was an exception, worth exploring the root causes and scenarios. We see that the security check delay contributes the least and the arrival delay contributes the most towards the overall delay. We also see that most flights get cancelled during January-February and most get delayed aound May-July period. This may be due to extreme weather or holiday seasons as we see it peaks around summer and winter.' captured-sheet='Dashboard 1' id='1'>
                    <currentDeltas>
                      <worksheet name='Cancelled or Diverted'>
                        <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]'>
                          <groupfilter function='member' level='[tmn:Calculation_1349391092718141443:ok]' member='#2013-11-01 00:00:00#' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Different Delays'>
                        <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]'>
                          <groupfilter function='member' level='[tmn:Calculation_1349391092718141443:ok]' member='#2013-11-01 00:00:00#' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Different flight delays'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>#2013-11-01 00:00:00#</value>
                                <value>32795.789473684214</value>
                                <value>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;</value>
                                <value>2.3228591603543456</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                  <story-point caption='Here we see the average delay based on different carriers spread across different airports in USA. We see that when all airports are taken into considerations across the map, Southwest Airlines gets delayed the most followed by United Air and American Airlines . When we click Southwest Airlines in the bottom plot, we see the top 3 airports contributing towards its delay are Chicago , Las Vegas and Baltimore. Similarly we can see by combining different airport names with year that which flights were delayed the most.' captured-sheet='Dashboard 2' id='2'>
                    <capturedDeltas>
                      <worksheet name='Delay by Airports'>
                        <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
                          <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
                          <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='This is another Geolocation plot of the airports to discover more information on them. We see if we take all the years and all the carriers, the airport which caused the most delay is Chicago O&apos;Hare airport followed by Atlanta and Texas. Here we can also see for different carriers, which airports caused the most delay e.g When the carrier is Delta airlines, we see that Atlanta caused the most delay. For Chicago airport, Southwest airlines is not even in top 10 delayed carriers. We can also hover our mouse on the bottom plot to see the exact geolocation of that particular airport.' captured-sheet='Dashboard 3' id='3'>
                    <capturedDeltas>
                      <worksheet name='Delay by Airports'>
                        <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]'>
                          <groupfilter function='member' level='[carrier_name]' member='&quot;Southwest Airlines Co.&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='6183928.1169417361' min='2945832.213932029' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='36318642.212266952' min='24212765.904822033' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Delay by Carriers'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Southwest Airlines Co.&quot;</value>
                                <value>148920.66051411082</value>
                                <value>0.17236488611552994</value>
                                <value>0.21787532066589027</value>
                                <value>0.20510200238995918</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='So now,we only take the top 10 airports and top 10 carriers based on the delay.We see that the results change a bit. Now when we plot all the 10 airports on the map and plot the corresponding airlines which got most delayed(within top 10 overall).We see though Southwest is still leading the delay charts, but when we select individual airport, the situation changes.eg. For Atlanta airport, Delta and ExpressJet Airlines contribute to most of delay. Similarly, for Chicago, Southwest is not even in top 10 delayed carriers. This means the most delay of Soutwest is not from the most delayed airports but rather spread over the all the airports.' captured-sheet='Dashboard 4' id='4'>
                    <capturedDeltas>
                      <worksheet name='Flight Counts'>
                        <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]'>
                          <groupfilter function='level-members' level='[airport (airports.csv)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Different flight delays'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delayed Flight Count'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='312'>
            <card pane-specification-id='3' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cancelled or Diverted'>
      <cards>
        <edge name='left'>
          <strip size='468'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='202'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094514778185:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Carriers'>
      <cards>
        <edge name='left'>
          <strip size='177'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='156'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airport'>
      <cards>
        <edge name='left'>
          <strip size='221'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='195'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Carriers Yearwise'>
      <cards>
        <edge name='left'>
          <strip size='400'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='197'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airports'>
      <cards>
        <edge name='left'>
          <strip size='468'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='312'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action(Carrier Name)]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Carrier : Name]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airports_1'>
      <cards>
        <edge name='left'>
          <strip size='390'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='390'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' type='filter' />
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay for Top 10 Airports'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Different Delays'>
      <cards>
        <edge name='left'>
          <strip size='154'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468005909:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468177942:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468263959:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468333592:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469132314:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469279771:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469361692:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094472036381:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cancelled or Diverted'>
          <zoom type='entire-view' />
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Different Delays'>
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Different flight delays'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Delay by Airports'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Delay by Carriers' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Delay by Airports'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Delay by Carriers' />
      </viewpoints>
      <active id='29' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Delay by Carriers Yearwise'>
          <zoom type='entire-view' />
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Delay for Top 10 Airports'>
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Flight Counts'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
    </window>
    <window class='worksheet' name='Flight Counts'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='200'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cancelled or Diverted' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      iMs0W8oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Airport' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delay by Airports' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delay by Airports_1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Carriers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Carriers Yearwise' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3deXAcV37g+W9m1n0CqCqgcIM4CIA4CJIixUuk1JJa3W273fZsrz09442Z
      dtu7450IR+xuzE54N2Z7wuvZ2dhZr2djJmbscU9sh73unu3ucR9qtSSqKYmSSPECSYAAcQOF
      QgEF1H1feewfkKhmQwdBgSxCyM8/QKGyMl8W8pf5Xr5fvidomqah0+1RYrULoNNVk2GnVqRp
      GqqqoqoqgiDs1Gp1uodqWwFQKWSZW1ymqa2DSGgJk8ODVSyzkSrSt78bUdy8oEiS9FAKq9Pt
      tG1VgZbm55A1jWw6htnZQDmfIZkt0lxrI54pPKwy6nQPzbYCwGgy09beTiISpVQqUpFlFFmm
      UCrqZ33driRs5y6QqlRYWlqmqbWdZGQVs9OLWSgTSRVoa24ENtsBejDodottBcAneb8hrAeA
      brfQb4Pq9jQ9AHR72o71A+wVmqYxuRThZ5fn0DR44VgXQ531et/HLqW3AbZpNhjjj/7yPOWK
      AoDRIPLHv/sM/e2+KpdM9yD0KtA2XRhbvnvwA1RklQu3lqtYIt2noQfANpmNW69upg/5m253
      0ANgm557opMah+Xua5fdzAtHu6pYIt2nsa02QC6dIJrK0djgY30tjMvjQ1SKaAYrLrt1T7QB
      NE0jni7w5s0AGhpnDrbjddv0RvAuta0AuH1rlNr6ZuxCnoWoQv/+ZuanFxEE6B88gLAHAkD3
      2bKtAMhn06wFl7HXt2JQC6xHI5gNHgzkaeruQlQUNE17DM+GKm+eewXB2cCZ44e3vBcOx7CT
      oejqxGf7+DXFw2Gcfj9GYG1pilBaYqirnpJow2U1Mj87hcfTgNHuxG7+6LvMM+PXWYrkePrM
      aUwGvSZaLdvqB0jEouQqGm61xMZGFLeniUJilZLRiVEQQJIe0ytAiUgkwZGBo1y/9Cbr0TQO
      dz3Hnxnk0stXGL09yZfOHODGtQDdDWZEUw0zM/P0729DzidYCGfpaHCS1+zEZkepf+Jpnh45
      QCAUpaRCLq6wUdT4yfU5mhrdaLKMYLYyNj6Br7ENNR0iJdtwGQrYfJ2cONxPMJLhi59/jonR
      SyyubDB07Cwd/ppqf1F7zrZOPc3tnQwPD+H11XNgYJAWv4ee/iF6uzt43M759xJ49otfZvzS
      BSK5CsNdXpZXIqTTCUqSg+GhIbxuByee+hyIFhZuvYO/3kE4VeL27TvU1dbg8zeSia1S39LN
      4EAfUGF26g4ri/OsxVIUSiVGjj2FwwTlYoFCscLA4eOYKTE5NUut24m/uYXVUBAQKBVy5PN5
      1iJJjo30sb4Rq/aXtCftkY4wjVvX3sXqbcfvEJgJJTi4v5mr49N0d/aSDC/i8vpx1TVQzqfI
      plPUedyk8wImJcVMKEV3k4uljTxD3Y1MLoQZ6WslnhdxmhRSmTwmixlRsqKUMkiShCZKiAYj
      cqlINh4mXjZSYyyTVW0c6Gknn4owOrnEocFuxiYXeWJkP4msRr3HWe0va0/ZIwGg0304vfWl
      29P0ANDtaXoA6PY0PQB0e5oeALo9TQ8A3Z6mB4BuT9MDQLenbSsXKDA/Q14WaPXXsRAIUd/U
      TnpjGdXkpLe744EKsJHIMb0cpaXeTYff/Rgm0uk+y7YVAIqqIJcVwqsxegYHCc1PIho9mLU8
      FU27mw16v53L86sJ/vn/c4FcsYJBEvmDXz/C2ZF2bl19h/V0hTNnzmAx3nuRWltdpcFXx9Jq
      jM725o9df7mYJl2Q8NbaUUtxfnJ+nF9/4RSRZBZfXQ3lRJBAzkqN1YjP4/7I9cRWF7k2Psvw
      0ZM01jnua990u8O2AsBd60VMRClWZDbC6yiClUo+QUkUMAgCwjazQV+5skCuWAFAVlR+dHGG
      Z5/oIpNO4aptIzw/zp2lVdpaaslqbZCZ4/r1G3z+S7/KlXcvMTPfgcdpJrw4Q1ffAMlSheDM
      JC2dfayFY3Q1m7g+VeDrX/8N5m/NY7doZAt5FgJB3jr3EkO9bcSNDcQjMu++8SqKtZaOOiNj
      syF69zURyQt88YVnGZ9a5Itf+iLx0CwvvvQWDc2dnDgysP1vW/fY2VYA2KxmFPy0e9xEIxGa
      OzspZpNoBisisN2kIuMvPUtrMmy+7ht+gsDkDa4EKjx96jDTk9cpCA7y6Qy9/QfoaK4nffAo
      ajGDktvAWd/CpduLtDlkmvZ1U+/1UUpFUMw1DAx0YARmFhaQDBK37yxSqpRp7R6g3W8kHlUp
      FEs0tvcAMvOzE3R27MfXXE987AbxnIJZVFiPJVkPrrB/8Agri7MoiqLnPH0GVDUZLhzP8s++
      9TrriRx2i5H/8WunONjtZ215jvWMytD+Nm7emmT48CGmbl2nrqkDK0VSZQlvrQtNVRDkIprV
      TS6ZpN7j5NrobQYG+7gzNcfBg8NMT0zQN3KQbCJBba2bZCwBBiOiKGI3CeQqoCgqkgCgYaDC
      xFyI3n2NzC5HOHzwAKgyN65dp3tgmMWZSbr7h8llktT79KFQdruqZ4OWKworkTT1tXbsFqPe
      CNY9UlUPAJ2umvR+AN2epgeAbk/TA0C3p+kBoNvT9ADQ7Wl6AOwhmqYhK+p9p6rsBfoEGXtE
      LJXnr14dYymcYmCfj7/3/BA2s7Haxaq6bQdAIh7H5XKwHAhS4/MjKQVUg40a5yeMKairGlXV
      +Hc/usbVqVUAFtcSiILA1780suc7HrdVBcomNrgxNkUyukKiCDarRDAUZXV5CeWTP66rkkK5
      wlwofs/fJpciqHpVaHtXgDtT06jlIqrFS2dTmbm5GcxmLwbyKJqGts10aN2jYRQFmr1OEpni
      3b91+N2oqoqmqlUsWfVtOxViLbSKw24mGArj9jZSSKyimpz0dLaDngrx2FpeT/HnP77OajRD
      T0sd/+grT1DrtFa7WB9L0zTuBKKML6zT1VTH4f2NiOLOVtn0XKA9RFFUihUFq8mw4wfSw3B1
      apV/8VdvoWoaAvD1XznEl0/17ug29Nugj7FSLsXVa6OUlY8+R2UymftenySJ2C0GVldX0YB4
      fLNdoKkKqXTm7uuPpKnMTI4RSWTve5ufxvnRxbvtFA147drCjm9Dvw36GDv/2msMHz1ONp1k
      bPQ6PYPDKLKGoJR4/eUfMXD6SyyPX6K+c5A2v4dyOoGnpZl0rsLS9B36hoeZvDFKU6uHF396
      g2/8we9gVdJ8///7Ib//h39AKpUiFV2jIAusxzN0NDcQDi6wkZY5NLCP67emGBnqY/TWHY6f
      Pk3o9rsU3R00iDIX3zyPr6OfnvbGh7b/da57q2ge987fadQD4DF29umzXLhwnmTezNMvPMvt
      d18DazOCnKa9u5/hvi5ykRWo5FmcTyAqSS7fmsPjFknLEtLMNOl8mTa7g4MHD+GymLj5+kW8
      DTYuXJ3DmFumWMjz7DNnWI/fYX5hAZNRot5q4KXzF3BbDdyemKdcKZEvykSTBQ4ebEYNXkVs
      PszS7LWHGgBfPXuAhVCC+bU4/joH/+ALB3d8G3oAPMaCywFEo42RkT6uv/MmrV0DrM1NkcPE
      QLuH21Pz+Bs3D0CPscJ0rp260hRPHOrn0ug0TQ1+8tkspZKRUjZEujiE6Ong7z/zZcbGxsDm
      w2KxYDKa8HnqUCt2LBYzDgMM25wEQxs0tzQwPxOnJCuMHBnijZd/xv7+HmJ33sbbso9wOIzf
      738o+1/jtPAnv/c5UrkSTpsJg7TzNXa9EazbUXI5z+XL1xk4fIwau/me9zYPNYFUKklNzSdN
      B6WhadztqAssLNCyr5N4NILvvUdRY7EYqqreff3hq9GYuzOG4Gigq21roOpXAN2OGn3rPL7e
      J9HKBd6+coG61l6skoIJuH7pHNK+E7B+B7O7kX1tLVjFCrLNg1BKszS/QFNXH2sLU3j9fn7y
      k1f4nd/9ffxuiXfeOMdRy29hKGUpZOLEchBbD9LV1UViY4XFlRhPHj/M6LVRegcGmRobY/CJ
      k5BYYF12MOKxc+3SBQRHA4eHeu9O6aUHgG5HHTnzHJfeOs9CrkBd90lWlyYBDYcg0NDWSdvI
      EAujaWrtRqLhFcKZIrbyKGAlWDGhmpYoFytUBBOHDx/BX+dgZeISBYODmzduUmdRUOUyZ599
      gQvrQebn57FZrYy01vDKm29hFg0EloKUZZlcPk8lmaGpvROjkicv1VBZD8JgL+9HgH4bVLej
      wsEl8hWRjgNHSC2N4vY1YTdqrCbztHa0M3XrFn6/n1qPj/379+N2ezDZPDz1/Fl8JpUGXwNm
      ixFFAbNQJBzPkhdd/Fd//2sM7KunsbGRzu79mAwijY2NNDY20uD3Y6vxcmh4GKMo0VDvwWQw
      oCgqPcOHmL36FlMrScisYXTUEVkPo75X8dfbALo9Tb8C6Pa0bQWAplR499JV8pk4t26NsRpJ
      Mj0xxp3ZxW2PCqfTPQ621QgOBgLYHHYi63F6hwZZmZ9AMvmwkHugwXF1umrbVgDIcoWNtRDW
      9hZWQyFU0U4pG6MoibQ+wOC4Ol21bbsRXC6VMZqMJOJx3LV1lPIZNMmM3WrWG8G6XUe/C6Tb
      0/S7QLo9TQ8A3Z6mB4BuT9MDQLen6QGg29P0ANDtaXoA6Pa0LT3Bt66+TbIkMTAwiKfGyR4f
      OU/3GbflCiAKkE5EuXrxAquJXDXKpNM9MluuAE5XDeZ4np6BQzTX2e95L52IEsuUaGvysjC3
      SK2/BYOcQzU5qHPZf3lVOt1jb8sVIBRJYDfLxKJbB0kymK2IpTRLi/NkFCMuh5HV9RQbwYA+
      OK5uV7rnCpBJxXG7a1kNxPB3e7curZRJZou0dO7HL1aYmZnCYvJioKAPjqvble4JgHwmxfrq
      MiVMaIq8ZeFEPIFkNCEXMwSiMerq2yjE16iYHBgFAfR0aN0usyUb9MLrr2K0WZEEJ8eOjWxr
      ZXo2qG632dIGaG9pYS0Ypq2npxrl0ekeqXsCYCM4y43JOQwmI4qq1+N1n333tAHmAyscOjSC
      oCkE5u7Q7DlarXLpdI/EPQGwr6OdxWAIgPaunZ2IQKd7HN0TAP6WTpRKmTxWzJI+haauujRN
      Q1l6C3npHST/EIb9X0CQdnY0zy1rWwiGQc0TsTbh9WzvLpBOt5OU5Xcp/PgPQa1QEUTMlRym
      4d/a0W1suQvU5vewFinQtq9dH+xKV1VK8F1QK5svNBUlcHHHt7ElAOaXArS1+PjZ979DIHL/
      80/pdDtNahwB4f0+JQGp6dCOb2NLR9jt0UsEwzEaGttp7+7B47Tc98r0jjDdTtJUBXnqp8hL
      byH5hzEOfxXBcP/H4/3Y0gaQZYVUIkrz/kPbOvh1up0miBLGA1/GeODLD20bW6pAqsGC3SKR
      TSa3LLweCnDr1i0iG2Fu3RojtJFg6vYtJmfm9faC7gNqiTcuXPrExSKRyCcuM3b5HeL5CrFI
      hPfntJ+fnycejfAxs8eCKrOwGPjE9W+5AiiVCs/96m9hNm29Dep0uVgKholHUvQOD7IyN4HB
      XI9RHxxX9wuiyzOsrqywkSly8eX/TEEWsNhrGej2MzsXoLGlnXAiicfpILkeZC6cpae1lvHp
      IP3tXqYD63QdOERfh59IfI3Yjdu4LCqRUIBAuoxQzOL3eAgF5lkMR+jp3s/i/CK+Jj/h+QX2
      H36SrqZa5hYWWZq+Rbok0dvdzNJKkqefPc0vHtlbAsBMkTfevEDvgYN0ttw7+VginsBklLC7
      rEyNjVPnayIdCVIwOmjTs0F177k5PkVdjYUbo2P427rJZtLUORwsrayyr7uLdCzFsZMnufnO
      BZQCtLfuY35xCrGQZiNj49Sp08wF14nMXGetZEdZmsXf4EG0WTh16gTvvn6edDKJxW7n1Jmn
      mLj0GrK5A1+NC6G5gbm5BXpbjyFJEjZ7PX4DBNfjtLe1USwUsDgcdyff25oN+sY5jBYjoljD
      k3o2qO4BFAoFrFYLhUIRQRTRVBVREBBFjbX1OPU+LyaziVKxiMkoEd6I43aYyRYUatx2jEYT
      FVlFU2UsFgvlUhFZBYMoYLRYKBUKCGzOIGkwGTfbrbEIVlcd+XQcR40Pu8VIoVhCEDYf8xUl
      kfWNOC6XA4fd/tEBEFyY4sb4FCeefgGf2/ph+/eR9ADQ7TZbGsHJeAyLzUGpVKxGeXS6R+pD
      xgXSqFTKlErlR18ane4RuycA4utBQusJVkMhRL0ao9sD7gmA6MYaFU3AaLHjrXVWq0w63SOz
      dYYYTSOViFDSTNR7ara1Mr0RrNtttrYBBAG7zYb+RKRuL9jSEZZOxsllM+RVExo16EODfnZo
      qgyVApjsCII+LjJ8yBXg2pV3WFxe4vyLf8uyng79maEWkhRe/O/IffvLlF7752iKfpcPPiQA
      PLW1pJIZDh8/jcOiPxb5WSHPvooyfx4tF6Fy+wcooRvVLtJjYUsVyCBJCKIRj79pSzr0xmqQ
      SDJLW6ufxcUQTW3t5GKrqEYnHW1Nj6zQuu0TDOZfeCHe+3oP25oNqshogoDBsPVOjtffTCE/
      QyIao6yCIJQoqzYMpRyypiGqKqqqbvmcrvqEzmcRD06ihq4j9TyP5juAouhDGt8TAOViDgUD
      mWScQrG0ZeFQYB67twWnWaSxWWR6dhaDaENDQQREcbNG9f7Pz6pwIcTLwf+Mpmm80PobNNla
      q12kT2a2Y3vmn4Kmgt4AvuueABi/9haTK1mcTjedLQ1bFhYEgchaCHNLE+HgCvu6esknNlBN
      HiRBuPscgPAZn1bm7fBrxEtRAN4Kn+O3u373IW5NIZnMU1Pz8R2T+Xwem832scukk0kcNTUU
      83msNhsCm5mbmqZ9/GdVmUJFw2r+7LUJ7wmAI6e/wGAhy/SdOwTXInQ019+zcEtH993fnc7N
      f4i9seURFPPxYuWD6qFVe7idftHZm3zv6hq/95tPM3prHKPJgmhx0eyWWIoU6Gz2sh5PYjZI
      1NiNLIQzeG0a8ZKRFq+N2dkljpw4iUVS+OF3v81Tv/kNtOw6bqeDaCJNcHmJzs5O7BaJmYVV
      jh0dYfTaKAcOHmTyxnV6R56kTglzca5MsylL0eCkw2djJpjg6OHBXX+bfOsDMVYHw4f1IRE/
      zvFbFxDNBQCOFpah+x88tG1duD6BEEuwstpF2eJhdWkOrzfHuSt3kCUbsRU3/ceeYubWVTRV
      5amzZxm99CbXby8xMNDF0c5abgZydAvzZLBx/footaYyQjnP0MlnCS4vsbi4iIRGl8/Fi+fO
      IZdkMqWrZONJGjM56mwAMsFwGostz9VQnjNnzj60fX6UdnaYrT3C4W7nqVvfBcA4+JsPbTua
      ptDaPchXvtLOlWt3qO/oxVxuxGo1Ira3UxAdNLidNPrcrLvdGJQCo2NT5AsF6mprqfE14HTZ
      ceRFwhsyX//GN5i4eR2wYrM04HHbcLvdCIKAxWLB5TKxT7KysrhCV0c7S3KFVCoFTituB1gs
      jUAF2QRXb07S2d5Ik9//0Pb/UdiaC/Qp7JVcIE0uUhn/PmgqxqGvIhi39+CQ7vFR9QDQVAWt
      EEewuBEk004VRfchFFWmoBSwGeyI+p0goMoTZWuaSvGVPyL3rc+T/94/RCumHur2xi6/RTCa
      /thllGKGWPrjn4YrZ8Oce/M6VApEElkAMuF5QokskcjH78PU1NT2Cr1DSkqR7y1+m7+c+lN+
      uvw9VE3vr4EqtwHU6Czy1EuAhrp2C3n+dYwDX3lIW9OIZ7PE70yxJuYILC5j9dbR4OsiurGI
      09tIbHGa7q42SvZm3nljnAMHh1manMDV1MXq9FVEVxNf/sLnGL81TbmioeZjLIYLvP7iNbo7
      ajDsM1NcTfLmuZew1Tfjd8DCapq2RidZxcLZU08SCoWwlbLcjMRoqmtgNbjM4JHjdLbUf/Iu
      fAoL6RlCuc1xcmZSExwtnMZva36o29wNqnoFEB0NYHG/98KAWLfvoW0rtz7H7Eqaufk5ZMnK
      ke5mDpw+ycbMBPOhBEZJwNfSw756O5G1Vbz7BnCUo2xkikzcmcbf1k19jQ1QmV9coLQ2y0Qg
      SqZQoKVrkBafC5DJZPK0dB6gzmFidHQUm8mE2+sjubFKsbJ51i0XZE489wLZ0G3cLQdo9rkf
      2n6/r87sRXxvnE2TaMZl2t6zHp9VVW8DREIXuTP+LdraX6C976sPrRMtlYhhcdZQTMUpaBJO
      UQGXm1K6SHBhEndTJy6LCbdVIKVYCM+P425oZXlhgbbObqymzX2qrXERTWTw1TmJrIXB5kJS
      wW6UKRkslLIlJEkEFNRimtlQiu5mN4vrOZ4YOUAsGsUmSRjq6sjF42yElnB4WzEZJeq9dQ9l
      32HzfxPMLbKcXWC/ewCfxf+Z77C8H1UNgIpa5q9n/5x4KYJFsvJ3u3+POvOHzE+s0z0k26oC
      qYpMsVhC0zRKxSKqpiFXylTkB0uqUlSFgpwDoKyWKSn6UCwf5eLFiyTW5phcCJPLZilVZNbW
      Vrkxep18oUQxn6NUlpHLJcauXiJdAbWS59//+X9E1TTW1taoVMoUS2XywZvcDOYppGMkMgVy
      uc31lYoFCqUy5VKBXKF4d7uyXCGTyaBqGrlsBln57DSgt9UIjm6EiUSiWKx2CrKC2WonH99A
      M1gYHh7Ydre4WbLwdNMXuRm7zD7nfhqsjdtcw96Rz+dR5DKJ2AJjl+PU1rswUGR5YRGny8Xf
      fvevkbzdDLa5yGWKtB48wcr0GAd69zGzkSc0OUk8HOTI2S9RXylSRCW2EmC1CMvLqzidLmav
      v05K9NHdYKSx7zhnjg5RKBS4+sZrZGQVi91KOm/g+PEn8Lo/Pu9ot9hWADjsNqIpG5Im0NO3
      n+DcBHZnM0aym+nQDzA47n7nAPudAwCoiobK1hnqdZBLRrh4NUHnUB+2gRbymSC5HLQ0NVCq
      VGjp6qdv6BArMzepVCooiszt+WWM9lpmb17GLCg0dfTQ5q8jtzjL2M13MTYaUcwOegcPkg4v
      Ud+yj2N9h7CS4+0bNzl5qB9FUTDYXYx0NHF7doZKRaOYjRMTwG3b/f0222oD3Lp+GaOthgav
      i+DqBp6GZtIby2hGJwP9PfAAjeBipUAgsYTf1YTb8vDvhuxWm1VNFYvFtDlgwXsnGgENWQVB
      U9AECUnQqCgaFrMZRZExGAzI8uZJRRAEJElCUxVy+QImsxlJFBHey+RVFRlFE5AEDRURs8mI
      LMsIgoAoCKhApVTEYDSBIGKQdn9nWlUbwbIq82dv/O/cDF2n2d3CHz3/x7hzYf7i3CzHD/XR
      09GKgEa5mKeCAafVTKFUwiBoVDQDJlEmXwG7USBX1vDWuXnllVc4+9RJcmWN0J1x3D39tHvr
      uHPjIktJkVPDHahmN6Jc4vbEOD3d+5HsDrRCDouzBrWURZOsiGqRsmagzu3krbfe4tjRJ0im
      Mnh9XuKRDdyeekyG3X8A7HVV7QjLl3PcWb+NqqmEUiuspVdwC1CWNSRR4u2fv4S7pZeNxWkU
      QaLGLGFqamPs/CtEVTvDrQ5cbcNkg+PYWgZ55vgIpVKJ7/3VtwgmFfpaGtnf2gVAcD2JpgpE
      VirkjE5ujIVp9RlZX1miaBAIr+axWCUmLr+B4myh1aXROniC4yP9lEolLl94HSQjd0TQrF4O
      O2ox6Y8VPnSapqGiIiI+lNu2VT2FOcxOTneexSQaGPAP0f4LHWGKXEYyWcll0hRyGUqyhs1Z
      x8hQL15/E2dOHaeru4ep2+O0dfcweXuMm1feRrC4qPX6OXnqFJ1tDUQ24miVJJFYDqGSYzmS
      BUHi0JGjmA0gCIBgoLf/AHazgYamVk4eP0pPTxe3x28Dm1UHq6uO/p5ODCYDicgGmUSEZF5v
      rzxMmqZxI3aZv5r5d7wdfg1FU5ibmwO4+xMgE4+Qy6VJ5itb1rG8vAzAnZtXWI1liEQi97RR
      q1oF0jSVibf/BXMzP8bvH+GJ5/8Ug8nxS0up3L59h8HBgZ0qpm6XyMs5/nLq/6KilhEFkb/b
      9XvcvniH5557jp///OdISpFkVmN/RxOFcohLi2aeG6pnIRCiu6uLuaVlTDYnz505zuvnfoZo
      8+G0SrgtsLBe5JmzJ6t7BSgXk6zO/RSzUiSxeoV0bPpDlhL1g38HaJpGYHGR18+9ykY4vCum
      sTKKRlxGN6JcwSpasRnsmESVbLFERdawuDz0NXmJJBL4mpo5OHKIW6NXUQWBqbklzp49jUmE
      XDTA3EqC6dkZ4okE2XyJJ48fwyBWuQ1gNLvwNB0jsnwBR20X9pqHlwu0kzRNQ1Y3qz8G0bAr
      UgoS8Rh//a3/QC6XY/TKZf7x//BPMJsf7zaMQTAwEs8RnD6Pp+UE9l4LJ04e552LbzNy9DiS
      UsAE1Moy7vo6gpdv8Lnnv8DkXJBDw31cv3aTrp4eZFHja1/7LYqJCFkVXGYjtvdSW6qeCyRX
      8mTiM9hdbZisDy8XZicFkwH+4uK/RdNUfu/Ef3tP2+VxFVpZ5t//2Z+hKAoWi4n//n/+X7Db
      f7m6+XgpFWK8+Z0vocgFBMHA8V//NjX1Qzu6jarfxzMYbdQ2jOyagx/glTs/ZT46w0Jsjp/d
      +Um1i3Nf/I3NnDjeR60jz7PPncRms1e7SJ/IYHTgqN28i2dxNGBx7Pzjl1UPAE2tIOcW0eR8
      tYty39pc9ZuTtAFtLt8nLf5YUOU8luJ3GWy9jJb8TrWLc18kg5kjL/wb2kb+iCe++B+w2HxU
      illGR29Skj/IR0okEh/6O8BGeI2Kom75eyqVAtTqB0Bp7YfkZ/438kt/jqbtjpHKnuk8xR90
      NfOPOpt4ruupahfnvmiagqpstltUefckHb7441f4zn+6zH/6mx8hyzLnz53DW+8lGVnnzTdf
      Z35lg2QyyUpgnonpeWIba/ybf/2nLIY2J+G+8vqLjM2HSSaTrK2FGBufQNPg6tWrgFL9USHU
      ShpQ0eTMe6OWPf4P1OezCSpLE6Bp5HvimGyP/9hIJksNh57/P9kIvEFL71d2RYP3Y7AAABF8
      SURBVMMdYGriNqqqElhaJJ/LcebsWd68cB6HrYHazn4CMxOoqoJcKvD057/EOxfeoG9gmH3N
      PiqpIHMxiF1/l2afC5MgM3jsLB/segXpm9/85jfvtzCZRITgegKHWWNicg7JYmV9ZZFEpkRN
      jQvYbAhvZ2hEyd6JaK7H5HsecZc8pbQy/besrVyjoqhYrG7s9g5ef+cyrrp67JbNBLFMIoJq
      sCKiIYq/eLBpTE/P4PV6iUQi2O2bdXFVKRNLZLAZNSLpEnbrRyea/eLntsPmbMbXegqz1bPt
      z1aLxWJhPbzGsRMn6R8cIrAwQzJToNbl4tbkOO2dfTgsRnz1DfjrfWQyGUS5QMXgJLkR4cwL
      X8AuVDDZ7NTW+Wht2mxH3B59l5Jo295doFKpyOLSEk11NmZCadrbG0hFS0gUaenuujs47m45
      uzyoaGKV12ZigMjnut0o0TAJaycL41cY6e9gJhjDZymRxcTozTV+7QsjTM2FOHP2DIZKmv/3
      29/h87/z+xTWA2iVHFnZwoGuOt4dXeGpQ20sRAss3LmN09eMz6oQjJdo9VhYiZd56sQRXj9/
      ngM97UxMzdI9+ATB6Vu09o7Q3rh7DuxPq5SOkxWteByfbkiabVWBzObN4dJNdg/DB+qZmZ1F
      EqwoVB54cNz1TIXxcI6OOgvdHgs/+M63sTtraB14EpeWxuFr5cbVSxTTMXoOn8ZUTmGubcTv
      cTMzeomb4Ty/enqYVNGEQc1idvmYuPo2I6c/x3pgAU+9j7XgMh37D7AyP4WvtYvoyjyu+nY8
      bhvnz59nZKifSLrM/vYGJmYCDBzo/dhnGxRTA8p799AVcw2StIHBZMHtsnPlylWsbh8FUcTf
      3cMxcyv5VITkyiJr6aOU569jqW/gxuUb2KUcmizz9Oc/j1aKIYoiUiVDMBzD7e+GUoQrVyax
      e5spOevRKmU0UUKSJKKJNGc+d4I3XnyHxqHDD/2h+seNrdbHTjyRsK0ACIcCKLJCsaIQWVml
      s7uPfHIDzVj/wIPjTqznWE2XyZQU9tVaqG1o5dlnn+al7/8N8xs5an3NNNbZMBgt+H0u3jl3
      iUD8Jv/NP/xtppZWUEoK8eg64YyBudk7/Be/+RVAAwQWlpZYCy7S2lXPKz94kWA6Qr1njnIh
      w7FTNXhrNqsRl69cw2qyEQzM0D94GDQQxI/eB7/TxOHmzXvojS4TuXwdl69fpKe3j8Y6B8F4
      kaYWD063j/mxS9ia3bg9DTgtJpK17XzteC/T0zNADWazGYMgoEgWEuEFFuv7afbXYzZYQTZi
      kzRiJcN7adB5BEGgubkZh92KQbLQOzxMIDDJkl3AZrTTUL87qpGPi6p3hC3ECtxa3bwCjDTZ
      +ckPvovF7qS1s4fxsdv0Do6Qjq5iUouYazxMTs6jigb+3le/yKuvXKDZYyWlGnA4fIhGjaHe
      Ht459xMyhloMqNS67Bw50s6FlydYyycZGhhkY3massnD588+yVtvvYXNZsMCFCkRzWiM9HXi
      qW/ks5btLKsahYqK3SQi7pJqakVR2chW8NiMWIw7/w+pegCo+Ty5ySmsnR0Y6nZPZxjvf227
      5EBSNY2LS2kCiRIDfhsHG+27oq322kyCULpMjVXiV/o8GKSdLXPVz3HJv/kOiX/1r4j96/8b
      Td4l6cWVAkx+Hya/B5Xd0YGnaRDPy8iqRiy3NW34cRUvbB4T2ZJK5SHMPlT1foD3z6Sapn1w
      Vn3cpYOwMb75e/0Q+PqrW577IApwot1JMFmmy2v55A88Jk51uJhcz9NRZ8HyEOqkVQ+Ami8c
      wdUUQGh/EsG4O2Yg0eyNyAUbaBoGR9OumCRCEAR8DhM+x+56kL3ZbabZ/fCyVqteBRIzCxhs
      AlJuvtpFuW+lpRDhv5kg/J1JSvPBahfnsXbpzXO8/LOXiWY+SL+YnJxkIxzmlxNfEqtLXLg6
      RqWUJZH+oGq5MDVJQYFYJLLlM79scnJyW+Wr+hWA9qc2J22rH6x2Se6baLGC0QSahmDV5wb4
      OHlZ5IXnT/Pz8xcoFLKY3I0YlDxX3niVoWd+hVJ4kVjFzK99/ixTCwFKJZVsykkwCj+7/gbP
      ffm3iayv4us6wOz8PJalWaLxDdyeHkIrU9R4m4mGFhk6dpbefU2sra0RWpwmnhMY7m9hKVLg
      uTOnMH5E9anqVwDs9dD/G+DpqXZJ7puxvQ3/n/wx/j/5Y0ydndUuzn27unyJ/+Pn/yuzkUc7
      RHsyGkZRKiyHU7gcm30v+7r76W/3sryRZm52BoCF2SkiK4ssrsUoFMv0DB6m3v3BCSaXy1FU
      RJ574TTr0xOsZ1QcDjttbc0sBwJ3l3N6Gulr8xNYj3Py+BN83OgtVb8Nqnt0/ulP/pDlRIAn
      20/yh2f/ySPZ5sLUGNGCyBMjA8xN3EB0NVFrN2IWFZY2Mmi5OFZPE91t9cTiBWpdRqLJLGbz
      5kjcbpeTSGiRsdkV+vr6sFuM1NTYSCYrBBduU9PURSI0j6+9n0avi1gshiRJSIDZZuL6jUm6
      Opqp8TZi+pDD8jMZAGoxzt+eu8Hf+bVnP3a5SCSCz/fR+fzZ8CwvX11gcGCAvs57Mz435m6j
      Nh3Ab/vg9DJ2+RzmpmPU28o4anwYJRgfH6ep0U9NnRfpI3uXFcbGphgefrjPPl+59R0yy2/T
      eODvcKDrcw91W7vFttoAmqZRkWWMBgP59+aalcslNNGA2Vj95sT7ZiZncJg1IrEor716jkKh
      iKuugeZaiTtzIbr27SMnmXFJKsuzE6RVG15rhQujC5wYaiUcjtI68jQtSpJMUUGSJC68+mNC
      WQPtdQaWF5Zp6+7CSoBXL16gtWeEp48PEi+aYP4mBYuEIE6zmBawCUUK2TRO6wIzgTC+5naW
      Jm7ibOoivzbNgePPM7S/mY2NCK/85AckiwKDPe0EIinOnj2L/cNOWw/oWDkJDg8Uozu2zt1u
      W22A2MYq45PTJMNBllfXmF9aZmryDlNT0zxO4wXPLMwj52Pcnpyne/AwbW3ttPnrWFoO0bW/
      B1GTePrMSYrFIqlcieGBXgIra1QSUXKShWefOkYuXwLRwKEnjtPeVEM4kmYjHKIgC3T4a1E0
      SK6HkJw+fHUu8tEAc4urzC+tkCsUUTSJ00+dRGIzi1ZB5PSZUxTia2RlE80NXnr27yewtHi3
      3G5fM4M9LaxHEgyNHERSFXa0Z6R+EMwu8D7+/RaPyrarQFPTU9hFA/XdnQTnJgAvRnI0dnfd
      HRy32l3sqVQKt9tFMp7AYLGiVMpIooioVZheDNO9rxW7y0kmlcJqFJgOrONzSCQLAk1NXpwW
      E9mKgJUiV27cxt/aiZqLYnT5iC/e4qXXb/KNf/xf43Y6WZy8ha91Pw5JRrC5qeTTyIqK0SBh
      tjvJpVMIAhgkCZPZQqFUIbKygLm2iWJ8BbuvHb/HSSqVQRQFJFHAZDIyeWeGRr+f2nrfY3Cr
      7rNrWwEQDgWYmQ/Q39tNKBzB62+5Ozjugb7uBxocd7dRVQVV2zygd6Nyao1XL96ms6eXA91t
      2/783Nwc3d3dAGQzGWxOJyKwHpwjiwuXRbjbrgoEAthtNjw+30d2FqrlAqFomtamhg99P1vK
      cG35MoONB/E6dv75689kI1j30XLLN3hj2cixfj+h5SBmm52VuWkUay3tHgvxsoShlKQgOrEq
      KURXE1pmDRx+jo0c4Ec/+hHtjV6ieVibuk7PU1/k+EAPb775BpoGHo8HSSuTLIoUMnEa6uvR
      SlmWwzEGhoeYuTNF6752ZidnGDl+miaHxtvjS8iJVSpGF11NTlbiMmefOoYEvHT1LzGFbxB3
      NPFfPvM/7fj3Uf1+AN0jJxkMSJKZ0OwtFJMNR10jRsokkjmOjuzjyrUpisUiNpudRCyG1WYn
      Ho+hKjKSKHDl2ijlcom2zn6G+rtR5QJzU1NMzcyzvBomnsxy9MgIABvr6xRkgScPDTB2+U3C
      WYVisYzDbiEajb1XIg1HnZ96p5nF9QRnThy5e2A+azLznMPDr1sezjAu+hVgjymnwrx6aZzO
      zg6cdidyOcPlty6y//AJmjxO6hv93L52iZKxFqeQI6vZcYh5MooFsRDD2zFAIbJIomykq9HF
      SkJmqNNDNGfEpmVYThbxOq00NjayvLyMABiNRtxOG5lCkYmxcbr297E4P8O+vhFaPFZWo2kk
      NEQ00ErMLsfo7Gimye+H9XGYexlajm9mDewwPQD2PJVMJo/T+XiPEvew6AGg29P0NoBuT9MD
      QLen6QGg29P0ANDtaXoA6PY0PQB0e9oD5VmV8kmmZldobm8nHVlBMzrp7Hj8R0jW6X7ZgwVA
      LoOsgarmUXFiqBSRNQ3hvWzQ3TABm04HDxgARlsNgwe8zMzMI4lmZGREQUCUJL0jTLerPFAA
      mEwmFpeW6entJ5/YQDU5kGBnH97Q6R4BPRVCt6fpd4F0e5oeALo9TQ8A3Z6mB4BuT9MDQLen
      6QGg29M+dQCoqoqq9/zqdqlPGQAKY6PXuTU2qXeC6XalTznoWAGHuxUjWSrA7pjfRaf7wKe8
      Atgp5kKkKop+8Ot2JT0VQren7VgAvH/wvz84rqqqiKJ4z/vvD5r7y+990usH/ewvz1z/Ya9/
      cSDf7a77QT+73f3fzj5+mnXtxs9+mv3XNG1nrwAPSlGUXXfVUFUVQRCqPhL2du3G7/phlvmx
      CACdrlqq0hEWXQ8xvxSkUsoxMztPRVGJhkMUKiqR8AqzC4HHrm+hXMwxMz1NtlAitLxINJGh
      XMyzHtkc4DUZDZPKlatcyntpmsbq8iLBtQ1y6QTzi8uoqsrKSghN0wguzTG39JhN86qprAaX
      CK5ukM8kmXuvzGsrIRQgFdtgMbi6Y7fdqxIAVkcNcibFfGCFlqZalpbWSMbCpIsKDnctSi5F
      vvJJM8I+Wpom0NzoITA/T0mzEF1fJV8oEolsoFSKrASXiCXzn7yiR0rD7aknHYsQXF2n1iaw
      th5nJbwOQCgUwm6zPWZ9OBruunpS8QjLoTA+q8pKNMXG6joVtcKd6dnNJ6926ARZhQDQiK2v
      UtPUglEQMZtMCIJAXa17811FRtU0FOXx+rfI5QLB9TT7OvwYDEYkUcRdW4dBElgLBijKCpFY
      vNrF3GI1uERzRyeSKGEyGhEMZmqcNgCOnThDam2VSpXLeC+BteASze37kCRpc+45yYzbaQdN
      xeqsRS6mqezQ8VGF2Xc08vkC+XKUlmYvk9PL7OvsIDAXRiysURbLaEYL1h2cHG4n5LJZVLlE
      oWJAzq9idXlZXwmQy+ZoGRjG39xMuvR4lVlTKxQKFWKRKN5aB8sbGTparKxlc4TC65TSSSSn
      G1O1C/oLNLlEviyjRaP4ap3MR9Lsa3Exnc8irKfwua3kZBHjx03+uw16I1i3p+nZoLo9TQ8A
      3Z6mB4Du7mBmnzSomaZpxGKx+1r+o99773O/9Nf4e+t91KRvfvOb33zkW9U9XjSFH/74RfKx
      EDi9rK8EcbgcLM7NYLC5yCajFMoqSjbM5HKSH/7Hf0vHkVP8xb/8ZzQNHCO+tozN5WQ9uEKp
      XORnL/0MNbPGrWCGuho3klqiUFZIpjOUSyWuXr1KjcPCRiKHSaiwsp7AWAxzZ12hyet6pLuu
      B4AOQRDxGPJcCVQwp+eZnA+QyFeIrgYZnwly88obdPUfZG1unMa+I2jFGJFQiHxFopiNYvc0
      cuPmRWbvxLA2e4ithuiod5EzeJi5fZ2uJjevnr/E5FyAZCxCLp8hHAqgSHauXHiNwMI8+088
      z/SNS/T0dD/SfdcnIdcB4G1qxL9moK7WTlRx0uQQGI+acdlN1Hb30eitQY7UkEymsLgaWV8N
      0NfThsVdQ2hpAY+3HpMKZrMFq1EgW9aoa6ilHDNhrmkiG32Rrt5+ZLsXMbZCe1MD18an8dX7
      cNY1YirHMNi8j3y/9duguvumKmXGJ+c4OHRgx9c9NzlGQ9cATvOj7UvRA0C3p/3/yZywJ/vO
      pYcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Delay for Top 10 Airports' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAOiklEQVR4nO3d6W8bd3rA8e9vDg5PkSIp6qSsw7JlW7aTOGm2yKZdYF8V2Dftu77pX9L/
      oe+KvihQtK8K9FXRAkXRblFs6zhJ4yO+IluyrPskdfAeztUXSmw5Ua5dK5L393wAQyI1M3xE
      8TscUoZGRVEUIYSmjNMeQIjTJAEIrVlHL9xffcyd5QenNYs4IR9cuUrDPzjtMc6kVwK4vXSf
      v/nN35/WLOKEFIb+go3O8mmPcSbJIZDQ2rEBJJ0kCiikejEMm0wiS9J2SNkx0k6STDz9nRsd
      7B3lUv8YBmAYMRKWRSKWxFDfP854sUzuyPZtK07MOBwzGUu8uL6YKfJyc4q08/Jr33cbqVj8
      G9emnOQPXP/N1dqr8fzhOp4fvrjOa7t0XY920zt2Hb/dZuHeMnvV1rdvt94G4GCnRuB2cd3g
      2OU6TffF51EQ0D5y+cfq1FoE4bd/Pey6dDrHz3GUddyVmew4heYaP5t+j5vLK6TCGhXXYSqT
      ACfHyt4mykxysVji8dYyF/rG8MMuXrfB7M4q/ekc652I63155loJRpNdcIbYqC4wWZpkfvMp
      vdkhetMDTKYD/ntxkZGeDE1ziOupA255XSIryUQ2x1bXwO6skslNUHJs/mv+NqgYP7/4Abce
      /QcfXvkTPpu/RSmXZ6PRJmv6bLRdRnP9bNd2+cXFt/j3hzcZ7xvlyfojaoHFlf5RdtyIrB1h
      ZsbJtp7TMtN8/Pzub/0DeRMsPd5k9NIAX9xaYLicZvcgIJfw6cbjNCuKGA2cYh6j08RVDqNT
      RVrLq5AfJZ0xWLyzQLxUxFFdapUGT+6s8v6fvkdrcR23XODOr5e4fDmDPVhiYW6T0ZlhDjb2
      aG5VWNmzGChaWKbB8PVxnNBl5ekuCcvHJcbB02VSF87R32tR3fXoH06zv93CskMO9jzGp4ss
      PNyg0Gty73GbGzf6SdmKp3fXKM8MU1nYgniS3h6DjbUm5wZN1rw858e/e8d2bACV3WV+efl9
      vlhbYibfw+2qTdHZevH1cu8QW60micwYb5mwXdlkoDRITR3uqXPpPlJxj/XtJcBgengGZaQ4
      aFZJxOJcG7qEGTP5ZHUJv9GmJ1UiZpmsN/e4W7nPUN9bZNIliLp4+1XM5Hka1VkquSmuDF+h
      TQzcJpf6R1iuLLC4v0MpVyCfynG+0E+susr85jLlXJ65rWcEVhLHTHF9eIL/WT48Fi4kkhwE
      HmZ9h/XtOcrDb7+mh9kZphTJ3gwxe5tapcHq0x0SMwOoOBB41GodDpYW6e+Po9KK1QdLGJ7H
      6sIyVs0mSveyu7iJ53a59POLNFsh2ZxDYrzAZ/+5yMRMno2KS7KxzuSNc8x/NE9bOcxM90Ej
      DbvbnLuYZXmpwVjZBqDZ8DHtiNxAgZGrg9z5p1uYlkO3maL/wjl25lZJJ2x2K3XcRout/S4j
      ly9SW91kdX2X6RtjPPvkKSqRxfab1DxF7fkqW04ZMt9/lxwbQOA3CD2PJ9UNBjIpXK9JO/Kw
      UBA1AIOEHcd1G7jdDjW3hdXYx/UP12+6LSwFQRQRBB3uLN4Fu4htO4RBl3a3zX79gG63Sd/I
      FHs7Fez0AEZYoRNAvdOg7of02BG7rTomLucHr9J0G3y6/AXTA1P884O7TA9MYdgwlitQ77TJ
      pJPU2w3q7QM6XodGt0G+d4iBVIQXdOh6XYhC6m4bN+zQAfxuxIXBC+y5jdfzIDvDEnGDxzfn
      yAwUaG9tk8gkiCUdlGMTOj71EJLZBIm0w369w/kPJmgtrzA9WabgtHl4cwEn10Ox1EMsZhK2
      Wxzsu/T0pLHiBsMjWfb2qvQPJ/nio2cUR/rI2jHsjMnBw3WKQz3E4g6JhEKZBom0g5GyQEFC
      BTz/fIPiSB6PGLlSgp5cnE4hTdwyaHdczJhNvDfF7tIamf4kg8U4sx/NUxgpokwb5XdpH9Rx
      epLE4jHs+Pe/xFVHfxP8dzf/Ud4F+j30l38u7wJ9G3kXSGhNAhBakwCE1iQAoTUJQGhNAhBa
      kwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJ
      QGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE
      1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhN
      AhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBas057AHHyDGViKvlRH0fuFQ18+JsD
      1MLOaY9xJkkAGgjWVlBPHp/2GGeSvAYQWpMANGIMjWNdexuVTf/4dUsDLy9YMYjZqGI/GOo1
      TvjTk0MgjRj5LP6De1gz1wnrbYxsnLDWxsj0ENVrRPtrkCmh4imUFRB1IsAlWHiOURpA5ftR
      GYeo5mMOJAh3avj7OxBGp/2t/dbkGUA7ClBY56fAMFFxC//xfSDEmHoXZYM5NgamhYrbBAvP
      X64auASbO0S1fYJnc0ThKX0Lr5E8A2gkrO5hXblKsPiEcO8AI20T7lQg9Al3K6hQEa4vEUUO
      SrmEu7WX626tE/kBke9D18M4P0m4tflG7/1BAtBKuLFEuLEEQFRf4OgOPDrYJzrYP1xuYfab
      6+5sv1wW8B89OMlRfzJyCCS0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkA
      QmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0
      JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNDaKyfIiNsOvcnsac0iTohqn/YEZ9crAZiejd1I
      ntYs4qSYpz3A2fVKAJXaLrNr86c1izghUXmYN/tkpidHXgMIrR0bgFIW7196n8uDwwznD0+Q
      nElmsX5gLpad5o+u/Ix3RidIpooMFsuM9SToL5ZJfOc2LMaPnJA5mcgQ+4EnYu5NZcFwyCfj
      37nceKn8g7Yn9HDsWSKHy1fZWbnLQqPLr97/FVeaW8zv1mi2E8wMjzG79pyJoUnWN58xMjxF
      PHJZaXgM9aT59PFHTExc5t7sJ0xOvkdfvMmWF+PPpmY4sEvce9xiojzNWmWJi0MTzG0uM9g7
      wMb2PPOVBkP5IsOlC2TNLvtGjlR7laVmxEguzeJejdGUST1KkkvEuPf8Cy6NTFJr7PMH0+/x
      r7dv0htzuTY5ge8e0IwS5BMO9xe/YHpkkp3qCoXefp5vr/zU97M4o47dH3u+R8KJYxkma9vP
      2Wy0yCQzlEuDPHj6GfF0EcdJMl2+TGP/GZ3QIB+PcXtjl3ImTjcIScZsYpbJzv4WbgTbe5ts
      1w8YKgxgGwnOD5WpVBfJ5MqkLIVpvmyx2ayyXquzubvOg+U5ro5dIlSQiTnce/aIwGvyYG2N
      cn+ZpGkxmu9ldmWO7ZZPvncIt7YIZgL8Fp+vrFAeHCVlWlwYGvuJ7lbxpjj2GWBr/TGliWuM
      m5usVDeIIsCwaLXrXB27xlplg1rcZqu6zrmRSwwlbX799AkX8xn+b75FuP+AG+dn2Ks8pxUA
      nQoPtzq4losFjBsWm7UtWq06+xu7xCcvst+sAx4LW+t4weEcNdfn2vAYt2Y/YySbZLmyRTOI
      WKlu0Oz6BF4TpzTA5t4WdqJAX6zL3MoshcIkwe4q1bZLw/VY3mzj9A+wubFNJ/g9OL25eG1U
      FEUvTvX91//2D/zVv/ztj9rA1Mg0+3sr7DSbr3048Xp8Wv5j1IPPT3uMM+l3PlP83Oo3zyou
      xJtC3gYVWpMAhNYkAKE1CUBoTQIQWpMAhNYkAKE1CUBoTQIQWpMAhNYkAKG13/n/AomzzyiP
      o/zo+xfUkASgAffxU6I7d097jDNJDoGE1iQAoTUJQCP2teuHnxgWRl8BUBh9JTAPHwaxD36J
      Ve4DO4ZRLIKhULk8RiYFThIjm8GavoJyLIxCEUyFkS+iHPtw+9evQyKJke/FKJ/HHh8GK4ZR
      6AXLRmUyKMfBKBbAMDD6SijHIXbjXVQyjlHqQ6V7UKkExF5dDts83P5rJq8BNKK+fKDbM9eI
      mk2s8SnMXAL31seEdQ+8GkZpBDt/jsh1MUt9qLiJiqdR2QHMQgLv80dE5y7hXJ0iWF3DGOij
      e/N/Cdx9lGESe+sdMEOinTZKecT+8EOs4QH8uaeosEZk5og6HQzHwbr2NjSrYKdBKayRSVQ8
      BAwiNyRqtzHicayrb0Fjm7ARvPb7RJ4BdGLFsa9cOtyrZnuI6lWCeoQ11IcxOonyOxjZLHhN
      /JUNFBEqmUY5NmFtj+69u0QB4HsEq4v4i4sEqztYY6MvbiLarxJU9wj3dlE9WWg38R7dJ9iv
      4809I2rW8Nc3UYURqG1CqIhcH+XEIIrAjqMsk6hVx1/fQOVHoL7FSe2r5RlAI93bn4Blgue/
      /GgvgueBUrjLEagv/w5TFNF9Wif2zttEtQrdh0/AMCAIIIoIVmzwfYLqLgT+4fbvHXmnKYoI
      dq3D5S0LfB+iiHB2FqIIb28b76vrlQGEdPc+PbyNKHrxzzuovlzuBEgAOglD6H75VzG8Lx9Q
      nnf48au/jRAd+X2B79L99ONX1//KV+v53svroq/9rsH/2m18/XZe3PaRQ5vga4c5R5c7AXII
      JLQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBC
      axKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQm
      AQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA
      0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCa9bRC+XiEB9Mv3tas4gTEktPEUXqtMc4k/4f
      vPoGHmoOhawAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Delayed Flight Count' width='192'>
      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
      tPcIRSvfTdHKB66oehdCEJ3o5MKBLxEs3Ews1IsnWEXF2o/M2DLYsZeJwRPUbv+9Rdl2KSM9
      h5kYPMXKzZ++5ryuFWGaTAydJjzWSmyyjdhkD7LFyab7vzQn7S0ngIUwDZ1jz/4+Dfd/6bqP
      DgohQAgEYnrbRJg6wtSRFSt6Oo6uJzH0NLHJLjrOfIeq9R/HNOJ4smoJjZwnnQwjTJOsos0M
      d72GlhpBCJOile+j+9wPEVgAhbL699HV+F0kRUGSZErrfoW+ll8gSTYkWaWo+j4GO16YvkeJ
      7guP43CXU1LzXmzOIG5/GYnYIIpqRVFtWG1BDD2FJFuQFRVZmRrbfF10pqHRfeFnqFYfRdX3
      zRKiaRocf+7z1O34/Ewtt1jO7fsyRavegz9n5TXlcyMQQnDyxf/Fys2/g9s/+z7fNgIY6TnC
      aO9Bard/7rrluRiEEJx+5QuU1DxCVuGGxedjmghhgiRh6GmEqWOaOhark2RsmP7WlxntO0Dd
      jj8inRjH0FMIM447uJKxvoMYehpFsePNqWe46wCmEcPm8OEOrGSo6xWEaeAOrMLuymO09yCI
      NP68ehSLh/DIGWTFhT9vDZPDZwmPniO37A682asw9CR6Oo6iunD7SzEMDYSBrFiwOfyYpgHI
      SLIyJdLpguPo07/Dlof/aUaAtxrdF54EoVNa9+is/bemtfMw2P4iZfUfWmozkCSJlZv/O2de
      /d8E8hb/g0uyjDQdiyhfMrgjhMlw136iExfZ9MDfTnujKmed6wmUzdoO5tfP2s4r3zlru6j6
      zplazjQNcst2IUwDSZLx59Zybl8rsmLH7swhnQxjGiZ6OoaWjhAZv0gqPowwdbIKtzE20Eg6
      OYkwDQqq7mKo8yXioU7SiVEmhi8w0PoqhpFCmDHKVz9G38WfIUkgK1aKV32Qoc49M7VXdvFW
      JodOoagWFEsQT7CCVHwSWbFgsbuRZQuSJHhdcBISgtfb/9JVNStzSnbQfPhvKal936zz3hYC
      0NIJ4tFB3MGKpTYFAKcnl/yKuznyzG+TW7qLvPK7cPkKrilPXU8Tm+igp+nnKBYn6+764nUd
      c5CkKQ+bIsso6qV9CDertvwe5w9+CX/uOkwzhaxICCFj6EnyK+6a1YEM5K+elW8wv46Wo1+j
      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
    </thumbnail>
    <thumbnail height='192' name='Different Delays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Different flight delays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Flight Counts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
