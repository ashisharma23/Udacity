<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' inline='true' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127069640_12018_923_airline_delay_causes_012013_012018' name='textscan.0lnav6n1ber7n71dkfo0y187gcjk'>
            <connection class='textscan' directory='C:/MyWorks/Google Drive/Data Analyst_NanoDegree/Visualization/project' filename='127069640_12018_923_airline_delay_causes_012013_012018.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport]' />
              <expression op='[airports.csv].[iata]' />
            </expression>
          </clause>
          <relation connection='textscan.0lnav6n1ber7n71dkfo0y187gcjk' name='127069640_12018_923_airline_delay_causes_012013_012018.csv' table='[127069640_12018_923_airline_delay_causes_012013_012018#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='integer' date-parse-format='MM' name=' month' ordinal='1' />
              <column datatype='string' name='carrier' ordinal='2' />
              <column datatype='string' name='carrier_name' ordinal='3' />
              <column datatype='string' name='airport' ordinal='4' />
              <column datatype='string' name='airport_name' ordinal='5' />
              <column datatype='real' name='arr_flights' ordinal='6' />
              <column datatype='real' name='arr_del15' ordinal='7' />
              <column datatype='real' name='carrier_ct' ordinal='8' />
              <column datatype='real' name=' weather_ct' ordinal='9' />
              <column datatype='real' name='nas_ct' ordinal='10' />
              <column datatype='real' name='security_ct' ordinal='11' />
              <column datatype='real' name='late_aircraft_ct' ordinal='12' />
              <column datatype='real' name='arr_cancelled' ordinal='13' />
              <column datatype='real' name='arr_diverted' ordinal='14' />
              <column datatype='real' name=' arr_delay' ordinal='15' />
              <column datatype='real' name=' carrier_delay' ordinal='16' />
              <column datatype='real' name='weather_delay' ordinal='17' />
              <column datatype='real' name='nas_delay' ordinal='18' />
              <column datatype='real' name='security_delay' ordinal='19' />
              <column datatype='real' name='late_aircraft_delay' ordinal='20' />
              <column datatype='string' name='F22' ordinal='21' />
            </columns>
          </relation>
          <relation connection='textscan.0lnav6n1ber7n71dkfo0y187gcjk' name='airports.csv' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='iata' ordinal='0' />
              <column datatype='string' name='airport' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='string' name='country' ordinal='4' />
              <column datatype='real' name='lat' ordinal='5' />
              <column datatype='real' name='long' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ arr_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ arr_delay]' />
          <map key='[ carrier_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ carrier_delay]' />
          <map key='[ month]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ month]' />
          <map key='[ weather_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ weather_ct]' />
          <map key='[F22]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[F22]' />
          <map key='[airport (airports.csv)]' value='[airports.csv].[airport]' />
          <map key='[airport]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport]' />
          <map key='[airport_name]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport_name]' />
          <map key='[arr_cancelled]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_cancelled]' />
          <map key='[arr_del15]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_del15]' />
          <map key='[arr_diverted]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_diverted]' />
          <map key='[arr_flights]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_flights]' />
          <map key='[carrier]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier]' />
          <map key='[carrier_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier_ct]' />
          <map key='[carrier_name]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier_name]' />
          <map key='[city]' value='[airports.csv].[city]' />
          <map key='[country]' value='[airports.csv].[country]' />
          <map key='[iata]' value='[airports.csv].[iata]' />
          <map key='[lat]' value='[airports.csv].[lat]' />
          <map key='[late_aircraft_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[late_aircraft_ct]' />
          <map key='[late_aircraft_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[late_aircraft_delay]' />
          <map key='[long]' value='[airports.csv].[long]' />
          <map key='[nas_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[nas_ct]' />
          <map key='[nas_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[nas_delay]' />
          <map key='[security_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[security_ct]' />
          <map key='[security_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[security_delay]' />
          <map key='[state]' value='[airports.csv].[state]' />
          <map key='[weather_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[weather_delay]' />
          <map key='[year]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ month]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_flights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_flights]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_flights</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_del15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_del15]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_del15</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[carrier_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier_ct</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> weather_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ weather_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> weather_ct</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>nas_ct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>security_ct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>late_aircraft_ct</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_cancelled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_cancelled]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_cancelled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_diverted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_diverted]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_diverted</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> arr_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ arr_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> arr_delay</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> carrier_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ carrier_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> carrier_delay</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F22</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F22]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>F22</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iata]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>iata</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport (airports.csv)]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
      <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
      <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;' value='All Delays' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;' value='Arrival Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;' value='Average Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;' value='Carrier Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;' value='Late Aircraft Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;' value='NAS Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;' value='Security Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;' value='Weather Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;' value='Agg. Carrier Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;' value='Agg. Weather Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;' value='Agg. NAS Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;' value='Agg. Security Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;' value='Agg. Late Aircraft Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489063486:qk]&quot;' value='Agg. Arrival Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094506573894:qk]&quot;' value='Cancelled or Diverted' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;' value='Cancelled out of Total Arriving' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;' value='Diverted out of Total Arriving' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;' value='Delay out of Total Arriving' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1844505578808553472:qk]&quot;' value='Cancelled percentage out of total arriving flights' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1844505578808619009:qk]&quot;' value='Diverted percentage out of total arriving flights' />
        </aliases>
      </column>
      <column caption='Month' datatype='string' name='[Calculation_1349391092679319552]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [ month] &#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;Feburary&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' />
      </column>
      <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
      </column>
      <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
      </column>
      <column caption='Avg Arrival Delay' datatype='real' name='[Calculation_1349391092860329998]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([ arr_delay])/SUM([arr_flights])' />
      </column>
      <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
      </column>
      <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
      </column>
      <column caption='Top 10 Carriers' datatype='string' name='[Carrier Name (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[carrier_name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alaska Airlines Inc., American Airlines Inc., Delta Air Lines Inc. and 7 more&quot;'>
            <value>&quot;Alaska Airlines Inc.&quot;</value>
            <value>&quot;American Airlines Inc.&quot;</value>
            <value>&quot;Delta Air Lines Inc.&quot;</value>
            <value>&quot;Envoy Air&quot;</value>
            <value>&quot;ExpressJet Airlines Inc.&quot;</value>
            <value>&quot;JetBlue Airways&quot;</value>
            <value>&quot;SkyWest Airlines Inc.&quot;</value>
            <value>&quot;Southwest Airlines Co.&quot;</value>
            <value>&quot;United Air Lines Inc.&quot;</value>
            <value>&quot;US Airways Inc.&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Carrier Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[carrier_name]' default='&quot;Other&quot;' new-bin='true' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
      <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Airport Full' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
      <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
      <column caption='Diverted Count' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
      <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='Airport City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Airport Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='IATA Code' datatype='string' name='[iata]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Airport Latitude' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
      <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Airport Longitude' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
      <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[airport (airports.csv)]' derivation='Attribute' name='[attr:airport (airports.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[lat]' derivation='Attribute' name='[attr:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ arr_delay]' derivation='Avg' name='[avg: arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Avg' name='[avg: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391094447632402]' derivation='Avg' name='[avg:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_flights]' derivation='Avg' name='[avg:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_delay]' derivation='Avg' name='[avg:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_delay]' derivation='Avg' name='[avg:nas_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_delay]' derivation='Avg' name='[avg:security_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather_delay]' derivation='Avg' name='[avg:weather_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[cum:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Avg' name='[diff:avg: arr_delay:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Avg' name='[diff:avg: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[diff:avg:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[airport]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[diff:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[diff:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[diff:sum:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[diff:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[diff:usr:Calculation_1349391092860329998:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[diff:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092679319552]' derivation='None' name='[none:Calculation_1349391092679319552:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
      <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcto:avg:arr_flights:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcto:avg:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[pcto:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcto:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[pcto:sum:arr_flights:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[pcto:sum:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcto:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[pcto:usr:Calculation_1349391092860329998:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[pcto:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcva:avg:arr_flights:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcva:avg:arr_flights:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcva:avg:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcva:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcva:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance aggregation-param='95' column='[arr_flights]' derivation='Percentile' name='[prc95:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ arr_delay]' derivation='Sum' name='[sum: arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ weather_ct]' derivation='Sum' name='[sum: weather_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_del15]' derivation='Sum' name='[sum:arr_del15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_diverted]' derivation='Sum' name='[sum:arr_diverted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Sum' name='[sum:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_ct]' derivation='Sum' name='[sum:late_aircraft_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[long]' derivation='Sum' name='[sum:long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_ct]' derivation='Sum' name='[sum:nas_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_ct]' derivation='Sum' name='[sum:security_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Airport Name)' hidden='true' name='[Action (Airport Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[airport (airports.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Airport Name,Airport Code)' hidden='true' name='[Action (Airport Name,Airport Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[airport (airports.csv)]' />
          <groupfilter function='level-members' level='[airport]' />
        </groupfilter>
      </group>
      <group caption='Action (Carrier Name)' hidden='true' name='[Action (Carrier Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier_name]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(MonthYear))' hidden='true' name='[Action (MONTH(MonthYear))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Calculation_1349391092718141443:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Airport Code,Airport Name)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:airport:nk]' />
          <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' />
        </groupfilter>
      </group>
      <group name='[Top 10 Delayed Carriers]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1349391092689137666]' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[carrier_name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 10 Delayed Airports' name='[Top 20 Delayed Airports]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1349391092689137666]' function='order' user:ui-marker='order'>
            <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[airport (airports.csv)]' to='&quot;Yuma MCAS-Yuma International&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, state, city' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.391243' group-percentage='0.0734463' measure-ordering='alphabetic' measure-percentage='0.535311' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:airport (airports.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albuquerque International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Illinois Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Metropolitan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durango-La Plata County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Smith Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gregg County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack McNamara &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Los Angeles International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Memphis International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Natrona County Intl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pease International Tradeport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reno/Tahoe International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Barbara Municipal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springfield-Branson Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;William B Hartsfield-Atlanta Intl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangor International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burbank-Glendale-Pasadena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chippewa County International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glynco Jetport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hilo International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juneau International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawton-Ft Sill Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mbs International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pueblo Memorial&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theodore F Green State&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waterloo Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adams &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellingham Intl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cape Girardeau Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;City of Colorado Springs Muni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forbes &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greater Peoria Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Idaho Falls Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kent County International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McGhee-Tyson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muskegon County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Owensboro-Daviess County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raleigh-Durham International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Diego International-Lindbergh &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southeast Texas Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trenton-Mercer County &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wichita Mid-Continent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arcata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlotte County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas Love &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eglin Air Force Base&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gainesville Regional&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James C. Johnson Petersburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Crosse Municipal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luis Munoz Marin International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newport News/Williamsburg International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phoenix Sky Harbor International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roanoke Regional/ Woodrum &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Savannah International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Illinois-Willard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Billings Logan Intl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Nebraska Regional &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corpus Christi International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagle County Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Wayne International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Hole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Klamath Falls International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisville International-Standiford &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercedita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Castle County &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pellston Regional  of Emmet County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhinelander-Oneida County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe Municipal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Cloud Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;William P Hobby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Akron-Canton Regional&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bemidji-Beltrami County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Capital&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleveland-Hopkins Intl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dothan &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greater Rochester Int&apos;l&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Imperial County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ketchikan International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McKinney Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Beach International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pago Pago International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ralph Wien Memorial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Francisco International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southwest Florida International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tri-Cities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wiley Post Will Rogers Memorial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Austin-Bergstrom International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brownsville/S.Padre Island International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicago O&apos;Hare International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delta County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erie Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gillette-Campbell County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Helena Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joplin Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laredo International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette County Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ogden-Hinckley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronald Reagan Washington National&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shreveport Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ted Stevens Anchorage International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Youngstown-Warren Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barkley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippewa Valley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detroit Metropolitan-Wayne County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Falls International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Golden Triangle Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honolulu International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lea County Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Clellan-Palomar Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monterey Peninsula&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quad City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salt Lake City Intl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sloulin Field International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tinian International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watertown Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bradley International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmira/Corning Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;General Mitchell International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hays Municipal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John F Kennedy Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lambert-St Louis International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Bend Muni&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Columbus Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rock Springs-Sweetwater County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shenandoah Valley Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tallahassee Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany Cty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benedum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Capital City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Metropolitan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dubuque Municipal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Collins-Loveland &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greater Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indianapolis International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Key &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach (Daugherty )&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meadows &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nantucket Memorial&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Beach International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Jose International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southwest Georgia Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tri-Cities Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilkes-Barre/Scranton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arnold Palmer Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismarck Municipal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlotte/Douglas International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dallas-Fort Worth International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Paso International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gallatin &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hagerstown Regional-Richard Henson &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James M Cox Dayton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lynchburg Municipal-Preston Glenn &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle Georgia Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niagara Falls Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piedmont Triad International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert Gray AAF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scott AFB/MidAmerica &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stillwater Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asheville Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Grass &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlottesville-Albermarle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dane County Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elko Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garden City Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisburg Intl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamestown Municipal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaGuardia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahlon Sweet &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pittsburgh International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roberts &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotts Bluff County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton Metro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valdosta Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yampa Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austin Straubel International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brainerd-Crow Wing County Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago Midway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Del Rio International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eppley Airfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;George Bush Intercontinental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hector International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wayne /Orange Co&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laramie Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missoula International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northwest Arkansas Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portland International Jetport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rogue Valley International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheppard AFB/Wichita Falls Municipal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampa International &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waco Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yellowstone Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baltimore-Washington International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo Niagara Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chico Municipal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evansville Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glacier Park Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry E. Rohlsen &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joslin Field - Magic Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laughlin/Bullhead International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marthas Vineyard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modesto City-County-Harry Sham &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogdensburg Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Provo Muni&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell Industrial Air Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sioux Gateway &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texarkana Regional-Webb &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Dulles International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yuma MCAS-Yuma International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena County Regional &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Binghamton Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Wisconsin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Craven County Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Iowa &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fresno Yosemite International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulfport-Biloxi Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kodiak &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lovell &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merle K (Mudhole) Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Orleans International &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria Pub/Capt G Allan Hancock &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St George Muni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tweed-New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilmington International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albert J Ellis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bert Mooney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cedar City Muni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia Regional&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duluth International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Lauderdale-Hollywood Int&apos;l&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenville-Spartanburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inyokern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Key West International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island - MacArthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne International &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashville International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm Springs International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redding Municipal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Obispo Co-McChesney &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane Intl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tri-State/Walker-Long &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Will Rogers World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene Regional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barnstable Mun Boardman/Polando &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bush &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chisholm-Hibbing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devils Lake Municipal-Knoke &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fayetteville Municipal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Houghton County Memorial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalamazoo County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lehigh Valley International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McAllen Miller International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery Regional Apt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orlando Sanford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Municipal-Baldwin &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Angelo Regional /Mathis &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sonoma Co&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toledo Express&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wendover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aspen-Pitkin Co/Sardy &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise Air Terminal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherry Capital&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellington &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gen Edw L Logan Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg-Laurel Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Foss &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mammoth Yosemite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis-St Paul Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pocatello Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rochester International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seattle-Tacoma Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syracuse-Hancock Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valley International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yeager&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Birmingham International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleston AFB/International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyril E. King&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Easterwood &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Friedman Memorial&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gunnison County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kona International At Keahole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lubbock International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Oakland International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newark Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philadelphia Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rickenbacker International &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sarasota Bradenton International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Petersburg-Clearwater International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler Pounds &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worcester Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baton Rouge Metropolitan, Ryan &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canyonlands &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati Northern Kentucky Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickinson Municipal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flagstaff Pulliam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Falls Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntsville International &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston-Nez Perce County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McCarran International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Outagamie County Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rafael Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Bend Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Cty &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westchester Cty&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1349391092679319552:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;April&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Feburary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;May&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:airport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ACY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BET&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BTM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CLD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DAY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ENV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FWA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HDN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LAW&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MQT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OTZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PVD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SBA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SPI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TUL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ABE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ASE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BOI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CGI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GRR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IAG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LNK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MKG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OKC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ROC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SIT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WYS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ABY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AVL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BQN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CIC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CWA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EGE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FNT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GTF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IFP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KTN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MMH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SLC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TOL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AGS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BUR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CMH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EVV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GFK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HOB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ISP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LCH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MEM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MSP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PGD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RDM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SCE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;STC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TXK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ADK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BFF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BTR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DBQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GCC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HIB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;INL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MDT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MRY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PAH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PWM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SBN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SPN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ACK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AVP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BRD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CID&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CYS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EKO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FOE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GTR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ILG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MBS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MOB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ORF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PSG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SMF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TPA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;APN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BMI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CDV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DRT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GRI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HYS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JAX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LIT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PIH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RNO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SHD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VPS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CRW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DVL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FLG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GSO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IAH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JMS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LRD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MLB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OMA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PNS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ROW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SJC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;XNA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AMA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BJI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DLH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FAI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GPT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HSV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JAC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LGB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MHK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MYR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PIA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RIC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SGF&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VEL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AZO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CIU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DAB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ELM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FSD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GUC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ILM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LAR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MCI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MOD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ORH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PSP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SMX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AKN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BHM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CMI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DHN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EWN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GGG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HOU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ITH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MFE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MSY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PHF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RDU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SDF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;STL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TYR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BIL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BZN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CMX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DIK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GJT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HPN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ITO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LFT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MFR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MTJ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RFD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SEA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;STS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TYS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ANC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BLI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DRO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GRB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HYA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JAN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LIH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MHT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OAJ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PIB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RKS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SGU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SUN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VLD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BNA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CEC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CPR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DSM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FAY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GRK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LMT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MKE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OGG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PIT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ROA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SHV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SWF&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WRG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ADQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BFL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BTV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DCA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ESC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GCK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HLN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IPL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LBB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MDW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MSN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PBI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RAP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SBP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SPS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TVC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ACV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BDL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CKB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ELP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IMT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MCN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MOT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OTH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PUB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SAV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TTN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ABQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ATW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BPT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CSG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EAU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FLL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GSP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ICT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JNU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LSE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OME&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PPG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SJT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TKI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;YAK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BIS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CNY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DLG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EYW&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GNV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HRL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IYK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MGM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MVY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PHX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RHI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;STT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AEX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BGM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BUF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EUG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GEG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HNL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ISN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LBE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MEI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MSO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PDX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RDD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SCC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SRQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TWF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ABR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BQK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CVG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EFD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FNL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IDA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KOA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LWS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MLU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ONT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PSC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RSW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SJU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TLH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;YUM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Carrier Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AirTran Airways Corporation, Allegiant Air, American Eagle Airlines Inc. and 10 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Carrier Name (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alaska Airlines Inc., American Airlines Inc., Delta Air Lines Inc. and 7 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:airport (airports.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albuquerque International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Illinois Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Metropolitan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durango-La Plata County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Smith Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gregg County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack McNamara &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Los Angeles International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Memphis International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Natrona County Intl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pease International Tradeport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reno/Tahoe International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Barbara Municipal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springfield-Branson Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;William B Hartsfield-Atlanta Intl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangor International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burbank-Glendale-Pasadena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chippewa County International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glynco Jetport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hilo International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juneau International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawton-Ft Sill Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mbs International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pueblo Memorial&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theodore F Green State&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waterloo Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adams &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellingham Intl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cape Girardeau Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;City of Colorado Springs Muni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forbes &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greater Peoria Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Idaho Falls Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kent County International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McGhee-Tyson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muskegon County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Owensboro-Daviess County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raleigh-Durham International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Diego International-Lindbergh &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southeast Texas Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trenton-Mercer County &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wichita Mid-Continent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arcata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlotte County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas Love &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eglin Air Force Base&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gainesville Regional&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James C. Johnson Petersburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Crosse Municipal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luis Munoz Marin International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newport News/Williamsburg International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phoenix Sky Harbor International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roanoke Regional/ Woodrum &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Savannah International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Illinois-Willard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Billings Logan Intl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Nebraska Regional &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corpus Christi International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagle County Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Wayne International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Hole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Klamath Falls International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisville International-Standiford &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercedita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Castle County &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pellston Regional  of Emmet County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhinelander-Oneida County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe Municipal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Cloud Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;William P Hobby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Akron-Canton Regional&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bemidji-Beltrami County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Capital&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleveland-Hopkins Intl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dothan &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greater Rochester Int&apos;l&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Imperial County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ketchikan International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McKinney Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Beach International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pago Pago International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ralph Wien Memorial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Francisco International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southwest Florida International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tri-Cities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wiley Post Will Rogers Memorial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Austin-Bergstrom International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brownsville/S.Padre Island International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicago O&apos;Hare International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delta County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erie Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gillette-Campbell County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Helena Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joplin Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laredo International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette County Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ogden-Hinckley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronald Reagan Washington National&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shreveport Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ted Stevens Anchorage International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Youngstown-Warren Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barkley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippewa Valley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detroit Metropolitan-Wayne County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Falls International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Golden Triangle Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honolulu International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lea County Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Clellan-Palomar Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monterey Peninsula&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quad City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salt Lake City Intl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sloulin Field International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tinian International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watertown Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bradley International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmira/Corning Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;General Mitchell International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hays Municipal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John F Kennedy Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lambert-St Louis International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Bend Muni&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Columbus Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rock Springs-Sweetwater County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shenandoah Valley Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tallahassee Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany Cty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benedum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Capital City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Metropolitan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dubuque Municipal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Collins-Loveland &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greater Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indianapolis International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Key &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach (Daugherty )&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meadows &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nantucket Memorial&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Beach International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Jose International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southwest Georgia Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tri-Cities Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilkes-Barre/Scranton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arnold Palmer Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismarck Municipal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlotte/Douglas International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dallas-Fort Worth International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Paso International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gallatin &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hagerstown Regional-Richard Henson &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James M Cox Dayton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lynchburg Municipal-Preston Glenn &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle Georgia Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niagara Falls Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piedmont Triad International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert Gray AAF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scott AFB/MidAmerica &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stillwater Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asheville Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Grass &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlottesville-Albermarle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dane County Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elko Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garden City Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisburg Intl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamestown Municipal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaGuardia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahlon Sweet &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pittsburgh International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roberts &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotts Bluff County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton Metro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valdosta Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yampa Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austin Straubel International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brainerd-Crow Wing County Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago Midway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Del Rio International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eppley Airfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;George Bush Intercontinental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hector International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wayne /Orange Co&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laramie Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missoula International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northwest Arkansas Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portland International Jetport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rogue Valley International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheppard AFB/Wichita Falls Municipal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampa International &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waco Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yellowstone Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baltimore-Washington International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo Niagara Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chico Municipal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evansville Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glacier Park Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry E. Rohlsen &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joslin Field - Magic Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laughlin/Bullhead International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marthas Vineyard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modesto City-County-Harry Sham &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogdensburg Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Provo Muni&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell Industrial Air Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sioux Gateway &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texarkana Regional-Webb &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Dulles International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yuma MCAS-Yuma International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena County Regional &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Binghamton Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Wisconsin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Craven County Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Iowa &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fresno Yosemite International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulfport-Biloxi Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kodiak &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lovell &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merle K (Mudhole) Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Orleans International &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria Pub/Capt G Allan Hancock &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St George Muni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tweed-New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilmington International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albert J Ellis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bert Mooney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cedar City Muni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia Regional&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duluth International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Lauderdale-Hollywood Int&apos;l&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenville-Spartanburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inyokern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Key West International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island - MacArthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne International &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashville International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm Springs International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redding Municipal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Obispo Co-McChesney &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane Intl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tri-State/Walker-Long &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Will Rogers World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene Regional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barnstable Mun Boardman/Polando &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bush &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chisholm-Hibbing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devils Lake Municipal-Knoke &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fayetteville Municipal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Houghton County Memorial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalamazoo County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lehigh Valley International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McAllen Miller International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery Regional Apt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orlando Sanford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Municipal-Baldwin &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Angelo Regional /Mathis &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sonoma Co&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toledo Express&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wendover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aspen-Pitkin Co/Sardy &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise Air Terminal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherry Capital&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellington &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gen Edw L Logan Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg-Laurel Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Foss &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mammoth Yosemite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis-St Paul Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pocatello Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rochester International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seattle-Tacoma Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syracuse-Hancock Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valley International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yeager&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Birmingham International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleston AFB/International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyril E. King&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Easterwood &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Friedman Memorial&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gunnison County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kona International At Keahole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lubbock International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Oakland International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newark Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philadelphia Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rickenbacker International &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sarasota Bradenton International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Petersburg-Clearwater International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler Pounds &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worcester Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baton Rouge Metropolitan, Ryan &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canyonlands &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati Northern Kentucky Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickinson Municipal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flagstaff Pulliam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Falls Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntsville International &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston-Nez Perce County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McCarran International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Outagamie County Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rafael Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Bend Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Cty &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westchester Cty&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:carrier_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PSA Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ExpressJet Airlines Inc.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spirit Air Lines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Envoy Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Endeavor Air Inc.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allegiant Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinnacle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American Eagle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;US Airways Inc.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AirTran Airways Corporation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SkyWest Airlines Inc.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391094519586893:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391094519586893:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1844505578808651778:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:Calculation_1349391094473297953:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474334245:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474469414:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474547239:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474715176:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474752041:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474768426:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg: arr_delay:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473068575:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473150496:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473297953:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473531426:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473584675:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473875492:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094474334245:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094478700588:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488068152:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489063486:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:weather_delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652334158:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652371023:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652440656:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652534865:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094462717972:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487859252:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094652883026:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_ct:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: weather_ct:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:security_delay:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487965750:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:carrier_name:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Carrier : Name]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468005909:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468177942:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468263959:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469132314:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469279771:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469361692:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094472036381:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094462615571:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094468976665:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488018999:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:long:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:long:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:avg:arr_flights:qk:2]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:avg:arr_flights:qk:2]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:avg:arr_flights:qk:4]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[prc95:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094500548672:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094501011521:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391094515146827:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391094515146827:qk:1]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391094515146827:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094498680895:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1844505578808553472:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391094515183692:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391094515183692:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_diverted:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1844505578808619009:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[cum:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391092860329998:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391092860329998:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_ct:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094514778185:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_del15:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094504779842:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094504861763:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094506397764:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094506479685:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094506573894:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094514802762:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:arr_flights:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487744563:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:lat:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:lat:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:lat:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_ct:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:nas_delay:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487920693:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:carrier_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PSA Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ExpressJet Airlines Inc.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spirit Air Lines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Envoy Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Endeavor Air Inc.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allegiant Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinnacle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American Eagle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;US Airways Inc.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AirTran Airways Corporation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SkyWest Airlines Inc.&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field=' month' />
        <field-sort-custom-order field='Calculation_1349391092679319552' />
        <field-sort-custom-order field='Calculation_1349391092718141443' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_flights' />
        <field-sort-custom-order field='arr_del15' />
        <field-sort-custom-order field='Calculation_1349391094446825489' />
        <field-sort-custom-order field='Calculation_1349391094447632402' />
        <field-sort-custom-order field='carrier_ct' />
        <field-sort-custom-order field=' weather_ct' />
        <field-sort-custom-order field='nas_ct' />
        <field-sort-custom-order field='security_ct' />
        <field-sort-custom-order field='late_aircraft_ct' />
        <field-sort-custom-order field='arr_cancelled' />
        <field-sort-custom-order field='arr_diverted' />
        <field-sort-custom-order field=' arr_delay' />
        <field-sort-custom-order field='Calculation_1349391092860329998' />
        <field-sort-custom-order field='Calculation_1349391092689137666' />
        <field-sort-custom-order field=' carrier_delay' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='F22' />
        <field-sort-custom-order field='iata' />
        <field-sort-custom-order field='airport (airports.csv)' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='lat' />
        <field-sort-custom-order field='long' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
        <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Different Delays' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Different Delays' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Delay by Carriers Yearwise' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Carrier Name' />
        <param name='target' value='Delay by Carriers Yearwise' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Different flight delays' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Carrier Name' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Delay by Carriers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Delay by Carriers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' worksheet='Delay for Top 10 Airports' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Delay by Airports' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cancelled or Diverted'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cancelled or Diverted</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Month' datatype='string' name='[Calculation_1349391092679319552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [ month] &#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;Feburary&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='SUM([Delayed Carrier Count])/SUM([Arriving Flights Count])' datatype='real' name='[Calculation_1349391094519586893]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([carrier_ct])/SUM([arr_flights])' />
            </column>
            <column caption='SUM([Cancelled Arrival Count])/SUM([Arriving Flights Count])*100' datatype='real' name='[Calculation_1844505578808553472]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([arr_cancelled])/SUM([arr_flights])*100' />
            </column>
            <column caption='SUM([Diverted Count])/SUM([Arriving Flights Count])*100' datatype='real' name='[Calculation_1844505578808619009]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([arr_diverted])/SUM([arr_flights])*100' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Diverted Count' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1349391092679319552]' derivation='None' name='[none:Calculation_1349391092679319552:nk]' pivot='key' type='nominal' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1349391094519586893]' derivation='User' name='[usr:Calculation_1349391094519586893:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1844505578808553472]' derivation='User' name='[usr:Calculation_1844505578808553472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1844505578808619009]' derivation='User' name='[usr:Calculation_1844505578808619009:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1844505578808553472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1844505578808619009:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1844505578808553472:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1844505578808619009:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]'>
            <groupfilter function='level-members' level='[tmn:Calculation_1349391092718141443:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;January&quot;</bucket>
              <bucket>&quot;Feburary&quot;</bucket>
              <bucket>&quot;March&quot;</bucket>
              <bucket>&quot;April&quot;</bucket>
              <bucket>&quot;May&quot;</bucket>
              <bucket>&quot;June&quot;</bucket>
              <bucket>&quot;July&quot;</bucket>
              <bucket>&quot;August&quot;</bucket>
              <bucket>&quot;September&quot;</bucket>
              <bucket>&quot;October&quot;</bucket>
              <bucket>&quot;November&quot;</bucket>
              <bucket>&quot;December&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Proportional to Total Arriving Count' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' value='Delay Causes'>
              <formatted-text>
                <run>Delay Causes</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <tooltip column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Airport'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>By Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 20 Delayed Airports]' derivation='InOut' name='[io:Top 20 Delayed Airports:nk]' pivot='key' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]'>
            <groupfilter function='member' level='[io:Top 20 Delayed Airports:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Yuma MCAS-Yuma International&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1239' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]' value='In / Out of Top 10  Airports'>
              <formatted-text>
                <run>In / Out of Top 10  Airports</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delay by Airports'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'> Delay by Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]'>
            <groupfilter function='level-members' level='[carrier_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Cherry Capital&quot;' />
              <groupfilter from='&quot;Chicago Midway&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Elko Regional&quot;' />
              <groupfilter from='&quot;Elmira/Corning Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;McGhee-Tyson&quot;' />
              <groupfilter from='&quot;Meadows &quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Miami International&quot;' />
              <groupfilter from='&quot;Midland International&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Watertown Intl&quot;' />
              <groupfilter from='&quot;Westchester Cty&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Yuma MCAS-Yuma International&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='35048589.031235337' min='24753073.694885064' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='6177843.4610888883' min='2822114.3360016025' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min='1000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport Name:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Airport Code:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Delay:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6584098339080811' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Airports_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'> Delay by Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]'>
            <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;George Bush Intercontinental&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]'>
            <groupfilter function='member' level='[carrier_name]' member='&quot;American Airlines Inc.&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]'>
            <groupfilter function='level-members' level='[io:Top 10 Delayed Carriers:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='40712245.208655387' min='19467615.368795577' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='7191568.523452498' min='1686775.1144263207' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min='1000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' value='In / Out of Top 10 Carriers'>
              <formatted-text>
                <run>In / Out of Top 10 Carriers</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport Name:&#9;&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Airport Code:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Delay:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&gt; minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier Delay:   </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Late Aircraft Delay:  </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>NAS Delay: </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>Weather Delay : &lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>Security : &lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6584098339080811' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Carriers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay by Carriers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[pcto:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcto:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcto:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name,Airport Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[airport (airports.csv)]' />
              <groupfilter function='level-members' level='[airport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]'>
            <groupfilter function='member' level='[io:Top 10 Delayed Carriers:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='DESC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name,Airport Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1606' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Carrier Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Average Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Late Aircraft Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average Delay: </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delay by Carriers Yearwise'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay by Carriers Yearwise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391094447632402]' derivation='Avg' name='[avg:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Year-Trunc' name='[tyr:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]'>
            <groupfilter function='level-members' level='[airport (airports.csv)]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='ASC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]' />
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]' scope='cols' value='Year (Month wise)' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay for Top 10 Airports'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay for Top 10 Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Dallas-Fort Worth International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Denver Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;George Bush Intercontinental&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;John F Kennedy Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Los Angeles International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Newark Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;San Francisco International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;William B Hartsfield-Atlanta Intl&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' direction='DESC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1303' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max='75000.0' max-size='1' min='25000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delayed Flight Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delayed flights count by Cause</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column-instance column='[ weather_ct]' derivation='Sum' name='[sum: weather_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_ct]' derivation='Sum' name='[sum:late_aircraft_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_ct]' derivation='Sum' name='[sum:nas_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_ct]' derivation='Sum' name='[sum:security_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: weather_ct:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='Arriving Flights' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Other Delays' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk] + [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Different Delays'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Different Delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='[Total Delay]/[Total Delay]' datatype='real' name='[Calculation_1349391094472744990]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='[Calculation_1349391092689137666]/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Arrival Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094474784811]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([ arr_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Average Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094478749741]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([Calculation_1349391094447632402])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Carrier Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094478942254]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([ carrier_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Late Aircraft Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479024175]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([late_aircraft_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([NAS Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479102000]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([nas_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Security Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479196209]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([security_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Weather Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479257650]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([weather_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1349391094472744990]' derivation='User' name='[usr:Calculation_1349391094472744990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094474784811]' derivation='User' name='[usr:Calculation_1349391094474784811:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094478749741]' derivation='User' name='[usr:Calculation_1349391094478749741:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094478942254]' derivation='User' name='[usr:Calculation_1349391094478942254:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479024175]' derivation='User' name='[usr:Calculation_1349391094479024175:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479102000]' derivation='User' name='[usr:Calculation_1349391094479102000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479196209]' derivation='User' name='[usr:Calculation_1349391094479196209:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479257650]' derivation='User' name='[usr:Calculation_1349391094479257650:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]'>
            <groupfilter function='level-members' level='[tmn:Calculation_1349391092718141443:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='Proportional of total' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' value='Differrent Delays'>
              <formatted-text>
                <run>Differrent Delays</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='336' />
                <format attr='maxwidth' value='336' />
                <format attr='minheight' value='140' />
                <format attr='maxheight' value='140' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</rows>
        <cols>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk] * [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='Different flight delays'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Different flight delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='AVG([Arrival Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094488068152]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='AVG([ arr_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([Carrier Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094488756281]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([ carrier_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([Weather Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094488887354]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([weather_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([NAS Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094488944699]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([nas_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([Security Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094488985660]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([security_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([Late Aircraft Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094489018429]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([late_aircraft_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([Arrival Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094489063486]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([ arr_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094488068152]' derivation='User' name='[usr:Calculation_1349391094488068152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094488756281]' derivation='User' name='[usr:Calculation_1349391094488756281:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094488887354]' derivation='User' name='[usr:Calculation_1349391094488887354:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094488944699]' derivation='User' name='[usr:Calculation_1349391094488944699:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094488985660]' derivation='User' name='[usr:Calculation_1349391094488985660:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094489018429]' derivation='User' name='[usr:Calculation_1349391094489018429:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094489063486]' derivation='User' name='[usr:Calculation_1349391094489063486:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489063486:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488068152:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Propotional Delay (in Minutes)' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' scope='rows' value='Total Delay (in Minutes)' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' value='Flight Delay Causes'>
              <formatted-text>
                <run>Flight Delay Causes</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk] + [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Different flight delays_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Different flight delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[ arr_delay]' derivation='Sum' name='[sum: arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Others ( in Minutes )' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='Arrival Delay (in minutes)' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk:4]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk] + [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Flight Counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Avg' name='[avg:arr_flights:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]' />
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='DESC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' />
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:arr_flights:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='36625' id='1' name='Different Delays' w='99900' x='1200' y='875'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7376' id='6' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' w='16811' x='78538' y='11850'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7618' id='8' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' w='16811' x='78538' y='19589'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7618' id='7' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16811' x='78671' y='3869'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='55985' id='9' name='Different flight delays' w='55615' x='997' y='39903'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='59129' id='10' name='Cancelled or Diverted' w='39535' x='58937' y='40750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='12125' id='16' name='Cancelled or Diverted' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' w='14100' x='83500' y='41250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='22613' id='17' name='Different flight delays' pane-specification-id='4' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' w='12044' x='65473' y='5708' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='57920' id='1' name='Delay by Airports' w='97010' x='1794' y='2056'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='8' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' w='16800' x='78300' y='23750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='9' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16800' x='78300' y='9000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='11000' id='11' name='Delay by Airports' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' w='14000' x='79600' y='31500'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='7' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' type='filter' w='16800' x='78200' y='16000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='41596' id='12' name='Delay by Carriers' w='98804' x='0' y='58888'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='8706' id='18' name='Delay by Carriers' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' w='9302' x='68837' y='57074'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='5488' id='9' mode='checkdropdown' name='Delay by Carriers' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='11061' x='79107' y='88913'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='39078' id='26' name='Delay by Carriers' w='93515' x='741' y='61142' />
        <zone h='7245' id='27' name='Delay by Carriers' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' w='8862' x='87516' y='59605' />
        <zone h='6257' id='28' mode='checkdropdown' name='Delay by Carriers' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' type='filter' w='9897' x='76649' y='60922' />
        <zone h='58836' id='29' name='Delay by Airports' w='96313' x='1035' y='878' />
        <zone h='11636' id='31' name='Delay by Airports' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' w='9056' x='87710' y='43908' />
        <zone h='9660' id='32' name='Delay by Airports' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' w='9056' x='87128' y='33809' />
        <zone h='8013' id='33' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='10349' x='86158' y='18990' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 4'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='56469' id='1' name='Delay by Carriers Yearwise' w='82743' x='462' y='726'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='6651' id='6' mode='checkdropdown' name='Delay by Carriers Yearwise' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16795' x='83436' y='1814'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='43773' id='7' name='Delay by Carriers Yearwise' pane-specification-id='2' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' w='14638' x='83975' y='9432'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='43908' id='8' name='Delay for Top 10 Airports' w='71410' x='65' y='55873' />
        <zone h='38090' id='9' name='Flight Counts' w='33312' x='72380' y='60922' />
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='782' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98466' id='1' param='vert' removable='false' type='layout-flow' w='99166' x='417' y='767'>
            <zone fixed-size='138' h='13231' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99166' x='417' y='767' />
            <zone h='85235' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99166' x='417' y='13998'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Flight Delays due to various reasons peaks at around June-July and also around December. July 2014 was an exception, worth exploring the root causes and scenarios. We see that the security check delay contributes the least and the arrival delay contributes the most towards the overall delay. We also see that most flights get cancelled during January-February and most get delayed around May-July period. This may be due to extreme weather or holiday seasons as we see it peaks around summer and winter.' captured-sheet='Dashboard 1' id='1' />
                  <story-point caption='Here we see the average delay based on different carriers spread across different airports in USA. We see that when all airports are taken into considerations across the map, Southwest Airlines gets delayed the most followed by United Air and American Airlines . When we click Southwest Airlines in the bottom plot, we see the top 3 airports contributing towards its delay are Chicago , Las Vegas and Baltimore. Similarly we can see by combining different airport names with year that which flights were delayed the most.' captured-sheet='Dashboard 2' id='2'>
                    <capturedDeltas>
                      <worksheet name='Delay by Airports'>
                        <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
                          <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
                          <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='This is another Geolocation plot of the airports to discover more information on them. We see if we take all the years and all the carriers, the airport which caused the most delay is Chicago O&apos;Hare airport followed by Atlanta and Texas. Here we can also see for different carriers, which airports caused the most delay e.g When the carrier is Delta airlines, we see that Atlanta caused the most delay. For Chicago airport, Southwest airlines is not even in top 10 delayed carriers. We can also hover our mouse on the bottom plot to see the exact geolocation of that particular airport.' captured-sheet='Dashboard 3' id='3'>
                    <capturedDeltas>
                      <worksheet name='Delay by Airports'>
                        <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]'>
                          <groupfilter function='member' level='[carrier_name]' member='&quot;Southwest Airlines Co.&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='6183928.1169417361' min='2945832.213932029' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='36318642.212266952' min='24212765.904822033' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Delay by Carriers'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]</field>
                                  <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Southwest Airlines Co.&quot;</value>
                                <value>148920.66051411082</value>
                                <value>0.17236488611552994</value>
                                <value>0.21787532066589027</value>
                                <value>0.20510200238995918</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='So now,we only take the top 10 airports and top 10 carriers based on the delay.We see that the results change a bit. Now when we plot all the 10 airports on the map and plot the corresponding airlines which got most delayed(within top 10 overall).We see though Southwest is still leading the delay charts, but when we select individual airport, the situation changes.eg. For Atlanta airport, Delta and ExpressJet Airlines contribute to most of delay. Similarly, for Chicago, Southwest is not even in top 10 delayed carriers. This means the most delay of Soutwest is not from the most delayed airports but rather spread over the all the airports.' captured-sheet='Dashboard 4' id='4'>
                    <capturedDeltas>
                      <worksheet name='Delay by Carriers Yearwise'>
                        <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]'>
                          <groupfilter function='level-members' level='[airport (airports.csv)]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Delay for Top 10 Airports'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows pres-mode='true' saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Different flight delays_1'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Different flight delays'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delayed Flight Count'>
      <cards>
        <edge name='left'>
          <strip size='125'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card pane-specification-id='3' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cancelled or Diverted'>
      <cards>
        <edge name='left'>
          <strip size='468'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='202'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094514778185:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Carriers'>
      <cards>
        <edge name='left'>
          <strip size='177'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='156'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airport'>
      <cards>
        <edge name='left'>
          <strip size='221'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='195'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Carriers Yearwise'>
      <cards>
        <edge name='left'>
          <strip size='400'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='197'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airports'>
      <cards>
        <edge name='left'>
          <strip size='468'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='312'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action(Carrier Name)]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Carrier : Name]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airports_1'>
      <cards>
        <edge name='left'>
          <strip size='390'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='390'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' type='filter' />
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay for Top 10 Airports'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Different Delays'>
      <cards>
        <edge name='left'>
          <strip size='468'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468005909:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468177942:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468263959:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468333592:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469132314:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469279771:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469361692:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094472036381:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cancelled or Diverted'>
          <zoom type='entire-view' />
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Different Delays'>
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Different flight delays'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Delay by Airports'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Delay by Carriers' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Delay by Airports'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Delay by Carriers' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Delay by Carriers Yearwise'>
          <zoom type='entire-view' />
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Delay for Top 10 Airports'>
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Flight Counts'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='worksheet' name='Flight Counts'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='200'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cancelled or Diverted' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      iMs0W8oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Airport' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAANxUlEQVR4nO3cS3MbV3qA4fecRqNxB0iABEFSEiVKoi3ZSuQo48nUlOOpbCZZpGYx26nK
      JstU/kIW2eY3pCr7WaSyySqVLDK240siWZZE3SiKF/GKC3FrNLrPyYK0RhrLZZVrTHh8vmcj
      otHd+LqLL7tBFKWstRYhHKUnPYAQkyQBCKelXnzwj//87zx4uj+pWcQEvP/X7/K005/0GBPz
      UgCr63v83/3NSc0iJuBC+yr3mkeTHmNi5BZIOO2VAaxcWOTdK4u8uVDF04pMJkM2pfC0Rinw
      tALA8zQK8PTxbnTK573rF3nv2jnqs1WuLM0xnfW4ulRHKYVWx9tppdBacbIXri7Vjpcpxdm5
      abwXnj/e7rev4XkapRTn5qYoFrOkXnh972QbfTLn1fP17+7M/cA0V2+ye+8u1hpMkmCtxSQx
      1lqGm/fZunWT0WCENQZrEowxv7Nuwqh3hDVfLjv51yRYYwDorK09fz5s7jAexc+ft9a8sO3J
      axtDb2cbEw2Iwuj5PM+3OZmjs7b2rY879aqF01mPD75Y5923l/np4hzdThfikGIQsNGN+asf
      X+aTzx/hB1l8z6Ksodcf8qhj2Hq6iSrP4Eddutk6N66cI59J4xdK/ORCmZtPj2i2u/z0+jLN
      nV1+/cEaxVyav/izq9jRkHy5TMoP+MsfLbO2tkG2UuXZQZso9hgNm/zJ2ytsb+1Qq1Z4tNtk
      0IkoFANGsWahothrDpiZb+CHHZ4dRd/6xLhGeRobGQbPHvH4P37D7J/eQJs+6coKXjjAWEW4
      vcrBOEOQNNlb32fmbIPxYEi6WgXrY+wINWwT+zV8BnjFacK9HYxOM3/9HcaDAftffEw8isAa
      UtWQ7t0PSTIzFEtp8jPTdJojMsUC4bNVYj2FGbaYe2OZwcgn6vVIZ/NE7Q10roZve+xvHjFz
      7uy3Pu5XXgHGOsW7VxaJB31urR/ia0tiLFprFmsF7mw0yQUpPE+DPf6Ja4zlqNPl4vJZlmtZ
      djsRxsTcXH3KVnPAdN5n52jEsNvl3laLrZ19bq7tARZjYXv3kGftAVt7HTyteLK5yxcbhzxY
      36bVHfLZ3S2mGjX2N58xihNagzHWWhJrSWmNMQl3H28T2RQ6HhEmYIx8xPG6tJdi3GrSPeww
      tVgn0Vmql1dgHKO0T+3NPyLI5aguX2I8HJGtlPALU0wtNrBorDEopcjXzxAe7ILWWGMBCyfX
      eqUU6VKV8nyD3EwDbEJ2ZoGZyytkawvkp6coL62QSkUYXcbPBBRq08d70B7WJKAV+blzZEoF
      omFMtlxAndxZfBvqxQ/CfvUP//Lab4ILxQLXzs/yZH2L7c7oWw8gJuuXf/tzp98Ev/IW6HX0
      uj1+c6v3+5xFiFMnvwUSTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0
      CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMA
      hNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4
      TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMk
      AOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQ
      TpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNMkAOE0CUA4TQIQTpMAhNNSLz64
      sjyPn0lPahYxAUqpSY8wUS8FsLrX4ebGwaRmERNw7t3Lkx5houQWSDjtlQGUcwFT5QKBhkoh
      QykXUM4FVPIB5XzwtTubrpR4Z3mOXErj+z45X1POZ776oi9edpVmZaHK1Av7/XKbbCaNd7Ks
      Xi3hP99WUc599VZN/+7lXL28nlYKlKaclds8cSz1qoWX5qsYL2BUDEinNXvdiLlSlpSn2Wr2
      KRcL1LKazlgxX84yTgy3H22yMJVjvR1xZaHM455m3o8oT1d4sNtlaTrLZmvAbCHDm0tz/Ped
      deancjSjFG+UYsJRTKVcopSypDIBz1pD3rk4y399tErXWJbm56gHhksXl/mf209oVAMGiU/Y
      61Iql7HjkPOLc3x6d43KVIVOq8WT9oiLc9Mo32cchlw62+CDe0+ZK6T4dE1u9cTXXAESFHHY
      Z25hjuZhl7ly7vlz9ekCtVKOSws18iloRjFbuz1KuRReymeuEBAlFoBGrcx0PqBWzDI/O82F
      2SIPnu7xaPuQ5mCM8nzG0YjVzQPqUwWuLtXJZ9NoYK4UcGezRb1WYXG2xtmCZaE+w8bOIZut
      IYoU1WKalcUa42hEYjVbe022jmIquRQrC9WTiRWjcIhFs7F7yFZ7+F2fU/EH5JVXgEf7RxRM
      xCgxbHQjhuoILGgFRilK+RxrOxHbzR5Wa6LhGGMTbLt3fBXY6jNIPD5+0CaTy5JKB2zvtdg4
      6BAay0E/opLxiMdjWp0uOk5oJx32+hEFnbDfj8DzWapm+d/NFvlSgX/98AHT5QLa91mopFk/
      6NCoVdjrD9jvhoDCS6dZrAT0hmO2j7pgDBuHRxhjAEU6E7BQ9Nk47J/uWRbfW8paa7988Df/
      9GtuPn42yXnEKfvFL3/CvebRpMeYGPktkHCaBCCcJgEIp0kAwmkSgHCaBCCcJgEIp0kAwmkS
      gHCaBCCcJgEIp0kAwmkSgHCaBCCcJgEIp0kAwmmv/Isw4Y7l6SKZtPfNK/5ASQCOy2ehMukh
      JkhugYTTJAABQNjvY61lHEXfuK61hiSOj782CfE4fvl5kxDHyXcy5++b3AIJANY++4DqpRt0
      956Qzwakp+r4WhP2u2QLRcKjA8YqTyHnMewPGccRxelZsn7Ms60OygwISlUef/IRS29dIfGK
      LCw1Jn1Y30iuAAKAfP0Mvb2n2KTDo5uP2Xu6wd6jW6zdW+dwZ5tus8X67ds8W3tCuVbl/ocf
      4mWO/78oOw5JUlmG3TYz5y4wVS1N+Ghen1wBBAD5UplcFXYO88yc2aU0W2e4n/DGtTq92GcU
      DinP1KieaeCn01z72Z/TO9inNlOiMFVBBxlMHBE29znqxeQKhUkf0muRAAQA1bk5AM5XAZaP
      Fy4eLysBLMy+vP782d9+vfDCN/vJfv5QyC2QcJoEIJwmAQinSQDCaRKAcJoEIJwmAQinSQDC
      aRKAcJoEIJwmAQinSQDCaRKAcJoEIJwmAQinSQDCaRKAcJoEIJwmAQinSQDCaRKAcJoEIJwm
      AQinSQDCaRKAcJoEIJwmAQinSQDCaRKAcJoEIJwmAQinSQDCaRKAcJoEIJwmAQinSQDCaRKA
      cJoEIJwmAQinSQDCaRKAcJoEIJwmAQinSQDCaRKAcJoEIJwmAQinSQDCaRKAcJoEIJwmAQin
      SQDCaakXHwS+Ryad+rp1xQ+QmvQAE/bSd/vF6xdQ52YmNYuYAKXcTuClAJ62+6wedCY1i5iA
      n1Of9AgTJe8BhNNeecN/40wdbQ0Pdg8JrWJkLBcrBbSyPG73sdaCUmAtY2O5Pj9DHEes7h+h
      tSIyhpTSLJbzbLS7nJ0u0RxEXCwFdGLL41YXDcTW4uvj9aLEcjQc0o0ScvkCFTNgPwJjLWfL
      BdbbXXzPI4wTfK0wFlJaERlL4ClIBcx4Mb1E0R6NSZ88l/Y0ozghk/IYozhfSPOgPTjl0/z9
      ldIKX7v7c/CVAcTxmM93O1ybrXC+VmHzsElkFFrBjTMN5nzDESk2DprgeRR8j3ZsebtRxdMa
      T0E4DGlMl2n2B/RjWJnKEcWGbEpzY2GWlLIkVnHQ67MyU+FJZ0Atn2XQ77BjPYIgz/szaQ5j
      aBRzBEGaP56t8KDVp0pIy6bJ+oqHhwN+drHBze0ms6kxzdjDao+0p0nbhG6i6I+GXF+s83D3
      gDgxp32Ov9dyvk85CCY9xsS8MoBcEHC9Mc3RaEy72wXlkZgE62ky2tCLDRv9Po1Chv/cOCTj
      edzeO+KtuRplX9Edjbh/cEQ6myWlFPu9IT+aqXKrE1OJ+5h0Go2lOQx52OrRqJSwSczdw5Cz
      eYU1FmMta80OBDky6RiM4dFBm63QsNdvExRK7A6hkQt43BoQjkJIp0msxVqLr2EYjlltjni7
      UWS33cXTHqM4Oe1z/L12NIo4GA4nPcbEKGut/fLB3/3bB9zea01yHnHK/v69y+wO+pMeY2Lc
      vfkTX/Hw89uMwyHxOGHn8QNGw5Akjgn7AyywdvNj7n/6GeMYdtfW2bl/h0EYEQ6GmCQhHPQx
      xjAaDIjj5HhfcUI8Ctl4cJ8kjjFJjLWwubpKEo8JB0MOt9bptHtsrq6e+jHLp17iudGgw+qH
      n+Jlc6iky/7OAfm0x3g4YOHH7xOFIdovoTS0N9eIM1MMbn3EwzuPOHvpCrrgE/hpuu0umcBj
      4+4dcvVzlItZYmuJwxCtNWeuvEU0HLJ28xPGkSExCbm6hgncikkAAoCnn39KrjJLf7AJnkep
      2sAqUIlmZraCMZAuVjh/5W0ACvUzEPfo9zMsXbtOMchQWmrQ2thk7sJlRq0NqovnmL2wTHP9
      Ccbzmapk2W0ZtALP8wiKVaaDFMNhTD8MCTzv1I9b3gM47jTfA+w9XKUwf55cLn0qr/c65Aog
      Ts3sxZVJj/AV8iZYOE0CEE77f/8vO7LOWkESAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delay by Airports' width='192'>
      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
      MloIYQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delay by Airports_1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Delay by Carriers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Carriers Yearwise' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Delay for Top 10 Airports' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delayed Flight Count' width='192'>
      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
      AU7xg8b/AwmBX2hP355fAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Different Delays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Different flight delays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Different flight delays_1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Flight Counts' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAOBUlEQVR4nO3d228b2X0H8O/M8CqREi8ydbcoU9bNNxnZXdlIinQ3u0ETNEFRNEELJA8p
      kJc+tEX/iQJ96luAPKVo+1AEecgicREs0Cx2s21TLLz2yo4l6y5KlmRdSJEcXsSZM32wrY2i
      sZec5VXn+3lZi9Ic/4jV1+QMvzxULMuyQCQptdkDEDUTA0BSYwBakSXw248+wNz8ku23N1cW
      kSmWT99YSOFff/pLPLr/MdKFsu1xdJar2QPQWWb+EOmyD7OTY/j4N+/hg/tJXIx5MRCL4f58
      EqODF6AuL2Hu/gOMXUqg1DWM796+CKuYw9zjIjzdYfzbz36Ky1evQS9aODY0BP0mVhYeIzQ0
      ju9/50+bfRdbBgPQgjR/F4zMNubml7C+9RT9F7rhCfjx+sxV5NQexLQUdvUybs7+EbpFFh3j
      EwAKGLx8BQ/ffxer4Q5cnpqAni9idPIa0vtFiMI6on1DeP21G82+ey1F4VUgklldzwFM06zn
      8kRfGE+CSWoVnwNYlsDSwjwC0T7kDrah+roQcFt4epjB0GAfkpvb6BsYAADkdR3xkYt1G5qo
      VioOgFE4xNPDIoTrCG5NRU7XYfk9uDzai7tzW5idncbq4go2NlZx49ZbEEJACAGeYlArq/gk
      WJglfHJ3Dt7OIII+DbuHWVwIdSCT1REKR5HKHCEcigCKQE4vYnpyHMI0oWlave8DkWN1vQpk
      MgDU4ngSTFJjAEhqDABJrSFViMNsAT/4x59Xfdw/fPcWvjoTr/1ARM/xEYCkxgCQ1BgAkhoD
      QFJjAEhqDABJzUEbtBfF9B4KwoVowMM2KLW16tugWgouVwcCwkC6ZFTUBhUO3xgjhIBhGI6O
      JapExQHQvEH43ALlsgmzmELa1BANuLGwmMRgfxRzDx4hHIogMTmNna01RCbHoVoWNE2D6rAQ
      p6oqXC6+bZnqp+LfLlXz4kuvv/bS74/UZByixuJJMEmNASCpMQAkNQaApMYAkNQYAJIaA0BS
      YwBIagwASY0BIKlVXrSxBB4vzCMQ6YWZT+MYHlzo8mFr7wiJ+ACWltYwHI9DCIFSIY9YLFbH
      sYlqo+IACGEgm8uhM3QBmUwG3mAUe6kMRvoCuPfpMm7cHEdyZR07u9tITN1kG5TaQhWPABbG
      p65hfXUFF+Nj2NrYgOJ2QdcL8Hs1ZDM5CEVFrDcGPZeF2tMFi21QanEV/3YpmgfZw3WMXBqD
      kU8j2j+ISNCLnf0Mrl4bwdbmFhKXRlE2TJjGMbgnNLWDygOgKBgYjj/7oqP35PahAf+z/w4P
      A8CzzXC9ntpNSFRHvApEUmMASGoMAEmNASCpMQAkNQaApMYAkNQYAJIaA0BSc9QGVcs6CqYL
      0YCbbVBqaw7aoFHoJQHNKmAnVWAblNqagzboMlwuDwwIQFHYBqW25qANevnZUyDhQqjTzTYo
      tTVnbVB40fn8T2yDUjvjVSCSGgNAUmMASGoMAEmNASCpMQAkNQaApMYAkNQYAJJaVQEQ5SJS
      GR37u0+wvJaEcVzA5pNdWJbAZjIJ0zRRLB1D1/V6zUtUU1WV4VaXl1FydSB/uI2LiWmsrm4g
      FPTgwdw8+od6sbyyCgUGVG83Ep2dn78mUZNVHICSnsJ+Jo+CkcdXb9/Go4cP4fL70dnpR2Er
      h2BXAOn9A+zs7GB0qo91aGoLFQfAG4hg9rVu7KczSK4tw9PZhVi3H+s7R5i5nsDSwjKG43Fc
      6B9AqZCHoqpQWYemFlfdb5eqoScSBiLhk5u6IhcAANNXpj/7uWCgJsMR1RuvApHU2ur5Ra5k
      4jdrR1Uf96XBIC4E3HWYiNpdWwXAEBZ2s+WqjyuZog7T0HnAp0AkNQaApMYAkNQYAJLamQCY
      pok7d+40YxaihrN9BHgRgoODg0bPQ9RQZwKgKArGx8eRSCRweHh46nsv2qD60SH2Uxm2Qant
      nXkdQFVVTExMnP3JkzaoH6phQIHAgaIgwjYotTHbF8Luf/BzbBi9sIoZfPubXwfw+23QLIb7
      +qBZJo6BhrZBTafrmGyVkj3bAFwcn8HxVgo9YxdPbvv9NqhRyKJgetAXcDe0DepwGagaW6Vk
      z/a3woMCDnQTwe7S6W+8aIOCbVA6H2yvAmn+CIqHm9jaftroeYgayv6FMEWBy6Vhb2+vweMQ
      NdYrXwkOBoONmoOoKWwD4HK7oSgqAryUSeecbQCO9RRM1Ydstvo3nxC1kzMBsISJzZSBb7z9
      FYyNDDZjJqKGOXsZVFGwsfgQi48fw9UZxuRkE6aqM/PJJ8j/x/erPq7jL/8dWv+NOkxEzXIm
      AIqi4u1v/lkzZiFqONtzgNLRNh58Ood33/uw0fMQNZRtACxh4v7iJhJDPY2eh6ihbKsQxXwO
      b779No6eLJ7cZgkDy4tLyJUtqIaOzlAvNCOPo6yOUDiKVOYI4VAEgEC+UMbURKJR94HIMdsA
      rG8ksZ7eRCIxdnKborrQ4XcjLwR6unuwubOPcLQbE5eHcXfuCWZnp7G6uIKNjVXcuPVmS7dB
      nc5jmiYstkrPFdsAjCVG8bsPH2FndxdXxuMAAGGUkM2X4XF5UC4b8Hf4EfS6sLi6i6mJQTx8
      MI++gQFcjfbgaH8bkWC8ZdugpsOFNE2DxlbpuXLm/6ZlCfzf3U+hGNap21WXFxM210T7nr9U
      EI58dr4Q64nWeEyi+rB5S6SK27dm4fJ4cPBkHXMLa00Yi6gxbK8CCaMM1eWBuyMIs5Bq9ExE
      DXO2CmEJPF7ZgChl4OsMYmbmZjPmImoI20eAvb19qKoGBUqj5yFqqLOXNCwLUzNvAJbA0NBF
      m0OIzg+bq0AW3v/Vu8gUBS5N3sSfvPXlZszVHo6SwMp71R839eeAL1T7eahqZ/cF0lz43l//
      TTNmaT/lPJBeq/44s/rPOKD6sK9CpLfwi1/fhTguYGrmDVybiDd4LKLG4GVQkpptALyBKLwo
      IRiKnFwGtSwLm+urSGfz3BuUzg3bp0CFo210D4wjPvDZBliwBCI9MSytrMDj9nBvUDoXbK8C
      PT3IYmluDjtPBvEX33oHAKCoGo5S+3C5PXB7PG29N2it2qCKEHBSqzOFYKu0Rdg+Avh8PsSG
      RnH9ymflN2GUkMkVEAiG4UGprfcGrVkbVHX2ATuaqgJslbYEm/cEK+gfncb66i/xs1+8h7/7
      4fcAvLwNyr1BqZ3Z/jNUyh4gHL+Ov/0aXwmm8832/QBzd/8XD5I5rK0n+UpwA3y4/D5+9NE/
      V33cj77zE3T7+YryF2H7foAr167jKJ2G283nqXS+2f6Gqy4P/vidb2BmcqTR8xA11Eu2R9ew
      Pn8Pv/r1Rw0eh6ixbM8BPrl3H8fZXaihoWbMRA7tF3dRMPJVHePRvOj1D9RpotZn/xRI1eB2
      u6A5vfBOTfHfO/+Fxcyjqo4Z6BjGX439sE4TtT7bvUFnv/ImgDdRLrO2S+fbK1/KdLvdjZqD
      qCmcvZZPdE5UfKH/xd6gehlQjBz3BqVzoeIAKIoGn9eNQCQMUfRxb1DUrg0qhHA8z6n7ZVmv
      +Gl7lmWdWkM2FQfALOfxZDeF/uEABPcGfTGgs3X+oA2qOl1H007dL1WpfhsbRVFOrSGbiu+5
      5unEG7OvPf+q9+R27g1K7YwnwSQ1BoCkxgCQ1BgAkhoDQFJjAEhqDABJjQEgqTEAJDUGgKTm
      oA1qwW0do2BqiAbcbINSW6u+DRrugq4XEBAGCgrYBnWyDtugLcNRG1Q18sgJF6IBD9ugTtZh
      G7RlfOE2aC/boNTGeBJMUmMASGoMAEmNASCpMQAkNQaApMYAkNQYAJIaA0BSYwBIapW3QS2B
      +Xu/Rf/UbeytPYTq60LAbeHpYQZDg31Ibm6jb+DZBy3kdR3xEX7CJLW+KtqgKvpiEZSFBU1T
      kdN1WH4PLo/24u7c1h+0Qd9iG/RV67AN2jKqeD9AGetrm1DyAYQ0N4qFLIJeBQuLSQz2RzH3
      4BHCoQgSk9PY2VpDZHKcbdCXrcM2aMuo/BFAdWPmy187+Xrk0unv8/MkqR3xJJikJu9jH73U
      o//5J2T256s6JtR7HRNv/H2dJqofBoDOyBws4HD746qO0dz+Ok1TX3wKRFJjAEhqDABJjQEg
      qTEAJDUGgKTGAJDUHLRBbyGVXEDh+c5wbIPSy5j5NVhmqapjFHcXNF9/nSY6q/o2qGlCuDoQ
      EAbSJYNtUCfrtHgb1KrROsX1n0AUN6taRwvNwjv8g6r/fqeqb4P2BuAupJB+vjs026AO1mnx
      NqhSq1apg3XUBrdTHbZBB898n21Qakc8CSapMQAkNQaApMYAkNQYAJIaA0BSYwBIagwASY0B
      IKkxACQ1R6WL5NoyjuHBhS4ftvaOkIgPYGlpDcPxOIQQKBXyiMVitZ6VJJW585+w8vmqjvEk
      EvDfnPncn3MQAAuZTAbeYBR7qQxG+gK49+kybtwcR3JlHTu720hM3WQb9FXrSNIGhYN1hM06
      2Tt3YO4fVLVO59ffgfva1c/9ueoDYAHD8TFsbWxAcbug6wX4vRqymRyEoiLWG4Oey0Lt6YLF
      Nqj9OmyDvpR9G7R+e55WHwBFgXmcR7R/EJGgFzv7GVy9NoKtzS0kLo2ibJgwjWNUn32i+lpb
      WT7zaOvoHCDc03vy56GBZzuCDQ0PA3j2rxK8HqczEtXNv/z4xyiViqdu41UgkhoDQFJjAEhq
      DABJjQEgqTEAJLWaBMCyBDaTSZimiWLpGLqu12JZorqryQYsuxur8AVDWF5ZhQIDqrcbic7O
      WixNVFc1eQQom0CwKwDVEtjd3oHP354fl0Py+X8fg3l5LOE9owAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
