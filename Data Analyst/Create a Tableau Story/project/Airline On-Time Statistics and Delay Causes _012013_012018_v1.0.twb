<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' inline='true' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127069640_12018_923_airline_delay_causes_012013_012018' name='textscan.0lnav6n1ber7n71dkfo0y187gcjk'>
            <connection class='textscan' directory='C:/MyWorks/Google Drive/Data Analyst_NanoDegree/Visualization/project' filename='127069640_12018_923_airline_delay_causes_012013_012018.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport]' />
              <expression op='[airports.csv].[iata]' />
            </expression>
          </clause>
          <relation connection='textscan.0lnav6n1ber7n71dkfo0y187gcjk' name='127069640_12018_923_airline_delay_causes_012013_012018.csv' table='[127069640_12018_923_airline_delay_causes_012013_012018#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='integer' date-parse-format='MM' name=' month' ordinal='1' />
              <column datatype='string' name='carrier' ordinal='2' />
              <column datatype='string' name='carrier_name' ordinal='3' />
              <column datatype='string' name='airport' ordinal='4' />
              <column datatype='string' name='airport_name' ordinal='5' />
              <column datatype='real' name='arr_flights' ordinal='6' />
              <column datatype='real' name='arr_del15' ordinal='7' />
              <column datatype='real' name='carrier_ct' ordinal='8' />
              <column datatype='real' name=' weather_ct' ordinal='9' />
              <column datatype='real' name='nas_ct' ordinal='10' />
              <column datatype='real' name='security_ct' ordinal='11' />
              <column datatype='real' name='late_aircraft_ct' ordinal='12' />
              <column datatype='real' name='arr_cancelled' ordinal='13' />
              <column datatype='real' name='arr_diverted' ordinal='14' />
              <column datatype='real' name=' arr_delay' ordinal='15' />
              <column datatype='real' name=' carrier_delay' ordinal='16' />
              <column datatype='real' name='weather_delay' ordinal='17' />
              <column datatype='real' name='nas_delay' ordinal='18' />
              <column datatype='real' name='security_delay' ordinal='19' />
              <column datatype='real' name='late_aircraft_delay' ordinal='20' />
              <column datatype='string' name='F22' ordinal='21' />
            </columns>
          </relation>
          <relation connection='textscan.0lnav6n1ber7n71dkfo0y187gcjk' name='airports.csv' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='iata' ordinal='0' />
              <column datatype='string' name='airport' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='string' name='country' ordinal='4' />
              <column datatype='real' name='lat' ordinal='5' />
              <column datatype='real' name='long' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ arr_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ arr_delay]' />
          <map key='[ carrier_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ carrier_delay]' />
          <map key='[ month]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ month]' />
          <map key='[ weather_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ weather_ct]' />
          <map key='[F22]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[F22]' />
          <map key='[airport (airports.csv)]' value='[airports.csv].[airport]' />
          <map key='[airport]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport]' />
          <map key='[airport_name]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport_name]' />
          <map key='[arr_cancelled]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_cancelled]' />
          <map key='[arr_del15]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_del15]' />
          <map key='[arr_diverted]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_diverted]' />
          <map key='[arr_flights]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_flights]' />
          <map key='[carrier]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier]' />
          <map key='[carrier_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier_ct]' />
          <map key='[carrier_name]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier_name]' />
          <map key='[city]' value='[airports.csv].[city]' />
          <map key='[country]' value='[airports.csv].[country]' />
          <map key='[iata]' value='[airports.csv].[iata]' />
          <map key='[lat]' value='[airports.csv].[lat]' />
          <map key='[late_aircraft_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[late_aircraft_ct]' />
          <map key='[late_aircraft_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[late_aircraft_delay]' />
          <map key='[long]' value='[airports.csv].[long]' />
          <map key='[nas_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[nas_ct]' />
          <map key='[nas_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[nas_delay]' />
          <map key='[security_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[security_ct]' />
          <map key='[security_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[security_delay]' />
          <map key='[state]' value='[airports.csv].[state]' />
          <map key='[weather_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[weather_delay]' />
          <map key='[year]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ month]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_flights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_flights]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_flights</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_del15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_del15]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_del15</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[carrier_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier_ct</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> weather_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ weather_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> weather_ct</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>nas_ct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>security_ct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>late_aircraft_ct</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_cancelled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_cancelled]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_cancelled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_diverted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_diverted]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_diverted</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> arr_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ arr_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> arr_delay</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> carrier_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ carrier_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> carrier_delay</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F22</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F22]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>F22</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iata]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>iata</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport (airports.csv)]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
      <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
      <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;' value='All Delays' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;' value='Arrival Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;' value='Average Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;' value='Carrier Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;' value='Late Aircraft Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;' value='NAS Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;' value='Security Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;' value='Weather Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;' value='Agg. Carrier Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;' value='Agg. Weather Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;' value='Agg. NAS Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;' value='Agg. Security Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;' value='Agg. Late Aircraft Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489063486:qk]&quot;' value='Agg. Arrival Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094506573894:qk]&quot;' value='Cancelled or Diverted' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;' value='Cancelled out of Total Arriving' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;' value='Diverted out of Total Arriving' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;' value='Delay out of Total Arriving' />
        </aliases>
      </column>
      <column caption='Month' datatype='string' name='[Calculation_1349391092679319552]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [ month] &#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;Feburary&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' />
      </column>
      <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
      </column>
      <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
      </column>
      <column caption='Avg Arrival Delay' datatype='real' name='[Calculation_1349391092860329998]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([ arr_delay])/SUM([arr_flights])' />
      </column>
      <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
      </column>
      <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
      </column>
      <column caption='Top 10 Carriers' datatype='string' name='[Carrier Name (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[carrier_name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alaska Airlines Inc., American Airlines Inc., Delta Air Lines Inc. and 7 more&quot;'>
            <value>&quot;Alaska Airlines Inc.&quot;</value>
            <value>&quot;American Airlines Inc.&quot;</value>
            <value>&quot;Delta Air Lines Inc.&quot;</value>
            <value>&quot;Envoy Air&quot;</value>
            <value>&quot;ExpressJet Airlines Inc.&quot;</value>
            <value>&quot;JetBlue Airways&quot;</value>
            <value>&quot;SkyWest Airlines Inc.&quot;</value>
            <value>&quot;Southwest Airlines Co.&quot;</value>
            <value>&quot;United Air Lines Inc.&quot;</value>
            <value>&quot;US Airways Inc.&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Carrier Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[carrier_name]' default='&quot;Other&quot;' new-bin='true' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
      <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Airport Full' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
      <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
      <column caption='Diverted Count' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
      <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='Airport City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Airport Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='IATA Code' datatype='string' name='[iata]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Airport Latitude' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
      <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Airport Longitude' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
      <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[airport (airports.csv)]' derivation='Attribute' name='[attr:airport (airports.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[lat]' derivation='Attribute' name='[attr:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ arr_delay]' derivation='Avg' name='[avg: arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Avg' name='[avg: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391094447632402]' derivation='Avg' name='[avg:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_delay]' derivation='Avg' name='[avg:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_delay]' derivation='Avg' name='[avg:nas_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_delay]' derivation='Avg' name='[avg:security_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather_delay]' derivation='Avg' name='[avg:weather_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[cum:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Avg' name='[diff:avg: arr_delay:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Avg' name='[diff:avg: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[airport]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[diff:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[diff:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[diff:sum:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[diff:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[diff:usr:Calculation_1349391092860329998:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[diff:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092679319552]' derivation='None' name='[none:Calculation_1349391092679319552:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
      <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[pcto:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcto:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[pcto:sum:arr_flights:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[pcto:sum:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcto:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[pcto:usr:Calculation_1349391092860329998:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[pcto:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcva:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcva:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[sum: arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ weather_ct]' derivation='Sum' name='[sum: weather_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_del15]' derivation='Sum' name='[sum:arr_del15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_diverted]' derivation='Sum' name='[sum:arr_diverted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Sum' name='[sum:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_ct]' derivation='Sum' name='[sum:late_aircraft_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[long]' derivation='Sum' name='[sum:long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_ct]' derivation='Sum' name='[sum:nas_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_ct]' derivation='Sum' name='[sum:security_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative' />
      <group caption='Action (MONTH(MonthYear))' hidden='true' name='[Action (MONTH(MonthYear))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Calculation_1349391092718141443:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Airport Code,Airport Name)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:airport:nk]' />
          <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' />
        </groupfilter>
      </group>
      <group name='[Top 10 Delayed Carriers]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1349391092689137666]' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[carrier_name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 10 Delayed Airports' name='[Top 20 Delayed Airports]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1349391092689137666]' function='order' user:ui-marker='order'>
            <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[airport (airports.csv)]' to='&quot;Yuma MCAS-Yuma International&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, state, city' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.401813' group-percentage='0.070997' measure-ordering='alphabetic' measure-percentage='0.52719' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:airport (airports.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albuquerque International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Illinois Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Metropolitan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durango-La Plata County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Smith Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gregg County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack McNamara &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Los Angeles International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Memphis International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Natrona County Intl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pease International Tradeport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reno/Tahoe International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Barbara Municipal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springfield-Branson Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;William B Hartsfield-Atlanta Intl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangor International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burbank-Glendale-Pasadena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chippewa County International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glynco Jetport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hilo International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juneau International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawton-Ft Sill Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mbs International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pueblo Memorial&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theodore F Green State&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waterloo Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adams &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellingham Intl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cape Girardeau Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;City of Colorado Springs Muni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forbes &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greater Peoria Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Idaho Falls Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kent County International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McGhee-Tyson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muskegon County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Owensboro-Daviess County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raleigh-Durham International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Diego International-Lindbergh &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southeast Texas Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trenton-Mercer County &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wichita Mid-Continent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arcata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlotte County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas Love &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eglin Air Force Base&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gainesville Regional&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James C. Johnson Petersburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Crosse Municipal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luis Munoz Marin International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newport News/Williamsburg International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phoenix Sky Harbor International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roanoke Regional/ Woodrum &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Savannah International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Illinois-Willard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Billings Logan Intl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Nebraska Regional &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corpus Christi International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagle County Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Wayne International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Hole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Klamath Falls International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisville International-Standiford &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercedita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Castle County &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pellston Regional  of Emmet County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhinelander-Oneida County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe Municipal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Cloud Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;William P Hobby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Akron-Canton Regional&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bemidji-Beltrami County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Capital&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleveland-Hopkins Intl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dothan &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greater Rochester Int&apos;l&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Imperial County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ketchikan International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McKinney Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Beach International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pago Pago International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ralph Wien Memorial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Francisco International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southwest Florida International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tri-Cities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wiley Post Will Rogers Memorial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Austin-Bergstrom International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brownsville/S.Padre Island International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicago O&apos;Hare International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delta County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erie Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gillette-Campbell County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Helena Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joplin Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laredo International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette County Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ogden-Hinckley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronald Reagan Washington National&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shreveport Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ted Stevens Anchorage International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Youngstown-Warren Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barkley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippewa Valley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detroit Metropolitan-Wayne County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Falls International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Golden Triangle Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honolulu International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lea County Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Clellan-Palomar Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monterey Peninsula&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quad City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salt Lake City Intl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sloulin Field International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tinian International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watertown Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bradley International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmira/Corning Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;General Mitchell International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hays Municipal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John F Kennedy Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lambert-St Louis International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Bend Muni&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Columbus Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rock Springs-Sweetwater County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shenandoah Valley Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tallahassee Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany Cty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benedum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Capital City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Metropolitan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dubuque Municipal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Collins-Loveland &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greater Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indianapolis International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Key &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach (Daugherty )&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meadows &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nantucket Memorial&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Beach International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Jose International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southwest Georgia Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tri-Cities Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilkes-Barre/Scranton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arnold Palmer Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismarck Municipal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlotte/Douglas International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dallas-Fort Worth International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Paso International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gallatin &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hagerstown Regional-Richard Henson &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James M Cox Dayton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lynchburg Municipal-Preston Glenn &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle Georgia Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niagara Falls Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piedmont Triad International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert Gray AAF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scott AFB/MidAmerica &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stillwater Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asheville Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Grass &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlottesville-Albermarle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dane County Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elko Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garden City Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisburg Intl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamestown Municipal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaGuardia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahlon Sweet &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pittsburgh International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roberts &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotts Bluff County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton Metro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valdosta Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yampa Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austin Straubel International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brainerd-Crow Wing County Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago Midway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Del Rio International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eppley Airfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;George Bush Intercontinental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hector International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wayne /Orange Co&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laramie Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missoula International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northwest Arkansas Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portland International Jetport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rogue Valley International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheppard AFB/Wichita Falls Municipal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampa International &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waco Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yellowstone Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baltimore-Washington International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo Niagara Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chico Municipal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evansville Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glacier Park Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry E. Rohlsen &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joslin Field - Magic Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laughlin/Bullhead International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marthas Vineyard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modesto City-County-Harry Sham &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogdensburg Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Provo Muni&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell Industrial Air Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sioux Gateway &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texarkana Regional-Webb &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Dulles International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yuma MCAS-Yuma International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena County Regional &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Binghamton Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Wisconsin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Craven County Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Iowa &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fresno Yosemite International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulfport-Biloxi Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kodiak &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lovell &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merle K (Mudhole) Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Orleans International &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria Pub/Capt G Allan Hancock &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St George Muni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tweed-New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilmington International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albert J Ellis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bert Mooney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cedar City Muni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia Regional&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duluth International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Lauderdale-Hollywood Int&apos;l&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenville-Spartanburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inyokern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Key West International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island - MacArthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne International &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashville International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm Springs International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redding Municipal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Obispo Co-McChesney &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane Intl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tri-State/Walker-Long &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Will Rogers World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene Regional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barnstable Mun Boardman/Polando &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bush &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chisholm-Hibbing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devils Lake Municipal-Knoke &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fayetteville Municipal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Houghton County Memorial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalamazoo County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lehigh Valley International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McAllen Miller International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery Regional Apt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orlando Sanford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Municipal-Baldwin &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Angelo Regional /Mathis &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sonoma Co&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toledo Express&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wendover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aspen-Pitkin Co/Sardy &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise Air Terminal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherry Capital&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellington &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gen Edw L Logan Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg-Laurel Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Foss &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mammoth Yosemite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis-St Paul Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pocatello Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rochester International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seattle-Tacoma Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syracuse-Hancock Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valley International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yeager&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Birmingham International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleston AFB/International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyril E. King&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Easterwood &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Friedman Memorial&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gunnison County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kona International At Keahole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lubbock International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Oakland International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newark Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philadelphia Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rickenbacker International &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sarasota Bradenton International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Petersburg-Clearwater International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler Pounds &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worcester Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baton Rouge Metropolitan, Ryan &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canyonlands &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati Northern Kentucky Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickinson Municipal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flagstaff Pulliam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Falls Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntsville International &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston-Nez Perce County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McCarran International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Outagamie County Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rafael Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Bend Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Cty &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westchester Cty&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1349391092679319552:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;April&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Feburary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;May&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:airport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ACY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BET&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BTM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CLD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DAY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ENV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FWA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HDN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LAW&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MQT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OTZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PVD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SBA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SPI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TUL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ABE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ASE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BOI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CGI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GRR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IAG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LNK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MKG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OKC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ROC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SIT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WYS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ABY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AVL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BQN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CIC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CWA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EGE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FNT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GTF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IFP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KTN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MMH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SLC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TOL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AGS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BUR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CMH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EVV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GFK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HOB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ISP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LCH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MEM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MSP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PGD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RDM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SCE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;STC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TXK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ADK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BFF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BTR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DBQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GCC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HIB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;INL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MDT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MRY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PAH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PWM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SBN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SPN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ACK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AVP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BRD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CID&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CYS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EKO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FOE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GTR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ILG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MBS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MOB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ORF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PSG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SMF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TPA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;APN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BMI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CDV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DRT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GRI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HYS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JAX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LIT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PIH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RNO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SHD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VPS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CRW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DVL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FLG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GSO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IAH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JMS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LRD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MLB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OMA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PNS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ROW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SJC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;XNA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AMA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BJI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DLH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FAI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GPT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HSV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JAC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LGB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MHK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MYR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PIA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RIC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SGF&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VEL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AZO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CIU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DAB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ELM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FSD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GUC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ILM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LAR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MCI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MOD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ORH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PSP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SMX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AKN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BHM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CMI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DHN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EWN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GGG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HOU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ITH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MFE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MSY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PHF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RDU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SDF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;STL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TYR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BIL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BZN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CMX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DIK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GJT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HPN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ITO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LFT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MFR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MTJ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RFD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SEA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;STS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TYS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ANC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BLI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DRO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GRB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HYA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JAN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LIH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MHT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OAJ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PIB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RKS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SGU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SUN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VLD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BNA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CEC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CPR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DSM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FAY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GRK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LMT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MKE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OGG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PIT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ROA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SHV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SWF&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WRG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ADQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BFL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BTV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DCA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ESC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GCK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HLN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IPL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LBB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MDW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MSN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PBI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RAP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SBP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SPS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TVC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ACV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BDL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CKB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ELP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IMT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MCN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MOT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OTH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PUB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SAV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TTN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ABQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ATW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BPT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CSG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EAU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FLL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GSP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ICT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JNU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LSE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OME&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PPG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SJT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TKI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;YAK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BIS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CNY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DLG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EYW&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GNV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HRL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IYK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MGM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MVY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PHX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RHI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;STT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AEX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BGM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BUF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EUG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GEG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HNL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ISN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LBE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MEI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MSO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PDX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RDD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SCC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SRQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TWF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ABR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BQK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CVG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EFD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FNL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IDA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KOA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LWS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MLU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ONT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PSC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RSW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SJU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TLH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;YUM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:carrier_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PSA Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ExpressJet Airlines Inc.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spirit Air Lines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Envoy Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Endeavor Air Inc.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allegiant Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinnacle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American Eagle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;US Airways Inc.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AirTran Airways Corporation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SkyWest Airlines Inc.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Carrier Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AirTran Airways Corporation, Allegiant Air, American Eagle Airlines Inc. and 10 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Carrier Name (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alaska Airlines Inc., American Airlines Inc., Delta Air Lines Inc. and 7 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:airport (airports.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albuquerque International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Illinois Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Metropolitan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durango-La Plata County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Smith Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gregg County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack McNamara &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Los Angeles International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Memphis International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Natrona County Intl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pease International Tradeport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reno/Tahoe International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Barbara Municipal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springfield-Branson Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;William B Hartsfield-Atlanta Intl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangor International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burbank-Glendale-Pasadena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chippewa County International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glynco Jetport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hilo International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juneau International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawton-Ft Sill Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mbs International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pueblo Memorial&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theodore F Green State&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waterloo Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adams &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellingham Intl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cape Girardeau Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;City of Colorado Springs Muni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forbes &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greater Peoria Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Idaho Falls Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kent County International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McGhee-Tyson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muskegon County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Owensboro-Daviess County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raleigh-Durham International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Diego International-Lindbergh &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southeast Texas Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trenton-Mercer County &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wichita Mid-Continent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arcata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlotte County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas Love &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eglin Air Force Base&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gainesville Regional&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James C. Johnson Petersburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Crosse Municipal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luis Munoz Marin International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newport News/Williamsburg International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phoenix Sky Harbor International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roanoke Regional/ Woodrum &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Savannah International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Illinois-Willard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Billings Logan Intl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Nebraska Regional &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corpus Christi International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagle County Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Wayne International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Hole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Klamath Falls International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisville International-Standiford &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercedita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Castle County &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pellston Regional  of Emmet County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhinelander-Oneida County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe Municipal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Cloud Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;William P Hobby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Akron-Canton Regional&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bemidji-Beltrami County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Capital&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleveland-Hopkins Intl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dothan &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greater Rochester Int&apos;l&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Imperial County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ketchikan International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McKinney Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Beach International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pago Pago International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ralph Wien Memorial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Francisco International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southwest Florida International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tri-Cities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wiley Post Will Rogers Memorial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Austin-Bergstrom International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brownsville/S.Padre Island International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicago O&apos;Hare International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delta County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erie Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gillette-Campbell County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Helena Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joplin Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laredo International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette County Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ogden-Hinckley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronald Reagan Washington National&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shreveport Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ted Stevens Anchorage International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Youngstown-Warren Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barkley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippewa Valley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detroit Metropolitan-Wayne County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Falls International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Golden Triangle Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honolulu International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lea County Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Clellan-Palomar Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monterey Peninsula&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quad City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salt Lake City Intl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sloulin Field International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tinian International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watertown Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bradley International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmira/Corning Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;General Mitchell International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hays Municipal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John F Kennedy Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lambert-St Louis International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Bend Muni&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Columbus Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rock Springs-Sweetwater County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shenandoah Valley Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tallahassee Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany Cty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benedum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Capital City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Metropolitan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dubuque Municipal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Collins-Loveland &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greater Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indianapolis International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Key &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach (Daugherty )&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meadows &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nantucket Memorial&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Beach International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Jose International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southwest Georgia Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tri-Cities Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilkes-Barre/Scranton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arnold Palmer Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismarck Municipal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlotte/Douglas International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dallas-Fort Worth International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Paso International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gallatin &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hagerstown Regional-Richard Henson &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James M Cox Dayton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lynchburg Municipal-Preston Glenn &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle Georgia Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niagara Falls Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piedmont Triad International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert Gray AAF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scott AFB/MidAmerica &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stillwater Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asheville Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Grass &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlottesville-Albermarle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dane County Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elko Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garden City Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisburg Intl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamestown Municipal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaGuardia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahlon Sweet &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pittsburgh International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roberts &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotts Bluff County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton Metro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valdosta Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yampa Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austin Straubel International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brainerd-Crow Wing County Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago Midway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Del Rio International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eppley Airfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;George Bush Intercontinental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hector International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wayne /Orange Co&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laramie Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missoula International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northwest Arkansas Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portland International Jetport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rogue Valley International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheppard AFB/Wichita Falls Municipal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampa International &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waco Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yellowstone Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baltimore-Washington International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo Niagara Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chico Municipal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evansville Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glacier Park Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry E. Rohlsen &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joslin Field - Magic Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laughlin/Bullhead International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marthas Vineyard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modesto City-County-Harry Sham &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogdensburg Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Provo Muni&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell Industrial Air Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sioux Gateway &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texarkana Regional-Webb &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Dulles International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yuma MCAS-Yuma International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena County Regional &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Binghamton Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Wisconsin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Craven County Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Iowa &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fresno Yosemite International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulfport-Biloxi Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kodiak &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lovell &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merle K (Mudhole) Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Orleans International &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria Pub/Capt G Allan Hancock &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St George Muni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tweed-New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilmington International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albert J Ellis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bert Mooney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cedar City Muni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia Regional&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duluth International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Lauderdale-Hollywood Int&apos;l&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenville-Spartanburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inyokern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Key West International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island - MacArthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne International &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashville International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm Springs International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redding Municipal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Obispo Co-McChesney &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane Intl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tri-State/Walker-Long &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Will Rogers World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene Regional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barnstable Mun Boardman/Polando &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bush &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chisholm-Hibbing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devils Lake Municipal-Knoke &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fayetteville Municipal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Houghton County Memorial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalamazoo County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lehigh Valley International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McAllen Miller International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery Regional Apt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orlando Sanford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Municipal-Baldwin &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Angelo Regional /Mathis &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sonoma Co&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toledo Express&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wendover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aspen-Pitkin Co/Sardy &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise Air Terminal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherry Capital&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellington &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gen Edw L Logan Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg-Laurel Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Foss &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mammoth Yosemite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis-St Paul Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pocatello Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rochester International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seattle-Tacoma Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syracuse-Hancock Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valley International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yeager&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Birmingham International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleston AFB/International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyril E. King&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Easterwood &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Friedman Memorial&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gunnison County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kona International At Keahole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lubbock International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Oakland International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newark Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philadelphia Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rickenbacker International &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sarasota Bradenton International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Petersburg-Clearwater International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler Pounds &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worcester Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baton Rouge Metropolitan, Ryan &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canyonlands &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati Northern Kentucky Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickinson Municipal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flagstaff Pulliam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Falls Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntsville International &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston-Nez Perce County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McCarran International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Outagamie County Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rafael Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Bend Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Cty &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westchester Cty&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:Calculation_1349391094473297953:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474334245:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474469414:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474547239:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474715176:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474752041:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474768426:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg: arr_delay:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473068575:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473150496:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473297953:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473531426:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473584675:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473875492:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094474334245:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094478700588:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488068152:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489063486:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:weather_delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094462717972:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487859252:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_ct:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: weather_ct:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:security_delay:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487965750:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468005909:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468177942:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468263959:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469132314:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469279771:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469361692:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094472036381:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094462615571:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094468976665:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488018999:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:long:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:long:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094500548672:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094501011521:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094498680895:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_diverted:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[cum:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391092860329998:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391092860329998:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_ct:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094514778185:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_del15:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094504779842:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094504861763:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094506397764:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094506479685:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094506573894:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094514802762:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:arr_flights:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487744563:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:lat:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:lat:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:lat:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_ct:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:nas_delay:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487920693:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field=' month' />
        <field-sort-custom-order field='Calculation_1349391092679319552' />
        <field-sort-custom-order field='Calculation_1349391092718141443' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_flights' />
        <field-sort-custom-order field='arr_del15' />
        <field-sort-custom-order field='Calculation_1349391094446825489' />
        <field-sort-custom-order field='Calculation_1349391094447632402' />
        <field-sort-custom-order field='carrier_ct' />
        <field-sort-custom-order field=' weather_ct' />
        <field-sort-custom-order field='nas_ct' />
        <field-sort-custom-order field='security_ct' />
        <field-sort-custom-order field='late_aircraft_ct' />
        <field-sort-custom-order field='arr_cancelled' />
        <field-sort-custom-order field='arr_diverted' />
        <field-sort-custom-order field=' arr_delay' />
        <field-sort-custom-order field='Calculation_1349391092860329998' />
        <field-sort-custom-order field='Calculation_1349391092689137666' />
        <field-sort-custom-order field=' carrier_delay' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='F22' />
        <field-sort-custom-order field='iata' />
        <field-sort-custom-order field='airport (airports.csv)' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='lat' />
        <field-sort-custom-order field='long' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
        <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Different Delays' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Different Delays' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Delay by Carriers Yearwise' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Carrier Name' />
        <param name='target' value='Delay by Carriers Yearwise' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Different flight delays' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Carrier Name' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cancelled or Diverted'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cancelled or Diverted</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Month' datatype='string' name='[Calculation_1349391092679319552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [ month] &#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;Feburary&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='SUM([Cancelled Arrival Count])/SUM([Arriving Flights Count])' datatype='real' name='[Calculation_1349391094515146827]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([arr_cancelled])/SUM([arr_flights])' />
            </column>
            <column caption='SUM([Diverted Count])/SUM([Arriving Flights Count])' datatype='real' name='[Calculation_1349391094515183692]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([arr_diverted])/SUM([arr_flights])' />
            </column>
            <column caption='SUM([Delayed Carrier Count])/SUM([Arriving Flights Count])' datatype='real' name='[Calculation_1349391094519586893]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([carrier_ct])/SUM([arr_flights])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Diverted Count' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1349391092679319552]' derivation='None' name='[none:Calculation_1349391092679319552:nk]' pivot='key' type='nominal' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1349391094515146827]' derivation='User' name='[usr:Calculation_1349391094515146827:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094515183692]' derivation='User' name='[usr:Calculation_1349391094515183692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094519586893]' derivation='User' name='[usr:Calculation_1349391094519586893:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]'>
            <groupfilter function='level-members' level='[tmn:Calculation_1349391092718141443:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;January&quot;</bucket>
              <bucket>&quot;Feburary&quot;</bucket>
              <bucket>&quot;March&quot;</bucket>
              <bucket>&quot;April&quot;</bucket>
              <bucket>&quot;May&quot;</bucket>
              <bucket>&quot;June&quot;</bucket>
              <bucket>&quot;July&quot;</bucket>
              <bucket>&quot;August&quot;</bucket>
              <bucket>&quot;September&quot;</bucket>
              <bucket>&quot;October&quot;</bucket>
              <bucket>&quot;November&quot;</bucket>
              <bucket>&quot;December&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Proportional to Total Arriving Count' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' value='Delay Causes'>
              <formatted-text>
                <run>Delay Causes</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <tooltip column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Airport'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay by Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 20 Delayed Airports]' derivation='InOut' name='[io:Top 20 Delayed Airports:nk]' pivot='key' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]'>
            <groupfilter function='member' level='[io:Top 20 Delayed Airports:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Yuma MCAS-Yuma International&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;American Airlines Inc.&quot;' />
              <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;Delta Air Lines Inc.&quot;' />
              <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;Envoy Air&quot;' />
              <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;Southwest Airlines Co.&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1239' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]' value='In / Out of Top 10  Airports'>
              <formatted-text>
                <run>In / Out of Top 10  Airports</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delay by Airports'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'> Delay by Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Cherry Capital&quot;' />
              <groupfilter from='&quot;Chicago Midway&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Elko Regional&quot;' />
              <groupfilter from='&quot;Elmira/Corning Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;McGhee-Tyson&quot;' />
              <groupfilter from='&quot;Meadows &quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Miami International&quot;' />
              <groupfilter from='&quot;Midland International&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Watertown Intl&quot;' />
              <groupfilter from='&quot;Westchester Cty&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Yuma MCAS-Yuma International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;American Airlines Inc.&quot;' />
              <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;Delta Air Lines Inc.&quot;' />
              <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;Envoy Air&quot;' />
              <groupfilter function='member' level='[none:carrier_name:nk]' member='&quot;Southwest Airlines Co.&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='37194278.14243196' min='25239333.814558938' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='6341180.1507486505' min='2880755.1902340604' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min='1000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport Name:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Airport Code:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Delay:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6584098339080811' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Airports_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'> Delay by Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]'>
            <groupfilter function='member' level='[io:Top 10 Delayed Carriers:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='%null%' />
              <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Cherry Capital&quot;' />
              <groupfilter from='&quot;Chicago Midway&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Elko Regional&quot;' />
              <groupfilter from='&quot;Elmira/Corning Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;McGhee-Tyson&quot;' />
              <groupfilter from='&quot;Meadows &quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Miami International&quot;' />
              <groupfilter from='&quot;Midland International&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Watertown Intl&quot;' />
              <groupfilter from='&quot;Westchester Cty&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Yuma MCAS-Yuma International&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='40712245.208655387' min='19467615.368795577' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='7191568.523452498' min='1686775.1144263207' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min='1000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' value='In / Out of Top 10 Carriers'>
              <formatted-text>
                <run>In / Out of Top 10 Carriers</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport Name:&#9;</run>
                <run fontcolor='#787878'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Airport Code:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Delay:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6584098339080811' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Carriers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay by Carriers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[pcto:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcto:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcto:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='DESC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1606' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Carrier Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Average Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Late Aircraft Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average Delay: </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delay by Carriers Yearwise'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay by Carriers Yearwise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391094447632402]' derivation='Avg' name='[avg:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Year-Trunc' name='[tyr:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='ASC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]' />
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay for Top 10 Airports'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay for Top 10 Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Dallas-Fort Worth International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Denver Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;George Bush Intercontinental&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;John F Kennedy Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Los Angeles International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Newark Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;San Francisco International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;William B Hartsfield-Atlanta Intl&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Chicago Midway&quot;</bucket>
              <bucket>&quot;John F Kennedy Intl&quot;</bucket>
              <bucket>&quot;George Bush Intercontinental&quot;</bucket>
              <bucket>&quot;Newark Intl&quot;</bucket>
              <bucket>&quot;Denver Intl&quot;</bucket>
              <bucket>&quot;Los Angeles International&quot;</bucket>
              <bucket>&quot;San Francisco International&quot;</bucket>
              <bucket>&quot;Dallas-Fort Worth International&quot;</bucket>
              <bucket>&quot;William B Hartsfield-Atlanta Intl&quot;</bucket>
              <bucket>&quot;Chicago O&apos;Hare International&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max='75000.0' max-size='1' min='25000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delayed Flight Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delayed flights count by Cause</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column-instance column='[ weather_ct]' derivation='Sum' name='[sum: weather_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_ct]' derivation='Sum' name='[sum:late_aircraft_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_ct]' derivation='Sum' name='[sum:nas_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_ct]' derivation='Sum' name='[sum:security_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: weather_ct:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='Arriving Flights' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Other Delays' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk] + [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Different Delays'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Different Delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='[Total Delay]/[Total Delay]' datatype='real' name='[Calculation_1349391094472744990]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='[Calculation_1349391092689137666]/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Arrival Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094474784811]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([ arr_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Average Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094478749741]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([Calculation_1349391094447632402])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Carrier Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094478942254]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([ carrier_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Late Aircraft Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479024175]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([late_aircraft_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([NAS Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479102000]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([nas_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Security Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479196209]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([security_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Weather Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479257650]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([weather_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1349391094472744990]' derivation='User' name='[usr:Calculation_1349391094472744990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094474784811]' derivation='User' name='[usr:Calculation_1349391094474784811:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094478749741]' derivation='User' name='[usr:Calculation_1349391094478749741:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094478942254]' derivation='User' name='[usr:Calculation_1349391094478942254:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479024175]' derivation='User' name='[usr:Calculation_1349391094479024175:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479102000]' derivation='User' name='[usr:Calculation_1349391094479102000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479196209]' derivation='User' name='[usr:Calculation_1349391094479196209:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479257650]' derivation='User' name='[usr:Calculation_1349391094479257650:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]'>
            <groupfilter function='level-members' level='[tmn:Calculation_1349391092718141443:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (MONTH(MonthYear))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='Proportional of total' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' value='Differrent Delays'>
              <formatted-text>
                <run>Differrent Delays</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='336' />
                <format attr='maxwidth' value='336' />
                <format attr='minheight' value='140' />
                <format attr='maxheight' value='140' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</rows>
        <cols>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk] * [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='Different flight delays'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Different flight delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='AVG([Arrival Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094488068152]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='AVG([ arr_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([Carrier Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094488756281]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([ carrier_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([Weather Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094488887354]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([weather_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([NAS Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094488944699]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([nas_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([Security Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094488985660]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([security_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([Late Aircraft Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094489018429]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([late_aircraft_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='SUM([Arrival Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094489063486]' role='measure' type='quantitative' user:unnamed='Different flight delays (2)'>
              <calculation class='tableau' formula='SUM([ arr_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094488068152]' derivation='User' name='[usr:Calculation_1349391094488068152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094488756281]' derivation='User' name='[usr:Calculation_1349391094488756281:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094488887354]' derivation='User' name='[usr:Calculation_1349391094488887354:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094488944699]' derivation='User' name='[usr:Calculation_1349391094488944699:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094488985660]' derivation='User' name='[usr:Calculation_1349391094488985660:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094489018429]' derivation='User' name='[usr:Calculation_1349391094489018429:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094489063486]' derivation='User' name='[usr:Calculation_1349391094489063486:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489063486:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488068152:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Propotional Delay (in Minutes)' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Different flight delays_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Different flight delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[ arr_delay]' derivation='Sum' name='[sum: arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Others ( in Minutes )' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='Arrival Delay (in minutes)' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk:4]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk] + [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='36625' id='1' name='Different Delays' w='99900' x='1200' y='875'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7376' id='6' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' w='16811' x='78538' y='11850'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7618' id='8' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' w='16811' x='78538' y='19589'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7618' id='7' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16811' x='78671' y='3869'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='55985' id='9' name='Different flight delays' w='55615' x='997' y='39903'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='59129' id='10' name='Cancelled or Diverted' w='39535' x='58937' y='40750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='12125' id='16' name='Cancelled or Diverted' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' w='14100' x='83500' y='41250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='57920' id='1' name='Delay by Airports' w='97010' x='1794' y='2056'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='8' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' w='16800' x='78300' y='23750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='9' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16800' x='78300' y='9000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='11000' id='11' name='Delay by Airports' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' w='14000' x='79600' y='31500'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='7' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' type='filter' w='16800' x='78200' y='16000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='41596' id='12' name='Delay by Carriers' w='98804' x='0' y='58888'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='8706' id='18' name='Delay by Carriers' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' w='9302' x='68837' y='57074'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2 (2)'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
        <column-instance column='[Top 20 Delayed Airports]' derivation='InOut' name='[io:Top 20 Delayed Airports:nk]' pivot='key' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='37364' id='12' name='Delay by Airport' w='93355' x='930' y='61064'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='59949' id='18' name='Delay by Airports_1' w='94852' x='439' y='1648'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='13435' id='24' name='Delay by Airports_1' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' w='8788' x='86001' y='23194'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='11153' id='25' name='Delay by Airports_1' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' w='8788' x='74953' y='24842'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7605' id='8' mode='checkdropdown' name='Delay by Airport' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' w='16824' x='77652' y='15336'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='5450' id='9' mode='checkdropdown' name='Delay by Airport' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='11048' x='72630' y='9379'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='8619' id='26' mode='checkdropdown' name='Delay by Airport' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]' type='filter' w='10546' x='83239' y='63752' />
        <zone h='12294' id='27' mode='checkdropdown' name='Delay by Airports_1' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' type='filter' w='10044' x='79473' y='37769' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='64250' id='1' name='Delay by Carriers Yearwise' w='78300' x='500' y='750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='6625' id='6' mode='checkdropdown' name='Delay by Carriers Yearwise' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16800' x='82300' y='1750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='55250' id='7' name='Delay by Carriers Yearwise' pane-specification-id='2' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' w='14600' x='84000' y='9375'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows film-mode='true' saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Different flight delays_1'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Different flight delays'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delayed Flight Count'>
      <cards>
        <edge name='left'>
          <strip size='125'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card pane-specification-id='3' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cancelled or Diverted'>
      <cards>
        <edge name='left'>
          <strip size='375'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='162'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094514778185:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Carriers'>
      <cards>
        <edge name='left'>
          <strip size='142'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='125'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' type='filter' />
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airport'>
      <cards>
        <edge name='left'>
          <strip size='177'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='156'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Carriers Yearwise'>
      <cards>
        <edge name='left'>
          <strip size='125'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='158'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Delay by Airports'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airports_1'>
      <cards>
        <edge name='left'>
          <strip size='312'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='312'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' type='filter' />
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay for Top 10 Airports'>
      <cards>
        <edge name='left'>
          <strip size='375'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='192'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Different Delays'>
      <cards>
        <edge name='left'>
          <strip size='346'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468005909:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468177942:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468263959:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468333592:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469132314:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469279771:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469361692:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094472036381:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cancelled or Diverted'>
          <zoom type='entire-view' />
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Different Delays'>
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Different flight delays'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Delay by Airports'>
          <zoom type='entire-view' />
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Delay by Carriers'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[carrier_name]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;SkyWest Airlines Inc.&quot;</value>
                  <value>&quot;SkyWest Airlines Inc.&quot;</value>
                  <value>105246.64902178678</value>
                  <value>0.17135608439803271</value>
                  <value>0.15397895312490528</value>
                  <value>0.20139916390837584</value>
                  <value>(&quot;SkyWest Airlines Inc.&quot;)</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Dashboard 2 (2)'>
      <viewpoints>
        <viewpoint name='Delay by Airport' />
        <viewpoint name='Delay by Airports_1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='27' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Delay by Carriers Yearwise'>
          <zoom type='entire-view' />
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cancelled or Diverted' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      zu6blMI1FRBCOGdBVbIFfsAnv/gSP/Gv/5S//fIx8pOvXvJ9197P+vplCWBBCIHcuRs9Polc
      XebK9ipXtFZRWuALM1VmLZrk7AXN1O6YDzx0U6n21I1KK/J7qaluisMIvdpF95LRN1YKFpYJ
      5mcqiDvskemnCZQvvBrkAlxvI600vpBo4NNPHuGmq7axdXr0RJe56Q7/6MEbuPP64aZZTfVo
      5bFnWHvia+6zLfu3s+/uQ046he2Y3dPXEE+O8cpjX+fM7/wFWz/wTuIpk3H7kU8/y4lzy/zs
      B+4fUn+qhOCVRT1WIlhiraqA9rPqWo+fWmR1PeGV00u84ZsY+j14uE1cD/B3gaAzTv/+txH8
      1Z8h8gxPgFe21+4VHp95eYqzLz7J2HSL+7//dsbn2i64VZUASmun8GqtEVEIvoR09OhVOdaq
      G9PuSMmxsUM2tJtlVoVqf1IjPQSPPnucrTMdRwDNqLPvCb7n7TeNjMI29e+lR54crNX32Hnz
      lQ753RqEYO7KXVx46STdi6usPfkckw/eiZSSN92yn35Sn9NsEFqjVOHG1lqpJTCqml9J1kvy
      zIy49esF/xr4wDtv5uaDO7n+qnlU+nXSF54duc9D+z45dVkFqoKUkviGm8m/83sp9h5AjXVQ
      nQnOxdv4+PkrOJuajmPriz2++omv4/s+rSimHbcIw9CpJaqcD+wyGCfaePt3jr7n1mnkzq0u
      Qgwm87EVxqUECV1bRjuh0oLVp22kM3VDPjS/9ENv5cYDZvBcNR4xKtGuSRxV3Ryg/8og4zWe
      aBO2665gC0IKOluny++ccdfcMh6xe6spis+yjF7SJ8syVFGQ57kbvGFalhTkxaDuwKpLcVm2
      6iRsv0+W56R5iu/BrYd2EAUe0R1vhBG1EKMgvuONlyVAE6TnEV91kOKKKyn6fRBw+C+e5+JL
      h2vnrZxfo9vturbh1QEP09PTlXx4w6XCh+8i6SaoV884W0BsmSR8z33o0HNd4Lppv6zhHbQ5
      EQgi36+ZEFprFxwbRDaH55JZX3/T41K9ThMKpfjbLx9jvB1x23W7ENW08UsMurDHAYRXb/Tr
      eT6U88ziMmVbKUWSK+I4cH/n5V5Wa7SbRKu15uy5c2ydm2Ph4kU6Y2OD4ptWh/aD76D7yY9d
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2 (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eZRc13nY+btvrb26el+xNBZiIQAC4ALulChaijZaSWRHi6VEGU/GY5+M
      x8ejZMbxDHNyTmKNz0nGzig6TjyW5RzJsmRF0WaJ+06KWAiCAAgQ+9JA793Vtb96y50/qt9D
      VXV1AyBBEkC/3zlAV7336r5b9e537/d997vfFVJKSUjIMkX5oCsQEvJBEgpAyLImFICQZU0o
      ACHLmlAAQpY1oQCELGtCAQi57pBS4rkunufRyktvFefIl+3LllMuZClUlr4uFICQ6w63MMI3
      /vxv2LdnN08+9wrNMjB9/ggnRucuW8746cOcnSwseU0oACHXJYOr13DHXbvoVvOcy1rs3/0K
      r/3yFd46cT64ZmzkNHv27OH5V/Ywff4obxy7iOeUefnVPbULpMextw7ywrNPMTo9xzPPPo8E
      dr/8EpZbk6pQAEKua9LJCNNTF9n3xnE0zWDPa68G5xRAIjhy9C0y/cOcOryXkbcPkOheWbtA
      KKzftIV7776DN/YfRK/mGJ/NMTFXxFRFUEZIyHWJlB5HzmW5ZaiT7v5+duzcyec++6vB+V/u
      P8gdt++kIx1HUQ0G23SeevMitw53N5RTzM0STaS48+47+cl3/4qh9dtq5Xs22vv6jUJCrgDF
      TBNXTrJ37z5uf+Bh4pEk2zYMsnffPjKdffR0DqGoMTo2rmff/v0MrVwLwJbtWzj34nHmO3fa
      e1cxcfYUx4TGfXduRROQTLaxaU0vAE61jAiD4UJuBjy3yu5XXuGWHfeQiRstrzl/6m1mLY2t
      G9cEx0IBCFnWhDZAyLImsAE8z8O2Lz+5EBJyMxEIgG3bFItFpJQIIYILhBBkMpkPpHLvFCkl
      UkoU5doMcLZtk8/ng1nJRCKBaZoAlEolKpUKmqaRSCSu2T2vBCklY5PTuK5He7p272q1SqVS
      oVgskk6n8TxvQZ3qn3Hz8/bfN3/Otm00TQuuURQl+D38z/uf8cto1q4dx0HTtIZ7a5qG53l4
      ntdQD0VRME2TSCRCNpttOB+JRDBNk2q1SqlUaqhDPX59otEorutSrVbRNI1YLIaqqgghGr1A
      zZXwv4Bf8RuFxR7u1SKlxHVdyuUyUHsosVgMw7hkZEWj0eDvu7nXO0EIQTIep1gqIaWkUqng
      eR6maZLP54M61zfE5udb31iv9Herv94vu9X75rKaX0OtbbWqg+d5qKoaPANfKH2hcF03aPz1
      36e+Dn5Z5XI5OOc4DrlcDiklsVisUQCav7QvoeVymWQyudSzuC55NwIgpaRUKmFZFlJKDMMg
      Ho8DjQLmOA6GYbzvjd8nEY+iKrWG7jcaRVFoa2tjbm4OVVWDerca3esbTH0H2Or7tGofVyJc
      zY17qXL96zRNQ1VV8vl88L38subm5oLXi9F8rv6967pIKSmXy0sbwZqmYRjG+zqsXyuEEO+o
      3v6DsyyLSqUSlBWNRlEUJXiY/oPXdf0DHx0jkQiKoqBpGlLKoE6pVArTNJmdnW2pljSrKH4v
      65+r/1f/mebGvdS5pQRqMfxev1Ao4DhOQ12r1WpwvpUDs9UIVP/P/5w/uiw5AkQiESKRyBVX
      /EbHdd0GO0jXdQzDaOgE/N/IcRxUVf0gqxvg95hQq1elUkFRFBRFQdd1dF1vuBYaR4N6wajv
      NFqpNFdbL1ioWtefq6dZ0FzXbVnvK6X5Wr9MwzACgViy66r/4ZoLupZG5vWA53nk8/mg11JV
      Nej1W/FB9/rN+PX2PA/XddF0nbJlEzG04HhznRczVuvP1+vTi13nG5W+8DU35Cvt/X2h9e2C
      Vt+xvj6tBGsxfHW1uTNY9Cn60rJYL1cul4nFYh+Y7nut8BtMuVxGURQMw8A0TRzHCdSBG0XQ
      VVUNvCPVqo3tSmLzRnDzd2i2BepVl8td19yzl+aN8HoPUKvP19PK8I3FYmiaRj6fx3Gcy3qq
      Wj2XVoY51LxY9baaf92S3Vi1Wm3weNTfxFeN/GHqelEHrgbLsiiVSjVvSjLZ8KP6PUX9MHwj
      oOt6oBJl2tKUy+UGFa5VI29lsPq08gq2KmcpV2srmj1QQODFulKDebFym6/1G3+rshYIgBCC
      eDyO53ktP+TjN3hVVYOe8kbB/5Fs2yaRSATfpdWPeyMJti/Afk8npWwYza5Uf16sF13MM9T8
      /K/kPvWjhe+vd+dXgV3Oc3Q54ai/vz9/4ZfXPL+xQACSyeRV67c3iorgPyh/eI3H4ze8CteM
      r4fruo5pmiiKsqCTatWTX4mR2exf96m3P1qNGIsZ062M8Ctxmy5WL7ikBpZKpaCxtzLs/b8L
      Wu6N1ONdKf5wWy6XyeVygWfkZmv8PvUuXN91CwS+9HoWe9/sxgQWeGWaR4bFeuvFDNrmsi7n
      Nq1vzJlMJph5b/ZiRSIR0ul08J0XU+mWNIJvFvwJLX+CKJVK3bQNHy7N3TT3pL56VN9LtzJ8
      W7kOfa+YbdstO8h6taW5jKvx1DRTX47/7Opj1gzDwPM8isViIBie55HNZgMHjn//5sm+QGDq
      b9jW1vaeNI5qtfq+G5O+zusb8pFIZEm35s2C76DwvVtCCGKxGLFYrOXEV/0IsVh5fqMxDGPB
      s7yc58gvv3lkuVp8p0SzSmOaZkN5juNQrVYXCP9iI0tDa3ivGkerGdT3Ct996+u8pmkuOp9x
      s+LPBPsN1W+8/ijo02qmt7mB1rtQ/XIWm4WtL7P+favzi83iLvZ527aDhl0ul6lWq8E19UF6
      rus2BNzVl9tqlHpfukO/gq2G3/rKXAn1n/GDnIBgyhxqel/zj7Cc8Hv9+o7AP2aaZiAMzY39
      ch4X//kpihLESMHC8IPmz77TZ13vlq6fpffVWn+E8yNzF+vlW406gVp4xbV5l/jeiFaV8r+U
      r7b4PZd/zHVdXNfFsixs2w6O+1PacEnIlmujb8ZXherxQyM8z1sQY1NPc4Nt1vF9O8PvhVup
      UfXPdjGDt/me9Z+DS2pss4fIN2z9Wef6EaD5Oy2ldbT0An0Q1E/SSCkXCIp/3n+A/o/QPKSH
      NFL/2/m08gT519bTrBa1mvjSdR3LshbMMTQ3+Fazvoux2PyD/7pcLpNIJIjFYliWRbFYDFSz
      xX6DpY5dN63Hb9TNOmq91N/Mrsv3C39kaNXg63vLer2/3qPU7JnxJ9paldV8rN770kpdalWn
      Zi2hUqmQy+WCBl+tVrFtuyEsp1Ubqf9+Dd9hqR/rgybs3a8tUsrASxKJRAI76Uo6lcUmwaBm
      dNcvp11qNLkcS9kk/ntfhfOdG4upOa2M3mYVLGxhywj/wdu2HcTd1B9faj5gMSHxj/vzBPWf
      XUxoFtPV/b+LeZHqX1er1YaFPv6qvVblLDa6KIoSCsByw18h5rtJ/YZSbzDXqyr1LCUE9bZF
      vcpU/76e5sky/1jz3ITfUJsn1OrXsFcqlcAr1Vz3VqODHyKRTqdDAViO6LpOIpFoCBKDxkml
      VtGd9X+bPTSteu6l3KDNBrV/rPlaf+KrWYf3PC/wQtVHkAohFsSzNY9sQtSiZcMRYBmjKAqJ
      RCIIm/Bdislk8rLxYM0eGh9/Uczl7ttcVqty/ca/lHep+XO+KmTbdsP67VYqlz+CBJnhLMsK
      JhRClg++CuHbBIZhMDE1yxOvneL+21aQimmLGrH18TbN6w1auT0vlzal+bpmFvtM/fVCiGCE
      q58tblWOqqo3fzBcyNIIUVvwL6UMsi0UClWeev4ofULn7nvXokW1lr2+bduBB8hXOcamC/R2
      JGk2FxZr7M2NWggxH66uoCh+IYKx6Tx9nYmWZfoLXvz3lmUxNTXFdMGlI1Fb2up7jPy6G4ZR
      iw17h79byE2Gv2qsMFPg3I+P8imZIP/caV7+xisUJ4oLVI5mn7oQgnypyu//Pz9jaq7YcJ3/
      upnFevRcyeZ3/u8fUyjXZv2nskW++id/R75k1coCRqdreY9s1+PseL6hHNM0SaVSDA+0k0ql
      KBaLTE9PMzs7SzabJZfLYVkWuVwuVIFCakgpyeVyvPV3b3HyhVMN53o39bDj8zuQXAoqe3bP
      KYrlKp98cCN2tRpMUhZKVRIxI/DauJ7k0MlxNg/3oKkLVaN6AfJfO67LoZMTbFvfh5g/55fr
      f8ayXSKGxshEjm//fD//4ssPtpx888v2/0UikWA0UFU1HAFCavjhBPnxhXtqFaaKCxrT60cu
      sPvQeZjXpf18PX4j9Rv42dEsf/TNZzk5Mt1QZnN5DSEQwG3zjd8/Vt/4ASJGTS0b6Ery+1+8
      H7/tly2HyWwtY5yiKJwZnSNfrOJ5kkQiQTQaDTxAL71+PBSAkEtomkbbYNuC4+n+NEJpXFTy
      u1+8jz/4zQ8FfntN03Achx88c4gjpydqAiAEK/ra+No//zjrVnQCS88o+8cvjQQeMO/dsRze
      PDEWXHfo1ASl+R0g/+TbL/OXP9qLEIJYRKc7Ew+uc2yX3/vjn/D9Jw42jDqO47D74NlQAEIu
      oWkaq+9dRfctXaDUeub0YJpbHlkPwO6DI3z9268ym6ugqQpKnTrjh6CvX9FFV6ZmrB54e5T/
      8xtPsKKvDVVZfDa4Ptq0XjCyBQt7PuR5Jlfixf1ngmuGulOYhgYI2pJRUolIUJ6vIgnXw1AF
      8ahBLKqTz+cpFApks1ny+Tz/5NM7Qxsg5BJSSqanptnz0mkOvHqG3t4kH/217Zixmn7/B//h
      55y9mOVLj+7kQ3etZjpXJhkziUVq6okfo+N7ZPKlKhcmcqxf2YkAFGVhZGgrI9hxnEVDrFvZ
      DH7dAwHKFjn9/efpzhdBUfBW9ZL86B2ImImUjWkVwxEgpIGRs1mefeIo03NlDr89wVsHL2Lb
      NpZl8flPbucTD25k120rUFWV7kwCbb4F+T15farzbKHCpuFu/vV/foq9Ry5ccls6HiOTuQXz
      BD71s72t/tU3Yl/oglGkWKH4rV/QNTaNLFaQ+RLi4CnK33kK7Fo2EE8KRiYLtZVz7+ePG3L9
      UyxYSO9Sz1rIW+i6jpSSjWu62bS2Z0Ev7uOvEfD98kPdKaSUfOHvbWegOxV8RlMFQ93plnE6
      9aEK/vv64/79XE8yMpFjRU8qyCkkhKC6+ygy15g2HcC9OI1z5BzqltUoikBV59eYXNufL+RG
      xvM8Vq/rpH+oDUURZDrjpHsSnD47g5QLww+a06n7q/7qg9eklAz3t2FqtShUx3FwHGfBa/+9
      v/rPv4fPgoU9imBFTyq4t3+tO9robfI56cLUxRmEEBw6OU6pZOHOFcIRIOQSUkqOnphgwq2y
      ZucAGzf28uff+SWu6/Ebn72DO7YPBb22EALXdRsSDvjH/ZVifgKyibkyPZkEmlrT609dnGW4
      P9PQwCezJY6cnuCB7auCsuYKFumEGby/nAdJSolIRFue61EgOW8oT+8+zNwPnuQZoYcjQMgl
      LMvmp08c5vyFWXa/eY6xyTy27eJ5kqmZ2vxAvRoihGB8qsDrhy9QtRt77drCe51y1aOvPdHQ
      aOsb/6U1Cm4w0wtw7OwU/8sf/5izY3PBsVZGMUJQLNcSAQMYt61lQRwGIIXgkFC5+J++R+pr
      f0b/8ZOcS6RRH3vssceAIJ1EyPJESsnMXIHR0Syj43MMr+zgUx+7FaEIBvrSfOSBWzCMxixr
      jiv54z97judePYFp6KwabOdnLx1lzWA7qqrwl/99L9/8b3tZs6KTx/7sKe7bvhpTb52lOhU3
      WT8/V+B5Hol4hEwqxubhbjS19Z4FAKWKw2Nff4K9hy9wz20rIBVFTURxz42DO7/gJx6h8MBt
      PP7dZ8h8/6fkzSgXunrZNTcWqkAhlzh88iKf/vgWPnT/OtozcUxD5dMf3bzAEA1ciEIQjeqo
      iiAa0ef97w5+80zGIyTjJu2pKL/12V2k42bQOV+alILDJ8cZ6k2Tipt1M70qD98xHNzXpzlw
      TlUEqUTtPqqqoioCcccG9I0r8S5MgaqgDnUTKZR4aN8ebATP7biLu9foPJieC+cBQi4xNzdH
      vlDhuz/aT7lc5dcf3U5HJhacb/b6OI6DVfWYzpYZ6ks3aB5CCE5emGFFTxsCb8EqL1/1KVs2
      //xrP+bRhzbxyQc2ArXljs05PVvhuu68wQ2Fik06EVkw4TaVLfHkL49z94UzTP2H/4onBPbH
      bufj6wSKCL1AIfN4nkeuaLHnjXPsfeMch98e49lXTuB6Cz0x9XZAPGawcqANIaBqu4xOX4ol
      WtOfQavr8ev/+Y07aur86996hI/sWgc0hkpomtbwz/cw+e8Nw6gZ3I7H//Eff8FL+880fCch
      BJOzRZ5+7QQ/ff08eTNCNpPi4d4qvpyEKlAIAOdHp/mX//4nJCIGibiJ47j096apWDamrgS9
      bbMrtH4FmCIgE9dwbIf8iWnGXz2NXaySXJlh8OFb0Oc9Oq4nUetii/q7Ugi3hDqxG1EeQ1ej
      nHLWsGLVOvxYIFg8S0QsonPPlpWcPDnFhpVd9HYluTCRY3Qyx+2bB9m0ops9JQdneD1b7BnM
      +KUcQqEAhADguh5uycWRLr/z5ftIJSNk0o35g5o3yvZf+9f4i9tLZ7Kc+N7rSKf2vjyRpzxR
      YONXduFIeOXNs4G7E0DNHkY99k2EnQuOrfIUVPsuSit+DdsVVKvVIHmzZVnBjpi1jbYlhw5e
      JFeoMDo2xx/+7q/wo2cPs/fwCN/4w7/P3dtXMnnsPB6SJ27dzqPKeKD6hAIQAsCp05MIF0qF
      KgePjvKpRzY39LzN+n+9Hm+7HgICb83EnrNB4/fJn52hMJIl0p9k1+b+YCM8055APfINhNe4
      fFFXPJh4lQgqcuU/Ynx8nLm5OQqFAt3d3ThofPfJQ3z547fxrR+/wWS+iIFCNFqLQ/rCJ7bz
      iQc2Yuoqu7YNsf50Lwee/Dl7oia5jEdHSsOToQ0QMs/wyk6SCRPDUFk33MU3f7SXP/7L54M4
      ++YF6fXvyxUby76UidqptF4Y71VdcmUniBw1DAPO/mRB469HnXwF3Z4O1vdmMhksyyIZj3Dv
      1hU4rsep89N0dib43KO38T987k4cxyFmqvR3xoMZ5vTDd9LZFuPh1/dy4aUzvJIz+N/O94Uj
      QEiNVSu6+bf/+6cpTU6QuPA2bx49yKuFdvbuO8ad29fguJArlMi0RVGadPFU/JL30PM8Muu7
      yZ2aarhGj5skBtooyEuhz5WyzZE3bBRvmC0D54kaNs0I6aHkjrNy5Z0LjPAta7rRdZ0/+Gcf
      RlMVorrK/pfPMno+y/CGHrbfswqojVTnZ8q8uG0Hd4w/xfjxGY7Ei0wODoUCEFLDdRzUV3+B
      8fgPqFZK7CDJz7iPH3/vaTa98Ff858h9HBsr8sVHd3Lf7asXLcfzPLrvXElpIs/0mxfwXImR
      ijD86FbUmE5KSmzbRlFU/vYvXmP8whoADl8Y5Mv3voDSIspBoZbOMZ/P09/fT7lcJhKJMDs7
      S19fH51tMRRF5dWnj7P7+ZMAnD81TSSms2n7AEIILo5lmdC7ubjjAfreeIVYtkj7UBgNGkLN
      nz73375F9ckfBsf6KfAVDtBNEXeswJgYpSrijE/lL1ue0BWGP7ONgQfX4pRtIp0J1MilzBKn
      L2b5xXNv41y4ZPSOzrWxd6SfJ8/2s7Z9js9uPI4iagvgy0oH1WqVqakpOjs7GRsbwzRNZmZm
      sCyLfcfz7Dt6kZSnknUtetTaiDQ2kmXj9gEOvD2KfTbPWjVKfnAdlbZu2s8eYU1xMhSA5Y6U
      kuLbh6g+/ePgWJkIp5Vh4qh0eXkMXL4iX+dMbJD77/v0lZWLxGiPYdapS5Wqy0y+TCxisHpV
      B6dOF3DtmrEc0W2eOdfP8dkMx2fbuHdwlMFUARIrmJVdWKUS8XicbDaLLaIMdncxNzdHNBql
      LWXT055gOlskLx16qGW4W72+m7l8hT/9zkuscw0GqLk/7USaya338OnfvicUgOWO53lUXn4C
      vJoRW0Xnae0R8qIWanxcWc8jzuOsIsuqYhZj/DQyvnHRiExYOGPsH4uaGgNmEtu2+fRDm9gd
      i3Hi9YsIp8hDQ69wLBfh+Gya3kSJzlgZabbjrP+ndJk9DXMQvfPlbd68mXypyr3bO/nIrvXY
      jsexNy8yPjLHqvVdDG/oRkrJv/ntj3LkF8e4eHQyqI8R1YgkI2EoxHLHtm2mHvtt5NgIAOfE
      Cl7W7g/O56SD6pzii7yOQKB8+FMYH/4UhnEp0ZQYn4IztQwRcrAPBvqYyBbpaosF1/jIeRug
      fkMLASgz+1HGXmB6KksypmJ0bcLp/wielpzPQKdxdizLyt50UGapbPOH//FxEnGTfzVvCPuJ
      tWoZ60BVa/eemyzywl/vZ26ygB7RuePjGxne3h+OAMsdKSU4l7wvKi5IiQ3M4jIrbbK08Rfq
      w5SIsvJkhH/0SC0DhKaqiGdfhb1v4vtLBVDduB77zp3B/EFzAJt/vGw5RIxaeIPbvh23fTvp
      +XNVfxQJPi9Z1dfWMLqoqqA9HSMRNxtGiNl8BYng3/2XZ/gHj2zh3ttWku6K8/d+624KM2XU
      iIYtJCdGZkIBWO6oqoo6NIwzNQ5ArxxlrXeMZ5RVFAGJYEg1mRG1hSZvX3DITuXp6k0h9h6E
      PQcWlGkcOUZUUXE+dl/DAhoff6HMXKGC0RZtWAHWfJ2fS7R5LwOohV589SsPgBAcPzXBsVOT
      bNnQx8sHzlGp2BiGRtlygjooqiDZGUUiKM4W2HP4fCgAyx1FUTDv/xjOG6+B9FDx2Ont400R
      pyhq2RwyFCnLCFKALhwiT38NkY7B2Z5Fy+04PwKqhkfrlVyaptHbkWg43hxu7XlewxoVXxDq
      d4aZy1tMzRX51vf2MJer8Nq+s0wXK1Rtl3RHNMhE4eMvucwkTX79kS2hACx3hBDEN2+neu8j
      2C89DoCC5FF3H68o65gjjq45fDS1nydz65l2db5/qpNPth2gpxIFYq0LdhxgYe/v4zfKQqnK
      yTPTtLfHWDGv4vj18tcYu66HqioLNuN79pWTPPHEATrSBga1ESLTFiPdEWdypsjvfOEeVg5k
      Gu5bKNmcOT/DhrU1wzpcERZSy+awcRtOtYp7/hR4LjGqrJHj7FbX8JGuw9waO8/zhWGKnsmU
      E+fW6DgdQkV4lzI2VyRYEgwBdHUgjQj73jqPZTm0dyQR8zO5fjpzT8Kf/n8v8tSLxzh9bpr7
      7hxGUS6pOJ7nUal6/Ms/+QW6prJmqAPP82prBc4eg598i0fK+7i3fIi7nFOsj5Z48FP38dLp
      Wfr70vzK3euoWA77Do+gaQoRQ+ePvvE0T798gvGpArdvGQxHgJAaRiRK5tf+KeV7P4K1/5e4
      4xdQNIOtoxXWMI4AdsXP8fjcJqJE+PnUw8Q7XmVI2CD1hrKkrKUh4YdPkbNUTA28TStQP/kg
      0rh0ret6zM7VUpiUyzauJ+tSotfQNIXB7hSZVDTIGypf/gXuz/+aFZ6LZibRjDgSSdIax/32
      1/jMlk+Q2LUDKSU/e/YIP332LQZ703z1f/wws3O1vcQm59c4hwIQEqCqKokVw8SHVgf69kM/
      /fcob9XOmzJCvzBBgCUFe4qrGGrfB+W14KWIaAbEYzizRZhfSPOgOW/gvn0aLxmDR+4J7qdr
      Cl/67B289vpZ7t65Ek1dqCqZusrv/+MHA0NWPXUY9+++A0A8M4xmpi7ZEAmJXZ5h86Gfod2z
      A0Q7ibiJqiok4yaGLvjNz+3ijbcu8KG7awtwQgEIWUC9q1K18sEaX0NxGg1Z4SKVPCK+H7o2
      Ij/2VeRbp+CpV1uW6x0+gfrgHUHeUSklG9Z0sXFt96LLH0en8nzv8QN88ZM76EhGcJ/8W5Ae
      sfQK9Eh6Qb31aDsR16by5A9QvvR7fOSetWxa201HWxzPddhySy9bN/QhJZyfmAvDoUMWRwgB
      qe7g/c7kEfqNidpcARYvlBLsK/XVnP+ZDtxoBPLFxQu0bES1cStVoCE57kyuTKliB27Pqdki
      B4+NMZsrw9w08uIZhKKhRzMtbyGEwIh1YB0/zMjpURRF0N+TJmJqDTtZ2o7LH33z2XAECFkc
      IQTa2l3YB34KnktCrfDFnl9QdCPsK/Xwl1NbGbMTSAmnE9sYefM84nyWXUDLQIl4FKIRpOcu
      SHTrk4qbKELgSUml6rJlXS//6V99BkNX4cxRylKlqLSRFov33UJRMYXgJ99/hYd+9T5+9Mxb
      JGMm//gf7uT82AzZfJlVAxl+/SPbQgEIWRwhBJGV23DWP4A8+iwAipAktTL3J8+yNjJNj15k
      whqgfWgrz+89RVWPcXd7GmbmGsqSEvLr19CmKgh5aVvTfMHiqZeOsWqwne23DlzK6iCh6nj8
      xQ/2YOgqn//UdpRIjO96t/BKZYhveZPElEWyRkiJ43mMzlZ4+uXjnDgzhaoITp4b5r9875eU
      ylU6OxJcmMyFAhCyNKquE33ktykLgXz7BfBqq71UIenXC4yVhxjtepQdfRm+/KmdeFKiTmfx
      fv4CcnQS6XqUpODFqkky2YkfZVQq1bw/3//ZYV7bfxZFETz2ex+lPX1pw+5q1eH53SdRFcEn
      HtpIItPDg6kCK/JH0J0IGHFeKkV4s2LwzzI5fBvatvKIqMeuIYfo2l6Oj0zzwO3DrOxvIxEz
      qFg2yYTJvYOrQgEIWRohBEYijfrJ36ey5aM4J3dDYQpHTXAx34fTvo6tO4eQSKLRKKZpUo3H
      qHzxU8jpObxyhX1HJ7E9hW239lEsFoNMzqlUiuT8ajJDV4maekOu0d5OnS9/5nZ0TSWdjPDV
      P/k5X+heycPFFynPRZlNb+aFYpITtsJXZB5VSFynQjk/QmQ9fLz3NX73yQi5smDVYIZiscq/
      +M0P89qhc/zNEwf4jXCDjJCrwXdFNs/u5nK5IFFuMplECEGhUAj2DWuOBq3HdSVvHh2lrytJ
      LCKJxWINQlDPifPTDHXG0b//dU4cneAp7qYqNSKKy3B0kl3KGeKlEXL0o63XaFkcpIEAABMW
      SURBVOs9z/dObeBg9TbsnEOhYLF6qJ0dG/uJdcd4cd/pUABC3j2WZVEsFlFVlVQqNZ/s1iaf
      b716rF4omgUim80G6U8WY24yxw+//jRz1Ush1QWvwGfEa7QrPWTFWsaFy84te2hrz/L/nv4Y
      b50UtR0ngTahcdItgiZCFSjk3eNvkeq6btCR+jsx1sfv1Df6xRbN+J9RVRXLsiiVSsHGG7FY
      Le7ouWdOMmXp6HUfv1XVUMUuskLHkZK/tmyMsT7uz0zTkYRkOkJproKJgiJhdTLJ5764KxSA
      kKun1c4wqVSKUqlEqVTCtm3i8TimaQbG7mKfbXaHplKpYORwHIf29nYApmYLWE6ZtmSUUqlK
      FYkK6MIjDgwJBTnvGtWE4H8yonRjgKrz+X/4ML9udvHdb73K24dHEQIevns9u25bEwpAyNXT
      qvdWVZVEIkE+n8e27SCVomEYQU6f5oUxrbZI8oXAT7non+/MJMjlckCEXfevYXwsh2dZ/OqW
      fehTCWZH1lA/+xARkGybhMwtRNoG0HSDL/yT+zh6aATD1Lhl02BtEc31bgMsth9VyPWF3+Cr
      1SrFYhFFUUina/uA5fP5YBGMT6vQh6XCpv2UiI7jkEgkKBWrlEpVTr71S1ZP/RTrzAYKs12A
      AOHR1n2BgVvPo9/7VaLd6xfYHMEmH9e7AITcGEgpqVarlEqlQBji8XiwZWqxWMSyrIbdZRaL
      /6nv7Job7vmxLH/71CG+/OmdXBjP8e/+/BnuXqvzv952muK5HHbZwExaRFf2oN/6eaJda4Mw
      7FaEKlDINUEIEag7/hLHUqkUpEGMxWJ4nrdg+WMrFWgpsgWLI6cmmCtUWNXfxsO71rJr22qi
      W7+EkR/HqxZQImn0ZDeqZly2vHAECLmm+FkfLMuazwBXM5B9706xWMS27QUCsNRrv1z/faFY
      xjQ0HK+2P9iqoW6MReYOLscNPQJcbtfAkPcffyTQdZ1KpUK5XMayLCKRSGAU27aNEKJhoXv9
      32aahSUWNRmdyvMHX38c15F89le28huf3oWqqldd3xs6HLo5S/HlttQJef8QQhCJ1OJ6bLsu
      7cr8Li/16dV96vcia6beYySEoLczxe9/6UFW9Wc4N5p9x89+WahA4Ujx3rLY7yulZHZ2FoBY
      LBYIhJQyGB3qr/XXCvvv61/792jeMFsiiMdimObl9f1W3NAjwJXS3NOEXFuW+n39TtVPR+L3
      /KZpNmSHg9Z7kDXfo14YpJTEohEiEfMdP99lIQAhHwxCCGKxGKlUCtu25yeyavhuUtM0G0aQ
      ZjepbycspuK8245tWQtAaDO89whR2+0xmUwGqk/9uVgs1rD3mI9vPCuKEqQ9rB8hfJpVoqvl
      hvYCvVsWm3kM1aVrj6qqxOPxBbmnhBAkk8lgttjX/S9evBjMLCcSCWKxGI7j1HaRTySIx+Pv
      WLVtmGhbDkbwO0VKSblioSoKp0+PIyWsXdOLpmuhkFxj/PBpv3FWKpXAlerbCn5MUTQaDX7/
      dDp91Qnd6lWuZT0CXA7XdXn85cNYk2VefO44AA996BYe/fu3ByHAIe8O36j1w6d9Q9k0a4Zt
      PB4PGqyu6wsmyxzHuWoBqM88F44Al6FSqfBv/q//TjZbc9lphoraF+WzH7uNXdvXhkJwDfB7
      /XK5vCB8erGFMz6apgWLcK4Ez/OoVCo4jlOLWXp3Vb/50TSNoRXtwfuiY3P01AQv7DkZGtHX
      iPrefLGGXK/v10+iua7bMNF2OSqVSiAAnueFKtDl0DSNz33xHoZeOIqUsGZDLy/vP8X9tw8H
      gV3v1hMRUsM3guv9/YvNB9TjL8e8klAI360alPVuVKDl5DGp7+0npufY99ZZVvS2MdDTTiad
      /ABrdmNwJW3FsiwKhVrS2qtdA2IYBolEYslrPM8jm802HAsF4B0gpaRcLqPrOpoWeoQux5WG
      ovhqULlcDgLmruYeyWSypXPCH02KxWLgSQrdoCHXnMU6xKuNxWpurFeCH0dUP7lWrVaxbTs4
      V28rCCEoFouhAIRcn/hhENVqtWGRjX8OFm6t1Op8vU1RKpUCQ9sP0Q6N4JDrEiEEqqoSjUaJ
      RCJBaES9EVt/LSxs+PWBc67rUiqV6OzsDD6XSCRubjdo6Ka8OfDVmnQ6TTweR9f1JT1vzWuK
      fWEyTTMIwfavualHgNA4vblQFIVIJEIkEsHzvCAHUX3Pb5omuq5jWVZDasZisRj8jUajwW6T
      oQ0QcsPiqziu6+I4DrquB5tg+Dq/v/BG07SG9QeO42Db9s09AoTc3PjqjZ86sflcLBZDVVXm
      5uaIRqMNBrEvFNfUBgh17pDrCV8l8tMrAsGIkc1mQxUoZHngT7DZto1t20xPT5NKpcjlcqEA
      hCw//AC6arUa2gAhyw8/cC4Sidzc8wAhIZfjqgWgfnYtJORG56oFoHlhQkjIjcy7UoGWmmkN
      hSOkFdebBvGeGcFhGEJIK663dtEgAP62NCEhy4VgHqA+DV1IyHIhEICQkOVIOA8QsqwJBSBk
      WRMKQMg7wk9fcq2u+6AIBSCkJT/8m2+zZ+8ennz8CaYLlQXnn3/+hSsq50que+25x/neT58E
      oDQzwtEzY1dX2Xn273/9qj8TBsOFtERoEXbcfgdYOf7u2Vd58I4NHD52FlSDu+7YDoBXLfP6
      gUNUyiU27byLtw+8wa57dnFg3142b9+Jrgimxy+wd89r6IlOjMo0vRt2kJSzHDxdZPvmVUgp
      GZurEPE8HAmmrmHZHgf3v46UFXJeCnfuIsm2DLaIcOdtG9n72mu4CFas28z0+ZM4TpG8bXJo
      /x48KVi/bpj9+w8Qi8fZsm0n5hKtPBwBQpZENZN4Vo6XXnyZ9u5usueOMpK1ABCqRtTUUatZ
      9h06R3FmjGzZ4vzFcbT5Ca+O7gFuv+MuRk4eYdXqAV5+aTf7frmX/pUDANj5UUS0i1tXtrH/
      xATSKjA2U2Ds3DEKSoZ7d24iX7HZsfN2SmNnOXX8ALQPc9ddd/DGnl9y4fQRqpFu7r/7Dlat
      WsXOHdtRKjNMFVzWb9iEcZlsiaEAhCxJduwUqe7VIATJZIo7H3qEnmRtbe2J/a8iMyvYsmk9
      SMm99+7kJ9/5K3rW3UYw4SsAJBJJJD2AVxhnouzRHa91y/t27yeV1Jhxopw6tCe4r9CT7Lxt
      46XYMwm2JzE0FddxQEoQCmqkje1bbrm0hxgQaR/ikfu28+Yrz3BmKr/k9wtVoJCW9PV0sH/f
      XoRicv9dW6jM9fLGW8cwzQi3bmtn5cqVDK3sZfcbR3AiCoM9w0QzPUihsH1df1BORzrGntde
      49YduxACtq7KcMIdmA+JkMS7h7h761ZAoh94ExFJM9TtoSRWBr1zfnaSvXv3MLRxG4PDA8zs
      28fuPRe48+57mBo5HVx32+b17N67nw1rVvL28RNoqU560rElv2c4ERZyzRg5/TYXsw53bt/c
      8ny1NMdzL+3lwYc/jKleaUyQ5PkXX+LB+++/dhWtIxSAkGVNaAOELGtCAQhZ1oQCELKsaekF
      clyXD/3Pf/p+1+WGYsetqzk8s7SL7WZhuCdDqT1JoXrle3HdKLR2g0rI5svvc1VuLApli2zJ
      +qCr8b6Qr1QpWlUK1ZtvwVSoAoUsa9THHnvsseaDnif5sx++DELwyQe2MdCRYGy6wGBXioqW
      YFNnjM52AzMSw7YsujrbcKtVHE/yyD1biAiXsquQMlVcBJ3tbdy+vpexqTluXTNAPJNhMCbo
      623HlgIdF0XT6e3uYOuKDOlUAkNXyBctVq0aRK2WaM+kEKrOrg29jM+W6G1PULFd0gkTXTfI
      xA1cRaMnFaGvr5vOqEA3TDyhkInpuEKhN5OgVHVZ0Z2iosZY3waTxXfWqw30tjNertLb10XM
      rvKhbavQdB0DGO5tR4kniLsOMV2hoy2JZVXpbEsSMzSimqDsSB7eupr1PWlOj2fZurKHyaLF
      rX1tCE1HeA6abrCip4PhjEnBhrSpcdemYTpMFcuukk7EqXqCW3uTVFHZOtjOhdkimhHhV7ev
      5PRMhbvXdBFPJLBKZfrak5Qsm+62BIpQuHNdLzP5Mr1tcXLlxbcj6khGsWMmVddjx2A37YZC
      RzyGJiSmrlN1XPqTURwEnRGdoiMZSsco2zZ9yRhFyyYajXJXXxuDqSimabAiEWWsWGFzTxu2
      B0K6GLqOoQi6E1EKlk1vRxsRp0oqFkEIhZ397UyXLHriEcquR9rUUBSVjoiOJQV9cYNEPMHK
      mIJQVGwJnRENR0JXPELZdhlIx7ARDCdNpiuXzQ4tGBuf5lxJsHkgzcDwMMmzF9CqNopusLGv
      Gwba0KIx3joBUU2gqQqeJ9g63IVEoCoax89NIJA4rqSKIIONk8ognCq39KYQagYjGuPwmXHw
      VMyISQoVq1REVRS6e7pQPY/uNh0hPbZtWs1Ae5yxqTz5mUlSHZ1UHZtUyeWO9b0cOz/N6KzF
      YG83mqbhSompQM5yMU2TzRtWkj47ipdfGOV4tYxN5PjwtpXk5vKYQtDTUdsxUnEFajRGp+HS
      3dvF6kyMqlRJRDRmCmWmz0yiqgpifhlqOhlnx2oD3bVoy7QRow1bUTk2XsCVNhuGuqgU8lQr
      Zc7lbNYO9rAiE+PcTAE8j2Fdx5GCWwY6UQyTiifoiqgIKUEI2pJxtq4ZZGAqS65SQUvHEEAy
      mWDn+n44eJxz+cvtyaXguVUOT+XZMdCJocUREnpTUWZyRfpSCW7vSXJ0usCcp3J/2uTt2Qqb
      u1NYisa+kSnW97RzeirHrX2dbOttJxNRUTWDjOohNJ3Jss1APEJMuBQVBSMSZzAqKYsIAljX
      00FfzKTPsnAKBdRoDEd6mCWHLf3tnJ/NUy7a9CWTDKQVSp5kvQ7nCw5rOjRWZtLMFosUK9X5
      b7QkkvaONtalBUVhMjGbx/M8ylUHW+hIq0yx4jCRLZHQBUdHZjg3Ms7RkSlsqaDjMTY1y/hM
      HqnqmJrCyESRmAmqpjM2MY1qRnBtm5HRSaZmCxjRGMVCkdHpPK6EarVKpWIxMjVHvlBCMSPk
      8yUujE0xNpPn1Ngc49NzTM2VSER0puZKTOVK9LanKFeqWK4kqsLkbIHRmTyJmMHUTAHPc6k4
      12ANtGtheLB7okJKdSlXndrvY9vYjgu6gVUqU7ZdxmbzXJjN12wHKanYDhWntlv5ZDbHvlOj
      5GyJIl2KlsOZ8Vkm54qkknEm54q0xSPMFMoULZtcscxkrsS5qTzFik00EsFQJG9fmEJxbV4+
      NkoiZiB0A+m6xKIGM7kStmtzcaZArmzhKRpdCZPJudJlv2YND09obO5MMlusMF2qUnEc5iq1
      nj6uq8yWq5Qcj4FklFylSn8qRr5S5cxMkR2DnRhC4kpJuWpxYGyGi4UqpiIoOS5nZnJMlixm
      SyXGSza242B7LhfzZfKWjSMUrGqVqUKRsUKF09kS08UKU6UqcUNlqmRRqFhkYlEqjkvJ8cjo
      ClMli/FiBd3QyZUtbFcGz77lTLDjuGz/0tfefeO4ibnztjUcmF4eXqB1fe0UO5JXbARn4lGG
      22IcujiNdZ3HGYTBcCHXnNlimX3FG8OLGHqB3jU6w93x4F1XKoYQBqu6lo5CDLk+CEeAd41K
      W8LgVwYGyOcKDPZleOngBdpi1/nYHwKEAnDNOD8xU1sEMlWg6njMrwQJuc4JBeBdU+HAGQvf
      laAoswgkB8+HWfZuBEIBuAa43iV1x3PdD7AmIVdLaASHLGtCAQhZ1oQCELKsCQUgZFkTCkDI
      siYUgJBlTSgAIcuaUABCljWhAIQsa0IBCFnWhAIQsqwJBSBkWRMKQMiyJhSAkGVNKAAhy5pQ
      AEKWNaEAhCxrQgEIWdaEAhCyrAnXBIdcEQ+t7aPi3HzrnUMBCLkiTszmKNnh/gAhITcVoQCE
      XBVTR/Yzcew4cxfOA2AVclzJTrvVqXNcPHYKe3qE8wffwsrPAQTlfFCEKlDIVWBh2zp9G9cx
      svt5Zs6cJpZJo+s6ZcsjZrqc2X+EoW2bKI2fQbStQzg5Iu19JLQylaJFVqpoVMmeO4NbyVMq
      Orj5GabOnSezcjXCLnDhxCi964fRVIX0ulvR3sNuOhwBQq4CA7c8xdSp05iZbtr6upCuh5Qe
      qq5TnJklmkrg2jaKIvBcF1XTkW4tS14iaVCu1JJGSunhOS6KqmImId0/RLEsKeXyGFGDtq40
      uVz1PW38EI4AIVeFYOCO+/E8iaLUtUwh8BwHoaxBSrBmxpjK5enZtBFd8VA0DZB0IZBSBllT
      pfRACoSiEOunpkrJDSAFpYmzdKwefs+/USgAIVeFUFTUFr2yquvB61j3ICu6B/0z/idr/4tL
      SYNFkwJSO1c7luh/7xs/hCpQyDInFICQZU0oACHLmlAAQpY1oQCELGtCAQhZ1oQCELKsCQUg
      ZFkTCkDIsiYUgJBlTSgAIcuaUABCljWhAIQsa0IBCFnWhAIQsqwJBSBkWdNyQYwQgp0bht7v
      utxQrB/qQknFP+hqvC8MdqRItqduyrxA/z8ezsIYMAgCIgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eXBc153v9+l9b/SCbiyNpbEQCwlw30WKpEhJlmTZE8v2eOzMi8djZ6pS
      eVkrVS+VzIvj8dRL5eW9qSRTqbzM2DNjx44145FsWZIpiaIgcScWgth3dKOBxtJYekHv3ffm
      jyYhUqBIgsJCsu+nCsXbfW7fc+7l+d6z/c7vJxNFUURCIk+Rb3UBJCS2EkkAEnmNJACJvEYS
      gEReIwlAIq/JOwF88Pu3aGtr4/z5j0hkVk+AvfvOOw91nQefJ9J29QJtbW2M+6Yf6prtHR0P
      dd5tRm5exbsQA6Cl5eM1/fazBCaGmAgsf6FrPIkot7oAm004lub5/fvJxBf5/bmPefnUfto6
      e9AYrOxuqr91VoYb1ztIZLM07TmAd2SApqYmJoYHsFfVY1DKWF6ap729FYOlCKsijrywGodR
      zsDAKA0Ndfi6LyN3NrK3uhCA6YkxpuYW0RfY2V7lYGg8QE9fH/sb61CalAyNL+IqNAEwMTrI
      TGARd8NOEnP+lfSKQi0L4RhlldsocViobdrN62+eRba9BENRDWI2SVtbJzKNgf27mxjqvUko
      GqfE3YAmMUdSaaJ3aJzKYhsNDfV89FELp06dYnBwEJdNR1qlxO8dYSoQxFFcTrnDcI9n83SR
      dy3AbZQ6G2IyxEfnP2H3/kOwOM5kOHMrVYGrrBiVPMZHH7czMz7IUiJLZ/8QBqUMAH2BjX37
      DjDa14nVaefCxxeYHWonRK4Sj43OU32r8gM4i0tQK+Vc/OQTyCzz+q9+w7ETJ/AN93Cpy8Mz
      h/YyPDwM2Sg9Q9McPHyY6xdb7krv6Oxh3779FBcW3CqmluaKAt5pn+JAYxkXPzpP/e79FLJI
      92SYUpcLhULFhZbzBHzDvHepixPPHGJwcJDE4hg9veMEU2lGRz0sB3xMBxNca73Brj17qXQ5
      P+fZPF3krQAyiSXkWguh8BLdnR1kDQ4K1Lm0pYkebk5E2X9oH8pMhhOnjtFy9neoTcUrv5fL
      c49OIZcj1xeiTAW5NhRgf0MJAFXVNsbG5lfOf+ftd6jbsYuy4pwo9h19FqfFCGh4/sVTqBQ5
      YSEk8YyN0d7eQU3DjrvSv/TCaVqvXeVKW9fKdbcf3EOlrQiAcChMX3cnC1kDZaY0Z89dY/fe
      vRQYNACcfv5FtCoFlRYN714d519853lafvvP2Kp3rVzvlZe/RGfbdVouXbvns3nayDsBmPUq
      2trauXy9hzOnn+XkscOEogmEbBaQYbfZMViLyYSnaW/vxWwzozIWEfZ7OXhk38p1DBolba3X
      KSyrQQmc2F9LIK5BcSu9Yucx0v4e2traGfdNU1zkoLfrJrG0AHI1dqsxVx6bfaUfarfZQWVj
      784qBFFEFMW70sfGRlEoFJjNpjvuSIndZgbg5MljhENRBCELci0Wo5wbHTdQaA0YzDa0ty7U
      vH8PwaUYBdZyQuEoe+uLURvMGLVKxkZHkCsUmM3mVc/maUQmmUI8mJlJDzcHJ3jx9LP3PiGT
      4Nx777H9mRcptWg3t3ASXwhJABJ5Td51gSQk7kQSgEResyECyGazG3FZCYl1R2oBJPIaSQAS
      ec2aBDA96WUhGCE4P8vgqAcxm2bCNwXAlG+CdFaaUJJ4sliDAEQKbIVMTnjweD2YTCbGRkex
      GGR0d3QjM1gYHR3buJKuI+FEnJH5OcKJ+FYXRWKLWYMxnIxoaAmZQs3O5iZGe3pJ6nSYTAbi
      y5MYTCbiiwEEQUAQBB7X5QXP0gK/7b1JKptFrVDw1R27cFvtdHdcZTEicPTEUVQPcZ2bVy9R
      c+AZUqFFbDbbhpdbYmNYgwAyBEPLmEwm/D4PGa2e6iIrvcPT7HlmD6ODvRSV1yCXyxFFEYVC
      8eBLbgHXfV5St2apUtksrT4vtY4iZmdm0VpcDHa1M++fQl9YSX1TLf2tNwglk5QUmlBbaxCi
      s+zcuZNYIkjPzSGM6hTekT6U5lL2NNVt8d1JrJU1dIGUbGtooKrChauiioZt1ehMVpq2N6BS
      qGjY3oTVpNu4kq4TQvRum/fsrc+24nJOPnuYVEbGmYP1KAvLeP1vfoZapWDHgYMsRbL4O3+P
      3FxGaKKbkQUFk74RgsEggkInVf4nlLzbD1D/+3PMHD9EWq1GlUpR/+EFOP4cTouBlpZLNO9t
      Bq2CBrOWsj98jdLSYjqut/LM8YO8/ZtFXnDbCC7J+O4fNhMKBoFPLUMlnjw2xBYom80+tl0g
      /3/93xIKhwjarFgWlygwF1D6V/9uq4slsUVs2atLzGRIjoyQmZ9/8MnriO1738UoiLh8UxgF
      Edv3vrup+Us8XmxJC5CZn2fuL/6SzOwsyGQUfOPrFHztP1rvYnwuQixG2u9HVVqKXK/ftHwl
      Hj+2pAUI/fMbucoPIIqE/unXm9oSyPV6NLW1UuWXQPHDH/7wh+t9UVEU7zswXD53jszM7F3f
      6Y8eQXnHfHrI18NP377O3rpiOrv6CIdDpFCxODVGHA3Z2CLTE+NEZAVMDnWi0um50dFNUaGJ
      nr5B1AYLutAg//fvOjAbdSxMjpJASyo0R//4DEP9PZQV2+noGaG02IkQD/Bv/69f8czhJkZH
      p0guz3Pj4+uIViWJhJzR4QGUOjMz3kHSCj1To72klUaMugwtLZ2IySWWEiIkQkzMhii0Fqz3
      Y5XYALZkFkh/6BCJzpufFqKoCLXbfdc5n7T2IC7MMz/pJGV24esbxOmYpKt9lMLKSmSJMM/t
      c3O14xrO2iZC0z6CM718+L4fc+Nx+rs7eKY2t1VQIZcz7vPh7xmjzGldWac49/57LIfDON31
      TF69RIEqyujCMj7fDHOz42wvKiIa8BAlyqxgZ7nzPF09c5S4p1GmlqjR2Sm22QEY9voxGEKM
      xeMcO3Zs056lxBdjSwRgPHkCgNi1ayisVgpe+xoy5d1FKauq55UvPUdbaw/Fu2xoK0rRagUq
      KyKU1m5DLUuj0UNZdQme/g5SNiMGsw2l0ozLaSMhWEGtxaSVkxVSpJICNpsVlZiib2KeQ3ua
      0Fj0+Jei2PVKFooq+bMXX6HzZhcWi5ni4l1oEwkwABiosNtBV0nFYhr3tlqWZ8dZjkQABxaL
      Ga02J7bI4gxD45MU2804nc7NfbASaybvpkG7O64RRc/hvc1bXRSJx4A1CEBkfHiQuKDCqBYJ
      xrKUFRrxzy5QVlnBhHcSe1EpriLbYy0ACYk7WZMxnMGoZymwjFappUgrZ2o5SXNzDVfOdbHz
      zBFmx8YQHJbH2hgOoN87T69nnh3uQhorCx/8A4mnljW0ABmGB0YIxVKYtTJCsSzFhUZC4TBm
      cyHz4TBms5Vat+uhWoBYIs3N0VmcVgPVJRZkss3xO9PnCfCvf/IR6ayASiHnR396iu1ux6bk
      LfH4sYYWIGcM91nKb/1bsYZMM1mBH//8E3rHAygVcv7Vd57hQINrDVd4dLrH5khnBQDSWYHu
      sTlJAHnM1iyERRMMeHMLX5msQPvgw3lPXg+aq52oFLnbVinkNFdLMzX5zJZMgxYYtDRUFq60
      APvqSzYt78bKQn70p6foHpujudopjQHynC2bBt2qMYCExJ1smTWoXqviyI4yakqtD1X5B7vb
      +fDcORaWU6vSPB4P8ZkBPMEH5+vxeFaOf/nLXwKwsLAAQHxmgIGpJRaC0ftcQeT8e2/T3j3w
      4MwkHnuemA0xKqWCaCLF5FAX1wILWPUZkpodEOyls2+YV483c3FyBo85AaKKQV+E5m2FXPvo
      LDJnI8bkDPtPfImWDz/g29/9AZrIGEVFxfT5l5kb6mbGO8LuxgrChiwzU+DtasPpdjPWcZ6Y
      oQqnIkTziVfZWy4D6w72NVfx21//kpTKwje++vJWPx6JR+SJ2cokV6owqJIMj8+BCCh1jPZc
      IxCD6vKcf/z9R06iN9gY6utnZ50RudaOy13HiaMH2LmzmcGxSSpLHciAGwM+FAo53r5cWKLq
      xp2UOy0r+TXu3I/drKO4opbnjh+iaWczA339YChlcfTaXS3A3NzcZj4KiXUk70whJCTu5Ilp
      ASQkNgJJABJ5zZoGwZ7RQVCb0MjShJMiFc4CRn2z1NfXMDo4SFF5zRPhGkVC4jZrGgNk0wn6
      h70oSYLKiEomUl1ZSOuVQeqPHGDeO0ZVdRXZbFaa15d4IljVAvTdbCUQjFFSUUtd1Z32OSKD
      gyM07thBNBJhzjtBQqMkEomiM+qIRiKkBR57z3ASEneyagyQTadIZUSWZz0sJe9MEdCoVPgm
      pyGbQu8sYXtNDcGoSPPeZsRokJqa6s0ruYTEOrCqBUik0sxM9FN45FWsmjtTFNTUfxot3Hzr
      34ryXCvhKl+LPaiExOPBqhbAVlyOq6QEjXL9lgeCwSDRYJBPjRhSLCyE73luOJz73jcxgcin
      ZgoA2USYcCJLNLhA4n5RmFJRgtHVJhO3GQr1ctb3JkOh3jXdh8TTx10twNRYPzc7+wFw69Yv
      3m1nZycOgOpyZkfGqNu5i9BkgJ///AO+/vWvMzAwyP79e2htu4FKb+Lk0YP0XDnLQuY1LPII
      4Xk/UZmJKvUcA+zATYR0NELf8Aj19buYGOzGVVuPp6+Xhr2HKRF8dAYsZLw3cVTVQTSA1lZG
      fXU507FJfud9HYDepRt8u/Y/pURftm73KrGa5ViKX5zLRbf/zvM7Meoen7DzdwnAVd3IzmSS
      BGrU6ziJI4oiGSA8s8Ch547Se72VWMzB7t27GehuR6nWcPbDa3z9tZfouH6deGAYb8xCpOsq
      TouBbDbL6dPNRD05k4OAx0NUr2fXyTP0vP7XjMrr0VrmEJGxvBwBPUAac2ElycgiyWSGXdW5
      rTvB5OJdZQsmFyUBbDC/ONfFu1dHVj7/2Vf2b2Fp7mbVGGBhYYmevh72Hf8yZaXrs1PKbtKy
      kFSww+VChQqXy006rWd6Yoaaxp0MjHo4cWQbLedbqKzexvxyiu//yTeZvGW5qVLlQlaoLC5m
      rl6lrtSFy27CANQ/8wr0DWMtKCC6uIRarQGDAzdqVBY9YGFhZoKh8UksBjXV9noc2mICiRkc
      2mKqzfWfW+71JpsV+MW5bq73T3Gw0cV3zjSjUEhrkRtNIpUBQKtevex11zpAKrbEhx9dJpkV
      eeFLL6NXP9p/zuNuCySKApF0GJPKjEy2eRWwc2SG/+mnLSuf/+fvnWR3bfGm5b9VbGUXaGRq
      kX/z/14E4L//j49R67o7ms9dkujpG+L5l19BkY3R0d3Lvj1Pp+8cmUyOWW158InrzEI0et/P
      G42YCAEg026u20ajXr1l3Z43r/YyH4qtHP93rx2/K/2u11+Rzcxbb77Bm2+dxep8+t9Mm43W
      DNXNMeoOTlHdHENrfvBv1ot0zxss/4dnWf4Pz5LueSP3XcjHP7594b6/yybC951RA/j4rX9k
      KpK5a8aus7Pzrs/3orOz8yFL/+hoCgTUGhlqjQxNgbAqfdUg+A8qaogl0mh0kk3PelNkhbLt
      HpABYogi64lNyzvZ+rcgZG8d/wRV09do7/LgNEPIc503O+dJBRap2lbGjY/ex1C1hyLVMo1V
      xczJS5ifm2VfYwU//7ufcPrM84xGNLidJk4c2Ync4mSss4NsNkYmHsJe3kgoGCQYDBIK+InJ
      DJiERVpavZx8thFBV85XzhwlGAzy8QfvsjA7j21bPalwkpPPP8t6dpCea9pGUp5b0T29fduq
      9FWjgiuXPkGh16KWW9i7r+mutMW5aQSVAaMagrEsRTYjPv8cFeUupnwTOEvLUSkebvqof+km
      rYGLWDWFnHF9GZ3S8Cj3t2ZEIUPq8l+TGf0IZc0p1Ef/c2TyzdkYlxajucoPILv1eZOQWyrJ
      BiduHecWLWdmfJgNatr7lBw4+jyBvl70+hQVtdvZvn8vicgCbicEZmTIZHJGhkc5evwAi/Mh
      9p/8JlHPdSa62gjERZLLM5TYzZjtJexpqqOlxQ9ASWUtAJFFOa+82kBFsZl3z1+DM0cB0BUU
      cqy0kI4QKOUy5ubmKFtHn6pNxaXU2HOOD3Sq1dJaZQw3MTpA240ujr3wFZzmu9cCgsEg/ik/
      coUcFZCWQ2mhGa9nAbu7kvB8gIa6mgcOguOZGH878FekhJwyDztP8Ezx6S96rw9FxnuF+Bs/
      WPms+9rfoKw8sil5J7NJXh/9ycoM1B/W/CkahebBP1wHUuEAF3/+FwAc++M/R21+enwhBeem
      6OwbZvvuAzgtD36RxkIBYhhRZmKrW4Cx0WHUWjX//PN/4Ns/+DMK7hDN4pyfkgo3i7PTaIEE
      PFKc4Gz27mVcQRTJZDIPfcNfBEEQVn3erLwVKPij6h8QzUQwKE3IRNmm5X22e543xdykxnL3
      PC8fsm5KvpvBwJiPY8eOkQ76+d3Zq2yrKkGldUAmzIxvFIPDjVGjQC6XUVFRQWtnLyDH5Spd
      LQCr1U56MciunZ+dAcoQi6eRB4MUGLUsxbNUF5oeKU6wUWnijOvLK12g/Y4jKJWb0w0RKw8h
      Hvj+ShdIVXlo07pAt7EoNz+wdtbRT9OzPgAEbT9KZeOml2HDSEW5ePEi1TY51XtPE/ZcJzE5
      ikyjQVBVEgz4WVYqUSgUVFdX4x3pJ4YRURRWd4FaL7cwMNhP05FX2dPwaCukj/s6QD7yNwP/
      nnAq5zfGrLbwg4b/ZotLtH5MjA4w5pthm7sUlaOOdHCKJb8P957D9Fz5EIOjCk3ES7Z0Lw1O
      8M5mMYphZpL3GATbistxhYPragy3nly8ePGBEVgWFhaw2+2fmz49MUwUE4UGFSa7HQU5f0Em
      k+m+v/N4PLg/E8nmSaHGVM+NhWsrx5uJmAiRvPx/AqA5+i/XfR2ioqaBipo7/NYaXLhcOSvl
      w8dzY8vxcRl1rly+7jIAG4XcQwDhwDSlNTtxlTx+g6SQr59YIsagf5nwVD+xaAx7oZ0pzxCT
      Symaq4qo3nmYSZ+HsTEPzc11dFxtJa4woFcKGI1GmpubGfHOIIrTLJvNWGZ8xIxO5jweLBYL
      E2MjFBq0DC9FWA5MIpfbKal101y/DY/HgzYRIe50sdjbirJ4N/XlVrTax8e46/M4WfoS9Zbc
      rF6JvvwBZ68vyQv/bmXtgWwK7fM/2rzM53rAd4UqAMMRcN49s7nKDkAuphgeHmRuIbKh5RIR
      mQ77iaViD/2bGwPjqJVqxvo6EEUREZFYLIYoimyr3QZqA4VmHcFgCL93GE9fB33+KKHQEgqF
      gng8jpgOMTbqxTvmYXI+SDSaorKyFMjNcqVFGRoxSTQDWqOT7U019H3yLlPh3GA1EY5jsNlI
      xMMM9Nxgfn7ugQtF68FtU/Bg8FP3d5+30HTbpBwhycTkLKlokOWkiMtQictQSTgUvu/vb3Nn
      Xl8EWUHFPY83nGwaRs5C2Jf7Gzmb++7Osn12DHD58iWEVBC1qZKDn1kHeOh8H2IM8Iu2v+ed
      vt9g0pj5i1f+LU5j0SPllS9EPdfpZQcxTysVVU78M0nKiqxcanmf5sOnITqHqHOgSge53jvO
      d7/9DUY6LnMjkOblPZVE0XOzf5zjxw5x9UILJ0+exOPxEPB7icsMVBebGZ5aosppZDqc4cj+
      XbS0tOByWhnzBTiwv4m2jqFHWqiKp5fpuPa/ALD30L9CpzKu/wO6F9k0XPvfIXnrhaAxw6H/
      EhSqlVNWtQA6WZJI1szu3Ts2tGyfDL8PQCQZpnPi2obm9TQgVyjJZjKIokhRZSFqWRqPx4PL
      XcfOhgquX7/B4uICS8tJttdWAtA9Mk54rBff5DiBQAC5tRLtHe8lj8eDqNShVQi0tl4ntrBI
      JJslGvt0gW5pOcmeMjPvtA7z/COu0p7zv8NVs5yrZjnn/O98wSexBhQqqHkxV/E15tzxHZUf
      7jEGqN/exIW//SnF5VXsqds4O/mj2RTvAUYhQ7N4v+1dTxdCaJLM+AWUVc8iL3j4oCC6sl2k
      z3+IpdiNCgMul4t0Oo1enqVzYIJdu7ajLLCiiC8QiOXWOnYfOIq7zEZfzygOhwPLLQNAk1ZO
      e9cAbrd7xdS8sECHd3YZg1KJSpmr5rfTDSo47VDw4YcXaGiuX/NK7VJy/p7Hm0JRMxTeGiB/
      pvLDPbpAo4O9yFQadCY7JY5HWyx5mC5QevAsExf/CqutGusr/xsy9eaYQmwlYnKZ6N+9hBhf
      QqazYviT3yPTbFJ3YAvpX7rJuam3ATjj+jKN1l1bXKJPuUsAw11XuTkyQzyV5lvfeG0lkspa
      kdYB7o2w5CH6919e+Wz47tvIre6tK9AmEs/kJjt0Sv0Wl+Ru7qrh7rpmypxWNAqYnV89A5CM
      RUikBYLzswyOehCzaSZ8UwBM+SZIZx/PtYPHBbm1EtW+7yLTWVHt+y5ya+VWF2nT0Cn1W1b5
      xXQMMX3v2cY1eYbz9l5BLN5H0HMDZ3kt8WAAxyMYw0lIbBbZuX7ib/0XAOi+8n+gcN5tAnJP
      I5hkeA5fCGrL7x7slBSX4Ad27T3IaE8vSZ3ukYzhth4RogEwOPjUPvlBZPD5ApSXf348MyER
      ISxosehXD7ZuM+3z4SwvJ7S4iM2WswkKBoMIgrDy+V4Eg0Esls3fxfakkx48ixjJBWFMDZ5F
      Zbt7T8AqAbRdbmFmMUgkKqP8G19Fs9JJEvDNhkioZPijAhmtnuoi6yMZw205Pb+CQB84tkPT
      tx7qJ76edi6NR/mmVc656/0oZQpc7ipSS5OoClyIyzNodAYMxVVc+OgCVdvqGB0epqmpnvae
      MerqG6itKGaw6wIz8dM49GmS0SUWojKC837cbjfekf7PnZPv6elZmZOvqq5kMZLg8N4naMvq
      nXPxm4is/ktkB98FQF3/JRSfMbpcJYBkMolOq0OeWSaYhKKVjWFyaravHr03bc/NFDVsf7RF
      sy0hlLOKJOx76J/cGBxDmF/CO6mjcvcRAn29RJfG6Lw+Sv1eLZl4jMN2BR9dvkLt0dPIFgaQ
      ZRZou9yK+/hrLHquky5IMTSnwJZpJ2o3I2SznDx9mk9a/Hg8HvR6PVpyc/JqjZ2IXXfPOfmL
      2XK+tnf9/DZtOIF+6M35YmLHH4Jj8yxRFc5GDP/JbwGQqVaPQVYJwG6zMReDZ089j+oxfol/
      IRq/Bv42KH34jdrNew9TVVnEUM8ADoMKg9uFSgXiLtBZrdgrS1AZYM/RRoY7PsJZUoJCa6Om
      woXNABaXi/mlFN/7/neY8XqAnLsXOawY2D3snHzt4iTXbiSocjlxruPuqQ1jtgtE4dPjTRQA
      3Lvir6R9dhA80neD3sFRapqP0FT7aNHbpUGwxF1sYQvwIFZviCl0Ypyaw2x8gprYNRJNRRmd
      H6amcBuGPFiA23IcjXDk1v6DTR4DPIi7BNDXep53Lg+xZ08TFcWfbxf/JJPJZvhfP/wRw4FB
      tjnq+fMX/hKl4omJFvvk8phV/NsofvjDH/7w9geHq4rdjVVMT/pQGayYjY/mGkUUReTyx9Pl
      Xzwd4586f0k6myaZSfB8/UuolY+/Pf9WceXjcwyNjJEKTBMxOwnOzGGxmBi58h6zmiJ+/bOf
      I0suo7da6BvyUKCFm4Meuq5/wnJGSbHTzsUP32JiPks6EUapVDI7O8uNGzdye8OzCQZGJ3EU
      aOnoGcFuVNHeM0JZSREtLS3YbFb6unsoLC6hu70Vi7MUpfzhHddG0iFeH/0pNxdaqTbXr3JC
      cJcAANRaPVXVNY9c+eHxFoBKocKssxBOhPlK89fZ5qiXwjndB6NWwYjHg0Ym5+zlmxxtdNDa
      fhN5cQNjH/4Gc+V2Mko5np4Opj2jzCdlJBJJNBoNhw/uA+Dc+++zEImiIMu834u1tIrFwCzh
      cBi/f5qskGWwp5M53xiTEYFkIklNVQVej4eluRlqK828+ZurbDu4H7NGhXINJjp9SzfpXbpB
      LLOMRW2l+DOOkPOu7ZfJZJysPc3J2s1xw/KkE4osY9BpkWvNnDlWyWLWwuTkVf7oxClGb9r4
      g6OVvH15ipqKSubCKdxlTrp7R2msKaatZ4hd5VoOvvBtxLCPJGDUailzWpn35xb1tNrcWLPQ
      qMK/FKWqspTern4SgMViQavVYrVaaGyE/o5WVI07KCwpucus+37UFjTSvdgOQE3B6sH3ExMo
      +5MPz6K1l3NwjfsUonMegupSXBY1kCIYTGOxGCAd4mK7lyO73USyWiwGNR6PB5vJhNZu/1y7
      91RwigCOW9fLP1LRIIOTizTXPx3hsJ6YFsA/NcU2h5uOjg7UajUBv5dlUYerQIWgsxCdm0Zj
      KyHoH6J+z0F6rrWy5/gp1AEPvcsJBiM+DAUyrlya5T/7r77DUEc3S1GRVNDPTFzDO9e6sdjM
      1DgtMOPDNztDiaMC/8w0JUVWhkamOH7qOQyhKaaAK++24apzk1ycxFW/h223tlU+7agNFprr
      nx6TjDV11Md6WpkJp5kYH6Grd5DF2Sl6uroIhoJ0dfUwNbv44Is8ItUNzezb2YAQm2d+WUBf
      UIheIZCWqdm/vYTrN4YQBAGLxcrEhA+L1Yxn3MNSOMHS5CCBWBpLYRFNO7ajAkZ9Ewhzw/SM
      +QnHYtQ2HcKghnAwSDia4uhzx/HdvMyQP4QgKrCaNXhvWb5CmoraXSiEKBm5gfKizffzI7E+
      rKkLlFrw4KcUITiJAZgDmquLuHKui51njjA7Noa7yr0hcYI7Wy+TVlmoq3KRzWa53PIBOw6e
      pLBAj8lkYmywB6W5hOicB4e7gamRHkorqpicXWJP0zbarl6jYc8BPP09NOzezXIwiMViZnFm
      GpXZCqjIpqIoABQKDCYD0Ugc70gvJVWNeAZ7adx7EG02ShQVpAHSRBZnEHRWNDI5DockhCeN
      NQhAYKj9IgFVGQ5llFAsS3GhkVA4jNlcyHw4jNlspdbtklaCJZ4YnphBsITERrBqHWA9eJzX
      Abac+QHo/iVoC0Bv5Jf/8P+RlKmYnBhHp9ORTCZJJBJcu3aNOe9NpqMmRgY6STQTSjoAABCq
      SURBVEWDoCnAO9jFjGeI37d52N3gxtdzjbevD1FhEAgLSmamZmnrugHZLEql4tYiUjFdba3Y
      iorouHYNe4mLybaPCeodeIf6UerMzE4MkZTpMOo2x1v148ITMwv01LA0DrH53L+FDVRXl7K4
      FCQ+1UVcYUEWm0EhVyCXy5FpS0lPX0JlrOS9C91UVs4jLAdorLTh3rYbgNaeIRbmY8w75SQN
      C4wvF2IEfD4fAb+P+ppCXv/5G6itauYD77KUUlERybmlJ+RhVrCz3HmeuFjKsYrP38jztPLU
      vKZ7O6/T0tLCXHDtQSeuXr26cuy5FZkSNib0T7zsCFf0xcTLjgBJEnEBuVxG/b4TaNKL1BcZ
      iKvt1BVbSWjMRKJKmvftpMJppHZbNQ6Hk7ioY26sFxCpqm/m+988zdSyEr3eTFN9NRaLJffn
      KMZqLaSurgatWkdNQxOFZjmRcBSt2YJWa6CixI69yI0Y8zM3P8/c5wQwf1p5asYAVz/5kISg
      oKq8lOs3eqi0WJhWCjiMJvqud1NcYubS5escfPYkkZQCtyFOQLTz2ksneOedd5jz9OKNGSg3
      CRz/0teoczu58MklkOnJZmOklhcpqtnF0mxuE83i7CQZtQVV1M+l/gAn97lR2Lfx0omDtLS0
      ICQjBPwhypqriUVETp16BiXws9afcLb/d7zU+Cp/fOBPV91Hb2cHNTv3on1qXk2PN0/dY06m
      MyjlIql0lmxWRK1Rs3P/Eew2K2defoVdOxoJ+8Yp3taIb3yY/putoDZSWFzBi88dp6Y6t8J5
      O/TP5NwMABZnGbsaa1byKauqw+1yYrQ6eeXl52lsbGJ8eGAl3Wgt4tCOOlIyGTKZjMBcLsj3
      juJmSs0uthffezvjjt1S5d9MnpoW4LPMDAygbWjgcVuzFEWRVDKJWqPZXCM8UQTfpdxxxTMM
      dncwObuEu9iJoWYnxbdsHwPDXaRKd9B27h22V1fi2rEL/R2CvNNFfHfbx2CqpbRQu+JWvrOz
      k/Ly8vu6me/s7GT37t0bcZdrZusGwdkUDPw2t1nCuf77iYsbGh580hbQ3XmDt379a77y9a+z
      c8/ezcs4vUx65CwAquJdqJQKookUJCP8/vfvsNtlRldYwuJSkmjfbwimLfhDESbf/UfOtrRy
      9OSzxAUdhLwEo8fZvaOOYFwO8TEWprOoxBQyUxGp5Vx0yGRkEX8owzaHinfOXVrpev6L114i
      GAxy9cJ5YuEAaXUZSSHGiWdPUaDb/Oq4dY1tIgRz3bntcvnGFlhfpxVafhyc48fBOdIKLXKl
      CoMqyfD4AkVFdgrKtnPp/ffZd+AAg55JXjtWypA/jkpn5sVXXqW5sZ5Z7wjVNTVkREiHJhj1
      BhgdnyQDqAwWju7/1GmCtaiMHXVuFFrjXV3P2+6p5Bojz508RCqWQiaXEVkIkNggF7GBoS4C
      Q133TNvaLlBsPrdTSJE/lpVb1QVKZ9P8+P0/B+B/fOEvUH3GUWwqGqStz8vRA4+P3871YuTD
      3wBQe/oPVqU9kgCmJ72EkyIVzgJGfbPU19cwOjhIUXkNVpPusRgDbBaZRISr7b0cPHwI9a0Y
      ybdDNKWiQRIKE+bbxutCkgl/EFehbsUEGz51evWg0E5flPSt4BCfrfxPO5lEHACldvUmr0cS
      wEBfF6iMqGQi1ZWFtF4ZpP7IAea9Y1RVV63JGO7KlSscOXKEjz/+mBMn7hc5PcPlyzc4enQ3
      i4sJbDYTfq8Xk82EQmvj852xxfB6Y1RWFq71Nh+KD999i+bDxxCjIbpGPDRs34uQCLI4M4G5
      wEoyHeWDazP8y+9/lfHOq3TOpfjKoVoCURgYneLoMwe4diF3716vl6W5KUJpFfXldvo9c9SW
      WZmYj/PMgcdj0Pi08UijjtIyN3PeCRIaJZFIFJ1RRzQSIS2wZs9wY90dNDRU0jHgp6Kkl6Gx
      aYpKLCQyGtwOPW39Xr76ygtM9rQzFYqBMonfP0vLB+9hsdioqXEi1yzyfv8MNeV2lvzTGIsc
      zI6Os+f4KcqcaXy+BXpunMfiqkOZXMTqqmf7tvVxTPvCK1/mwvm3SUZUNL74Kr6OC2SzWbJZ
      gUpLkIDVzb69LtRKJX1jXpYXQszXGJgJyVDYqzCqc+E7lUolPp8PvV6PSQHt7e1o1CbCaQvJ
      RHJdwsjejs+sUCgY6O5gcjHBmRO5iO3ZRHilVVpYWEClUGCwWFAAk+N9pNXFmLXiXS1Ubkao
      lIWFBHb747npHaBzKrcjbLdr36q0R3uq2RR6Zwk1hWZ8/jma9zYz5Zugpmbtu4Qa9zTz+q/e
      Z3dzLW2t1ymwudAZCxjuGSa1JGOwo5fYKy/QPerDRpr2Pg/xYIrK2iZk8XkS4SAY9DTuP0m0
      9w2u985zylGIxWpmwuujzFkMQElFLSAQzsjZV75+4Zi8Y8OkZWYqy7Vc+fgDTh4+SjIcuOXE
      Kg36EmaGr5LFvRKwYmTIh8tlBUPOfPpeASuKrEbGJpcwaVUsqtZnduQ3/5jzzfPaH30br2cM
      V8MBOtuuEJiZY1tdNQlBxVu9E9S5ncwNdGJvPswzOxvwTC0iiguYTCZmJ8dYTCg5dmjPLQFY
      8PmCXPzobSyuOvRilHBWgzodxOqqp6m+CoAfvfc/APCvX/zLdbmXtfDXn/x7kMHffusXq9K2
      fB0gHA4Tj8fRaDRoFAI3B300VDrwBqKUFKiYXkrS1FRPeGkJq9VKMDgHaJHLFSCkUcgBhRxU
      ZrKJMLOTY+js5Sz4hnE37qXAAMFgGrk89/ZLRhaJiDqMatm6elVLRcMIWvND71XdCoYHcwt1
      2+obmJ+f53pLC7rycpodSgY8C6iNFsTC7cQn2jCKWaqPncKmSPJ3P/klGZWWWrcLvU7HwUOH
      kAEtLS2cPLmdlpYAen3OBKXt8sds2/MMRUY5U0tJXjqT69beKYCxwW4EbSG1lTlHw3eOfT47
      DvJNTFBWUcHiHd9nE2GiGFAkgihM9gc+8/u1AFsqACErIJPLNt0rgygKZIJtKC37kcnyc9nV
      NzZIMK0i5B9BaytjT30Z0RSgNiAkIpj0KnqGJmmuLSUi6lClllkWQKuQYzbnujvtVz/BUurG
      bravvGBioXmWkgr0YhQMDipLc+F2Pzl/HoBnnzvKr351lhdfPIFnuI9wRk1lqQOVSsHs7AI2
      m4X33/kNp1/9FjUVxfz+9f+HkgOvYZFHEJMRojITVeo5etmBmwDo5dzoGaGubgczY704Kuvw
      j/RR3XyAMueDIxxt2UKYkBWYb/8H9CWHMZZvrqs8MbNMcvotFMYGZKrHt++6kZRX11MOcMfm
      dvNtZ4Da3Pr5rqZcQO0CAJ2Fz3rY3Hf42VXXNZvNFN83Zw0njzbxQctl3C4HymyCUY8Hg1yg
      +fBJWi9/Qt2O3dRUFBMPDOONWYh0XcVpMZDNZjl9upmoJ2dWEvB4wKGn/tBz+D/6KZ1LDvYZ
      5xFEWI5E4HEWgEwuw1RSgNKy+VFD5Cozxu0/3vR8AUQxQybUjbJgV161Ps8+99ytoxQDg+PU
      1NTgH7mJrbyeGoclN2ZSy3G73WTjYUZ9M6gzSr7/J99k8paF7u3xkcriYubqVepKXdgcJtQq
      UO05Tap/EKvVTCq4iFrzcK49t3wMkG+I2TiJoZ+hrf8eMnl+zcd/lnA4vNKd2kgSiQQKuRyV
      evWCa/68gh4TZGkZutFiZMIW2EOIYu7vMWEzKj/AxY/O09nRfs+0vG0B+mdj1Dl0KNbgZ3K9
      yAriluTLyDAsLcKBQ5uf9xYiZLMgk91zm+66tACJ4CwdXT2MeKYefPId+IemSSZS61GENVOs
      jbIVdVAQBK52Xdj8jIFFZxkT5VtjJbsw28u099KW5B1cmiAambtn2roIILgQpb65CXk2uabf
      ZYLXkAn3Dl+50YgDHYhCetPzlcmg1pLZ9HwBZIlRZOGtEZ9ZZsEu25poNkueUULT/numrYsA
      HK5CRrt70BjXtv1kLKBG+FwvnBvLlWUN8i2wQpXJ5HiWPz/S5EaSopiwuDUtwGxawXB8a4ac
      gq4QpeHeU6JbOgbwj49RVF6xKnLf0858MEShpWDT880IAplsFq1q82efsoKAIIqotmBs6B2d
      wGDQU1i82iBy3QVwZ4xgURRXVnnvdSwIwsrA5PZ39zrvQdd5lO++SN5ftDzrnfdayng77826
      1/XO+1HKc7/nve6v3rU4xJJ9zsh8M5Dyzp+875fvhnSBJCSeFDa18x1eDOCfncVidTA3F8Be
      VEoyMIq+YjdE/MwEwjTtbt6QQs1MeZkNhCkpsTE3u0B5dQ39/YMcPrCXyOIs3kBsxXR3M/Pu
      7bqBubCU8tL1M9FeQUgxODSGXKNHno6SQk2J3Yh/fpnaMjvDEzOUV1Zh1q+/O8RMIsqIx4fW
      UEAyHECht1CgkxOMC9iNamamfJjLd1BmX39TmPvlbVbDQjBIUXkddrN2c1eCzdZCVHIZobkl
      apqbSC4HKStxkEiLGI0movH4hhXI4XAgVyoJLydpaq5hYTaCzWIEMcvMQhS1bOOmJj83b0Ch
      kLO8vHZvdg+FXE2hzYxapUKmVKNWyrDYi1AhMD4xiVoB4XBkQ7JWag1YjDrU6jQqbRFyIYOj
      uAwxk8DmKEZtsFC6AZX/QXmnkgnSyTiZWyvxmyqA4d4bRNJybIUGBrt7EBRqPJ4JpqYmCQWD
      aGUC8Q3yDNDW2oZapUatEOjpHkRjUOHz+ZjyzyAIaXzTsxuT8X3y9s/OolBoSMTjG5KvkAjS
      0TOKUqkkFgkRisSYn/Xjm/Sh1+mJpwVSqY1ZiIwGfAxMBFAojISXJogmM8xMefH5fMTjEVAZ
      Nqzy3S/v5UQGjU5PIroMSGMAiTxHMoaTyGskAUjkNZIAJPIaSQCbzJWLF1n0DzPgu3+MAYB5
      Ty9XusdgeYaf/tNZorNj/OyNs6vOGx4aAlJcudYBiFy8eIn+G62Ekxs0o/AUkV9GOI8BTXUu
      fvb2dV7eX8lfvfH3HDhyhpGbn+CqaaS/Z5xv/vF36L1+nkgkjkaRRFt1DDIJAjML9HgX0IpR
      Lr33FiG5kfCcj4zCiBBdQKV/keHebnz+KXZX2ugJJJhveZurnf289Aev8cGbv6Jp1x78y1q+
      9Y0z5FcgpM9HagE2GZOzCneRCVEUadh1BLtsEXNFM0I8RO2OvRRbb82Ni2C1Wqm65Yp8R10R
      g74wt03JRBFMFgdWk47KijIEwF5chkEjp67ahcZgB4WKY8+dYXp0kF276gnHUhw4fkyq/Hcg
      TYNK5DVSCyCR10gCkMhrJAFI5DWSACTyGkkAEnmNJACJvEYSgEReIwlAIq+RBCCR10gCkMhr
      JAFI5DWSACTyGkkAEnmNJACJvEYSgEReIwlAIq+RBCCR10gCkMhrJAFI5DWSACTyGkkAEnmN
      JACJvEYSgEReIwlAIq+RBCCR10gCkMhrJAFI5DWSACTyGkkAEnmNJACJvEYSgEReIwlAIq+R
      BCCR10gCkMhrJAFI5DWSACTyGkkAEnmNJACJvEYSgEReIwlAIq+RBCCR10gCkMhrJAFI5DWS
      ACTyGkkAEnmNJACJvEYSgEReIwlAIq+RBCCR10gCkMhrJAFI5DWSACTyGkkAEnmNJACJvEYS
      gEReIwlAIq+RBCCR10gCkMhrJAFI5DWSACTyGkkAEnmNJACJvEYSgEReIwlAIq+RBCCR1/z/
      uG1tfp6sYEQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Delay by Airport' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Airports' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Airports_1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Carriers' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAJWElEQVR4nO3aW3MT5x3H8e8edD7YlmVZPmCMAQN2CQktTJxk6Ommry4XfQOd6XTam961
      k+lNm8m0HdLM5FCaTBpiCiVgDNjIsnXW7j69iMGQhATSOCb5/z43krUr61n5+e5Bluecc4gY
      5R/0AEQOkgIQ0xSAmBbev/Pqb//Cr/745kGORZ5RP1tZ4uLmzkEPY1/oCCCmKQAxbS8AP2Ry
      NPdET6qMj/HiyWl8b7+GJc+yI7URnvRPXys92ZzK5XJMFdPg+dSK2QePjxezZDIZyumv3lf7
      YZrRzNPt0/fW9jx8D2amJnjpuXkKKZ/jC7MszY5RHhnhwpl5soFHOlvg/MIYl65tEKazvPz8
      USaKqad6UfnuymTz/OhInclcQG20xPmj05yaqbI0WSKbzbJydIpCGDA9XuboeBHP8ygVC6ws
      1Cjmcrx8fIZKNuDQRIWVY3XSuyUtT1c4MVMFwPNgvJTn1NQYyzNVfN8D57M4O8G5uXECP+Ds
      whT1QppDtXHOzlbwgLBY5sRohsOTFVYWJkl5Hktzdea/ZMce7t3LcXKmjMuOcun6BqeOL3Bm
      rkgU1ilc3WLY75EKPLxSibt37tLpDXjphUXe++AqL54+zJ/fXt3P912eEUemq9y4u82pqRG6
      QZ7Lt3c4PZGi44pcmCqRxDE/nK0yVs3zp3evc36hDoHPW6trjJZLpNNpVo5M0CLNO3d6nBgN
      +VfDUS9n8XyPbBhyYqKEny/xwZXrTJQLjJZLFHodZsopbrQd5xemqeV95stTbEY+G5uNh/fk
      zFfyXG4OWZ6t4/caXGkNHrs94Wcf6HR69IYRw36fe62Qq+sNNloxi8dmmbu3wb8bDeonj3Mu
      c492P+LM8RlcNKAyUqDRbKN/K3+/TWV9/nO7zeLkCHF3QC9OaPWHuDCg2e0T9bqsbXaYZkg/
      cYCjn3gsT4+RyebZ7vQp5H1a7T69KMbzoVIZobnV5NYwzVK9AMB2q81GN3rktbc7fQZxSDfu
      s+0H3LjXgkyWU1NVrt/dor+7Xqs7oBcl9IcDDk9U2Bg0aEeOzVbvc9vj3f8qxKu/e53fvPYm
      Do8ocQRAKp0i8By9YUIhE7LT6eOAMBWST/lsd4aUCxnanR5BGDAYxvv41stBefhj0ND3iZKE
      0PcBR5RAsLv7TRyUsinavSF4ECeO0PeJHRQzAZ1BTD4V0IsiEgexgwCH8zxIHAkQBj44h2P3
      +YFPnDg8HJ7n4QCXOPLZNNEwAt8n9BztQQyeR7j7+xIHnnOk0ylcHOM8GETJ57Zt7wjgHMP4
      02IBYiDu7x06tjt7kzsaRmwPdx9vf1pVrMlvQpQkj9wCxA/Nq+3u7pxxj66/09u97T86CWOA
      h76OFsWPLr//s/vMeu3e4MGL39/z4xzRQ+s5oDcYfun26GNQMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDEtPCgByDPvkI2zYWluYMexr5QAPKV2oMhF6/cOuhh7AudAolpCkBMUwDyVBZnavxkcZa5
      UpqjEyOPLPP9FCcnS0xWJzgzkeNwvULe+/zvKOdz5IK9Ba+cOEw1G5DP5SgE9x9NsTxVolbK
      PdG4Tk5VvtZk1jWAPJXJUp61uxvc2BlwdnycF7IpBgms3mqwOFWinEmTjhw5r0ghDGmVy5yb
      LHP33hbVapVua5tipUp5sM0fPlrHCzMkccRCtcSNKEXSjFmZn+LqrSbjxYBUkCXM5lkez7LT
      6bI5DDg0kuWj9SbPTY+wur7Jx/c6jBVyZIoj/GK+RLM7ZHUn4uholneurtEcusduj44A8lT+
      fvk6SbrAytwoR6YnSUd91toR547VaTd3iL2ADDE95+E7x/JsFd850qmArW6fTCrg5maTf/z3
      LomDmVqFmXzIsckKuUyaTODTbu1wZasLQDmXJuV7vHt1jaGX4vTMOLGDlJ+wM4jJp1MPxuYF
      AVdurNOMHDOlNG9cvvmlkx8eOgIcm6/z81d+sE9vm3yXHTlU4+L71wBYmq0xng25frvJevca
      6XSW7vYG4/MVLraG9IsDxocdNr08cdDmVqPL85MlWv2IkZxHgMednQ7nZqvcWb1NIenz+0u3
      mJ8cw3k+nShmfacHJGy2BoCj048YJNDs9Pjw9ha1bMAwdniex/0TqUa7Szwc0PQSUp0+7cTn
      wvFp3l+7h0siNrvRF26b55xzAL987S1+/cal/X835Tvnx6fn+esnG49dPlYuUU8nfLjR/hZH
      9c3QNYD83xrbOzQOehBfk64BxLQvDiBMszhR/JaHIvLt27sIPjTBT5cP8eaHn9ANQurlLLmR
      MSrZkGs3b1OrTxC1W7x9ffMgxyvyjXpwBIjihMj5ZIK9hSkX8bePb1Kt1UhaW5r88r2zdwqU
      JISpFJnAgyRmuzuk1R3gEkej0SRdGuPsoQpTYzo1ku+PB6dA19YbvP7P1d2f+ry31n+w0uqd
      Bqt3vqvX+SKPp0+BxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBM
      UwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBM
      UwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBM
      UwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBM
      UwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADEtvH/nSG2U
      C0tzBzkWeUYtz07gZTMHPYx98T//LKwf7nu16gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delay by Carriers Yearwise' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay for Top 10 Airports' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delayed Flight Count' width='192'>
      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
      zXBmDA3Qru8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Different Delays' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Different flight delays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Different flight delays_1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3Bl2X2Y+d34cgQeckbnND09OXNmOBTjSLQoKsu2wlqO8q7L63LZW7bl
      snblteUt71qrXa1UskWJokhKlCVSGorkkJMDZzidE9CNnB7wcrrx7B8XGe91N7rRje4Bvqqp
      abx3w7nvnt85v3iOJIQQ7LLLDkXe7gbssst2oi79o1Qq4TjObbuRYRj4fL7bdv1ddrkZpDul
      AuXzeWKx2J241S673DC7KtAuO5pdAdhlR6Ne/5D6mNUCZ84NofhDpEIKM5k8vYP7mLhyCTkQ
      Ixn2kYyFmC3Y9HW2bGWbbxohBBdH0xzouzvas8v2c9MCgOtiOw6ubVM0JO4/to9Tp4dItO3F
      KsxQKGQYGZ/hkUcexHEcXNfFtu0tbPrmKVcN/sOX3uQ//6MfQtdu/tF3+fBw072gWi6QbO+j
      nB7HNF3y2Ry+SIxyKYdtGITCIfoCAdK5Eu3JCLIso6rb2+mmM1nyZYNyzSYY8G9rW3a5O7jp
      HhlNdVEYvUqsfy/JkMrIZJp9g/0szEygtA7iVyEQCFAsFreyvbfE+GwOSYKFQpVUIrzdzdnl
      LuCmBUCSZLr7Bpf/HuzvASDV3r3muGg0erO32HLG00Ue2NPKfK4Mvantbs4udwE7xgskhGBi
      Ns9DBzsZT989s9Iu28uOEQDLdrBsh/72BJl8ebubc8tcGkvjurtpXLfKjhGAYsXA79doioeY
      yZa5l3MADdPi137/NQrl2nY35Z7nQyUANdMiX6zW/e7qVJb+tjh+XUU47j09eg5PZsmWDXKl
      XQG4VT5UAvD22Ql+/5un6n43PpenqyWKpirYLhjW9sYkboULo2naE0EWPgSq3HbzoRKAhXyF
      syNpHMfd8N3IbIG+tjiSJNHRHCZbqGxDC28dIQRDkxk+9uAAY3O7xvyt8qESgKmFIpZlM7NQ
      WPO5EIK5TJHWpOf7T8VD92znsWyHUtXgUH/LPSvEdxMfKgEoVUxeeKCf9y7NrPm8aljoqoJP
      1wDoSkXI3KOdZ3q+SDIaoikeYmL+3hTiJYQQXBpLY9u3rw7lenxoBEAIwUKhymNHe7gwNr/m
      u9lMiZZVkd+mWIixucL6S9wTnLk6x77uJJGAjmVaN30dIQTGLZy/Vfzm177PRHr73kVdATBK
      OV7+1jf56le/wl++9G0W7oHR0jBtArpCV0uMbKGCucrIHZ3J0dWyEpHuaApTKNX3Ft3tDE9m
      ONDTjE9XKRkO9k1W8U2mC/zGl97c4tZtDscVTM0XOTU8u21tqCsA6fkFDh87zgsffY7u7i5y
      83N3ul2bJleqEgn5kWWZ7pYYozO55e/G5wr0t8WX/46G/aRzFdx7LBbguoKZhSKdqRiSJNGW
      CJEr1BfkSs3EruMMWGJoYoGJufztauoNUSzXSET8nB9Nb1sb6gpAV98gV4cu8NbrbzIyMcHg
      QN8dbtbmmc9XaY4FADjc37I8qgghGJ/L07lqBpBlmbBfo1bbfhVgM8znSiRjQXy6l8KVSjS2
      A7788lm+8/3hhte6PJFhKlOp6zG7U0ymC9y/t435XOWmZ7JbpaENcPjgflI9ezlx5NCdbM9N
      k8lXaI6HADjUl+L8SBohBK4QlCoG4cDagvxgwEe+YmxHU2+ai2ML7OtqWv67qzlCJr9RPRVC
      cHkiw8lrqBazmRKHepLkt1EVTOcq9LTEaEmEmFkobUsbGgrA1MQ4Q1eGmJubaXTIXcVUpkRb
      whOAZDRIrmxgWg6Vmomuqeiasub4tmTojrkRKzVzS9StM1fn2LtKAJriobqJfablgHCZWShi
      WRtHVsdxyZcNetriTM5vT8cDmF4o0pIMc7C3mUvj89c/4TbQUAB0TSM3O87wNjVssyzkyst+
      fkWROdyX4sJYmpHpHP3tCSRJWnN8Mhpk/DbHAmqmxV+8foG//xtf54NL07d0Ldd1GZvN09u+
      Ysv0pCJ1o8Hz+QrxSIBUPEQ6t/H70ZksvW3xbXcHz+XKtCdDHB1o4dzIXSQAQghyVZMf/4mf
      oru1wVImQrAwO8nEzDy2UWHoyiiuEMxNjbGQL1OplBHCoVC4/b5qIQRzuQqxcGD5s2ODrZy5
      MsfEXGGNB2iJ3tYo87cplUAIwdD4PL/2X1+hXLP4xU/dz8WxW3vBpaqJX1MI+LTlz+KRILN1
      EvuGJzMMdiY50NvM0GRmw7WGJjIMtMdJxkJMZ7ZnBhBCMJct0xwP0d4cYzZT3BZ7pK4AuLbB
      0IVzvPrqawTjrXVPNMpZrkzM49c1Ll0epiWqcGn4CpmKxNTYFWZmppm4OowhlLrnbyWuK5AQ
      BHwr9T0H+1KcG0lzeTJD/6pRc4lENHjb9M6vfvcsX375LP/Diw/w488fZW93M2Ozt+ZxGZpY
      YH9P85qZTFVlfIq0xuULcHU6y57OJEf6Wzg3stGDd3F8gX3dTXQkQ6Sz25NPZNsOCIFP19BU
      mYBP25bZqG5FmKL5efiB47x98hInT5/myL7eDcfUKkX0YJSpsRGUQIBIPIoxfoVEWz+WU8Wo
      lZnOGzzct/e2F8XXTJua6SAhlu+hqzKyBOevzvELnzy+4d5hv0qpUtvyNgkhePvcBL/6C896
      iXe2TTysM7VQpFYzUNWbGxBOD89yZKBlQ3s1TaVQrpGQVwRjYi7PJx8ZxKerjE7n1pzjCsFs
      pkh7UxjHdZnNlLZlsYJ8qUrApy3fe7AjwanhGZ453ndH29GwJFLT/USjUXKV+q7CSKIVMXEO
      2R8m7lf44NQQvXv2MTF8CTkQJRFL0t8bZWximsGejttaFF8r1UhGA2iatubzAz0p3ipNEApu
      LICPhGSKVQtFUTbYB7dCqVIjEvAR8K/1OnU2R1go1uhMbX51PCEEw1NZfuSpgxt+w+Z4iGLF
      JJWIAOC4LrmSQVM8jCzL6LpKuWoRi3jqYbFcQ1cVggEfQoDtuEiSjKLc2aSAYtWiKRZcfp7D
      A628fmqM5x/cc0fb0bBHhiJR/H4/g+09db+XNT/HT5xY/rtzcZJI3n9izXGDodu/HOLMQonU
      ogt0NQ8d7KBYre/qVBSZcECnXDUJB7duzdLZbJnmxMa29LXFGZ3J3ZQAlKsmtu0SDW8U5OZ4
      iIl0kYFOzzs0PV+kvclbhQNgb1eS86NpHj3ivcfphSLtzdFFoRcEdBXDtAkG9E2361aYzax9
      ZwPtCf7wr08hhNjSAel6NBT7oaFhWts7aE7c/et5zubKdDRtXOVhb3czv/SZBxue19zAS3Ir
      pLNlWhPBDZ8f7G3m/OjCTV1zZCbHQMdGTxZAb0t0zTOMzeYY6FixeQ73t3B5Mrv896WJDAMd
      CQAkSUL3adsSD5laKK15Z8GATsCnkmtQ0HS7aCgA8ZCPDz74gLOXrtzJ9twUcxkvQroeSZKu
      ObV3NoeZ2uKMysl0kVR8ozD2tCWYSOdvqhTz7NU5DvfXX8UiGQsys8qTc3F8pYMD7O/xfOxL
      9x2eXPt9ezJEbhuMz3SuTOu6QWtPZxNXprINzrg91O0dmckhRtMFbNPAvAsyBq9HOl+lpY4K
      dD1SifCazrMVzOXLdDVHNnweDujYlleYvxmEEFweX2Bfd3Pd75PRAPnF0kghBFenMvS3r3Rw
      v09DuIJS1UQIQTpbpr1ppX2JaJCJbQiGzecqJCKBNZ8d6W/hzNU7m3dW1wZIdu6hK5OlWKoQ
      DG++Y9XDtBz+81feIqQrdLbEGOxsYmQmRyoWIBLy0d0So1KzCPhUNFVZ1mFvhGyhQnN84wxw
      Pbqawnxweesi3UIIptJedHM9iiKTiAaYz5Xp2IQdYFg2lZpJfF1nWSIa9JEr1bz05kV36Gp9
      XpYk+tsTjExn6WmNocgS/lWxhO5UhKGJjbGC203NtIiss7362uN85Xvn7qgd0NAINg0DZwuT
      JXVN4e+8+ACG6WC7Lghvrc5MscZ4uohfU3jp7SGKNQvbcfkbTx/kT185h65rJMJ+HjvczXy+
      jKooNEX8JGNBAn4dIQTFiknAt3kjrqUpwlx260Y/x3GREPj1+j/rYGeSyxOZTQnAlYkMfe2J
      hqqcqiroqkLNsMiXakSDPuR1nWdfd5KLY/O4rqCrZe29E5EgUwtjN9yercCyHWzbRVvnEg4F
      dKqGTaVmEbpDRnlDAai5Eo888gg+fesa4tO15aosYIPe/vPrDNZ//PnHMUybctXE79MoVgxy
      xSqjMzk6mqPMZYsMjc8zl6vw5ZfPcKC7ifcuTqFpKk2xII8f6WZ0Jksk6Ccc0Lz7CZZ98QGf
      hmHaOI67JW7AmmkjyY1digMdCd69MMUz9/ff8DVPX53jyMC1V7NuigXJFKoMLUaA14+e+3tS
      vHZ6HEWWOdi7VpVKRPyUG3jK1uMKgQS3PDpnCxVSidCG68iyzEMHO3jr7DjPPzjY4OytpaEA
      dLa1cuH8OfzRJpoSGyOpdwJZlgn4dQJ+Twjv29u+4Zjx2TwOp/ncRw7jCkFPe4KaYS3nw09n
      KgxNZjEMiyeP9fLf37hIzbBQJIlPPLYP03L4g5c+IJUIs7+nGUWWUGSJUEAnFNBRFRmBp0pc
      78XnS15+e6Pj+tri/Mn3zt/w8wshuDA6zwsPDlzzuNZEiJlMiavTWR7Y37Hh+1QiRL5c48Jo
      msePrnVThwM6hbJxQ2rHN964yCsnx3j2/j4eP9pDNOS7KWGYnK/vtgb42EOD/IcvvsFzDwzc
      ETWooQCk2rtw1SCKdnevopwvVWmNh1AUGQU8w2qVvvzxR9YGVv7Bjz66/G8hBH/vsw/xf3zl
      bX7pMw/g0xTmsiUujmco1UzaYgGaEyHeODOBpsokwz4eO9LLG+cmSUX9REM+jg62kSlUiQR1
      rkxlaEtuNICXiIT8XtTasNbo4Y2oGha27ZCMXdsOa0mEmM2UmF4o0pXamPckSRLdLTFODc2S
      jK6ddVVVQVMVDNO+ZpuEEPzg8gy/9On7uTiR4de/8CotyRCfffogvW2JhufVYz5XorVOrAQg
      Fg5wbLCFdK68poz1dtFQAE6+9xYlSyUQTdKaSt72htws0wslmm7CAwRex9jbk+L5B/oZnsxw
      3542Olti3L+/c/kYIQQPH+rBcVcW03rWp1KqGMxmK9RMm/cuTpIt1jg/Ns+Lj+/jt776FkXD
      JujXePRQJ5VFvXYp4HZuZI6BziZ0VUZXFRRFrjvajc7k6Gm7vr3Q0Rzh1VNjZIu1hsby3q4m
      0tkyah31LBENkCtWabuGAHh6u0N/Z5K9PSk+8chehqcy/D9f+z7/+hee25Bufi3G5oo8tH/j
      bL7EY0d6+Pobl/jbnzrR8JitoqEABDWVi6NTRM3b3oZbIp2vcLi3vovwRvnMEwf4N7/7Mg/u
      76C3fe1oJkkSkgSyvPKCl6K5+xej35995jAAv/W1d0glwvzyj/bjuoKaaSFLEvOFKrlilWK5
      RnM8xEvvDNMcm8K1HXSfzsOHOvn2O0PIiozfp/PDT+7n1NAM58fmaYoEKFcNhCvw+bQNhiNA
      SzzEB5em2bcuWW41Dx/spL0pXPf7pmiQmWyZtubGK3mnsyX8Pg1V8e6vKDJ7u5rY05Xk3fMT
      PHFsY75YIzKFCu3NjUf31kSYC6PzlKsGocDt3Vm0rgAU0hOU8ZOIRQkE648odwPeej8lnr7v
      xn/8emiqws9/6gS/+/Uf8C//1jN1O9mNkC/VlssyZVkiuGi7dKW0ZdUkEQnwvZOj/NKLDy0/
      A8D+7mYsx8UwbXy6SksixJ+/cYnO473kilW++f2r5IpVVElw4kAnU/Ml8qUaAZ9KW1OEfMVE
      keHyeJpYKEAiGsBxXFRFRlUV4pFAw9mhLRm6bgT2ylSOAz1rBxpJknjxyQP8xpfe4JHD3XVn
      l/W4rpcGHY80dltrmsJzDw7wl29d5nPPHrnuNW+FugJQMV0G9+ylp6cXWdWZS8/Rkro799XK
      l2tEQ7c+Sgx0JjnUn+IvXr/IZ5/ZfBmoEIJcqUY8fO0Bo7s1zlT69LLRuTQiq6qCqq7k+x/s
      byHoU3nxqYMosszf/uT9a65jWjaW5VCoeFN0cyxISzzE6avzIFyODbTyV28PYTkuruPyY88e
      5s9ev0gooJMM+3n0SDczmRIBXUWWJCaus2T85YkFHjrYueHz5niI/vY475yb4PGj9fPG1rc7
      6FOv63V79v4+/sVvf5tPPLrvtrpE6wqAX5V47XvfpWqY6LqPow8+zt3Q/U3LRpKkNSO0adkE
      9OsblDfC33jmEP/qd77DE0d76gazrkXNsNAWO/G1CPg0bFdgWs5ycXs9hsYXPP9/g4CgV+ap
      Egr6EELwwoMDPP/gIEH/ym/x91eVTwL8nR9+kFLF8GYOXaVcNZmYzTGeLmLZDl986QNmMkVc
      ZA73p0hG/FyayBAK+Dg/Ns/HHhpgaGKBcEAn5Nc89USCzz51kP/05bd4+FDXdWeBcs1C11Su
      59/RVIWnjvbwre8P88NPHbzO0TdP3TcQb+3mU5/uhBtw/d0pLNvhP33pTRzX5Z/8xBP4dBXL
      dhBCQlW3JpVXUxU+9dg+Xv7BVX78+aObOnchXyFyAzORLEt0NEeYTOeXMzjrcXYkzZH+Gxt2
      JEniM08eqPv5anRNJRlTl71KS3p7uWryv/7+K/zDzz2KJEk4josQAtN26GqNkytWeevMGK6Q
      ODU8i2FYmJbNM8f7+Oor51ElGJsr8N6FSSbn8gT8GgG/zoGeZmTJsxciQR+qInsxgHjwuv1K
      kiSee2CAX/297/Lpx/fftnTthkPQ+PA5zl2ZJNXayZHDB/FtwsrfaoQQ/NG3TjPQESfo0/jt
      P3+Pv/sjD5HJl+sGVG6FB/Z38NXvnedHnzm0qeKVhUKVzqbGLtDVHOhp5uTQbEMBEEJwaXye
      50/ceMDsVvBpCqridXx10SsFnloW9Hsp410tMXra4vS0rY0J/ZOffBKAmYUi//efvsPf/+xD
      pAu1xRRuhwtj84zMFihXDA71JJnNV7k4vsBvfvUt2pIhju5p5/zoPE0RP4logP72BKWqSTig
      E/BrHO5v4eTQDCfqxDe2goYCoGsK5VIFRZvnzXe+z0eeeGTDMUK42I6LKsuYlo2ua9i2hSSr
      yJInxa7roig3LzxCCF75YIRcscrf+9FHkJD4na+/z59+7xx9HQma62SB3gp+n0ZPa5ShyQwH
      NrGP2OR8sW4dQD0eO9LN//7F1/HrKh9/dO8GATZMm5phLxex3G4URcZ0BIbl1BX6K1NZ9nZd
      2xXe1hQhlQgzMV/kxCo3clfrWoH5ystn+NwzBzm+tx3bFSC8d5wt1picLxIPB/jOe8NkSwY+
      TeFIfwu/+40f8MaZcWIhnY89tIcPhmaIRwIkw77ltBJVkVEUCUWu71JuREMBsCwX06pRteGF
      5zZ2foCJK5cYz1u0BiUvuSnVwfzUJELVSUT8xIM+Cm6Avo6bd1Nencrw0jtD/Iufe2ZZH/6F
      T93Pb3zpDc5cneOpY9c3vDbLE0e6ef30+KYEYCZT4rFDG43EegT9Ov/sp57kd7/+Pr/39ff5
      mY8fR1MVLMvmzNU5vvnuMEcHWu6Y+ilJEs3RAMWKUdfgHJrI8IlHr1+p9VMvHOV/+8JrtCbC
      dLbUj19MzRc5sb9jOboPEAmt/Z1/5uMrBr9hWvzZaxf4Wx+/D9N2CPh1WpNhqjWT82ML+HSN
      77x/BaNmUjYdHj7YSb5YZTxdQNNUBjuT9LfFWShUCPh14iEfqXgIgafyNhSA2WyBttZmjAaV
      +tXiAllDRsPGkkIcPtzLyZOXae7ci5WfxqiVOTuT4YnHHrrpmuD5XJnf/vP3+Id/4yF8mrzm
      /F9+8QF+7Quv09YU3vKa1oN9Kb783XOYpoUs31gnnJ4vkIzuueG2qIrEL376BF979QK//gev
      MtAe5+zVNL1tcT775D562xN3tFY3GQ0wlc4vu3GX8FKoS6Riweu2JxrU+aVPH+f/+pN3+B8/
      /8iGqDN4W1XFg/oNP5siS7Q1hZnLlehZnE2OrKuN+JmPHfPa6jUYx3ExLIeaaWM7DpbtslCo
      UJnNIQQc6E3x0rvD2JbdWACOHbufWq1ErlJfAGTVRzzs58pCmphf4/TpyyQ6ukhPXALVRyIa
      4uieFFfGZ9jT035TNcHnxxb4mY/dR0fLxlB7WFX5t7/43G0xjsKqykBHkuGpLAf7rm+Iuq6L
      aTnEwoFNP+OPPXeEk5enKZQNfuTpQ8uxgztNezJMulDb0P6qYWE6LuFQ4xyn1eztaeFzHznE
      f/nT7/PPf/Yp/Ks8dJ6r2CAaCd5QzGCJ43vbeffCNAOd19ckhBCcGp4kGvLT0RxZDqT1day1
      tw4svte6byszOcQ3vvMmNcMk3t5HT8fzG47xBcL0dIfo6upCkrxlLlRVpbM5CbK8nDUYvYUV
      0T5yf/81f/TbWcj91LEeXj89dkMCYNkuluNuKh1gCUmSOL7v9hh4m6El6UVf13N1KkN/g3LM
      RpzY30G+VOO/fPUd/uHnHqVQrvHexSnevzjF/u6mTXV+gPv3tPF//sk7N5SwNzqT5WuvXvRm
      jUwJ03Y40JPiZz9+X90ak4YFMQ8fz3Lyapo9HddIdJKk5dxzTfMurqwbQW5Fj91OF+zBvhT/
      9a8+oGpYaxajqke5ahAL+TZVxHO30RwL1l0k6/JEhsFr9YE6SJLEcw8OMpst809/8yVa40Ee
      2N/BL37mgeX1WzdDPBpECMgWqnVLX1dzbiTN8w/085ETXgatYdr8+h+8ykK+QqpOcl3DN+bT
      dXJzEwxP3lwh972OLMvs72nm9A2sXT8+V7gjmYu3k0TYT7lOcfzQRIbDNzAL1uMnPnqUX//l
      F/jnP/cMP/ToPlKJ+rlIN8KR/hTvXZy65jFCCM6NpDnct2Ij+HR1eZXAejRYGtElXyzT0tLB
      E48/Wu+QHcGTR7t58+z4dY9LN1iV4l4iFPQxX6iu2TXGcV3SufJNjdrgzQR+n7YlM/nDhzo5
      dWX2mosKWLZDsWyQXNfeowOt/GCofulrXQGYu3qaqr+DT338eU5+/51baPa9zUBHkom5/HW3
      EppZKNF2g0GwuxVJkvjhJ/fzH774OsXFmSCTrxAL++/4oln1aG+KkilUqZmNvUeTc3lSidCG
      9JG+jgSzmVLdBQnqb5FULXPq3df4oz/+KqOz98bq0LcDTVO5b08b756fvObIM5crNyzwuJd4
      9sQAHzkxwL/7b6+QzpWZmi/S08Cff6dRFJn+9jjnRxrvJnNqeK5u+ogiy3Snooyt2jVoibpG
      cM/hx/mlw4/fQnM/PHz68f38+z98jfl8hc88cWDDaLi0ynE9n/e9hiRJPHG0h0TYx69/4VXa
      miI8ebR7u5u1zMMHO3n/0nTDtIgLY2l+7uPH6353355WfnB5hsF1CYIN1wX6whe+wBe+8AX+
      9C9fvsVm39vEIwH+9c8/S6Vm8W9/77uMz+YQQlAo13j1gxH+4xdfpy0ZQr9GZue9xqH+Vv7x
      5x9jZqHYcD2i7eBgXwvnR+frbqdkmBbZYq1hFu+RgVbOjcxtmMkbukF/9MUEb7zzHlpkewri
      7yZ0TeUnXzjGpfF5fvNP3yXg06jUTB4+2MlPvXCU9mtUUt2rdLXE+PW/+7G7Qv9fQlMVWuJB
      JuYK9K2r3LsylaWrJdowfTwa9mPZ3o5Bq6vMGg5bp86cRSgKsn33b5F6J5Akif09Kf7NLzzL
      Qr5MSzLS8Mf+sHA3df4lnjrWy7ffu8LPf+rEGu/SqeFZjg22NTxPkWX2dTdzbmR+TWFPwyfs
      6e5jsLsDJXB3GEF3C7qm0t4c+9B3/ruVEwc6GJ3JMT2/srn20vIx69c8Ws99e9o4c3VtXKfh
      W1QVmzNnLzI1dWt7W+2yy1aiKgqff+4wX/zWmWV9vrpYoHO9KPHe7iTnR9K4rpffJoRoLABG
      pYKQVQ4e2LeFzd9ll1vnyEAbjusuR3dHp3P0tMWvOysHfDqJsJ/ZxW2hLo3NN/YCXR6fpZDP
      cfHy3b88+i47j5/86FH++DtncF3BmatzHBusv5fdeo4OtnJ+JE2lZvJf//KDa6wOvZDnvkef
      JhnYmoLzXXbZSrpaYvS0xnjn3DiXJxZ4/oEbKx893N/Cl75zltGZLB+5v+9aNoDDH//+f+Pr
      335tyxq9yy5bhSRJfP65w/zRd85SqprXXT5yia6WGNMLReayZZ5/cPAaq0NXDZ54/uMMtN+9
      yyLusrOJhvw8e7zvurlaq9FUhR9/9jAH+lLekpSiQZLL1NULvHfmMv5oihee2ZgR6lhVLl4c
      whQqqYjGbCZP7+A+Jq5cQg7ESIZ9JGMhZgs2fZ0t5PN5YrFdl+ouW4tYLIG82e1n684AtVKW
      y8OjTE9cpW1//VxwWfXT19PJlckFSobL/cf2cur0EIm2vViFGQqFDCPjMzzyyIO3fZ/gXXa5
      2b5VVwBK2TmmM0UkCQ4fqr9MoG2UuDqZ4dCBPVw4c4ZCtoAvEqNSymEZBqFwiL5AgHSuRHsy
      clv3Cd5ll5uloQoEYJQLnB0a48R9GxcotYwyl4dG0AIR+ruaGZ2cp7+vm4XpCZRwE34VAoEA
      xWKRaDS6qwLtcldyTQHYSnYFYJe7kd2Ell12NLsCsMuOZlcAdtnR7ArALjuaXQHYZUezKwC7
      7Gh2BWCXHc2uAOyyo9kVgF12NLsCsMuOZlcAdtnR7ArALjuaLc1PFq7NhXNnUYIJ4iGdeCzE
      XNagq/3uWV5vl11Ws6UzgFFeIJjsQbKqZDJzfHD6EqnUbknlLncvWyoAkqximgaW7aD5AjRF
      /JSr5lbeYpddtpQtVYH0YAKfO0wo1UbYJxOOhFnIFCDi38rb7LLLlrFcEGMYxvKScbeDUqlE
      OHxvbyO0y4eP5RlA3uQW85tFlmUU5eYq93fZ5XaxLACadntXgFNVFV3fnk2gd9mlEbtxgF12
      NDtKAIQQ5Ko3vorYLh9+dpQAWI7g25dzWM7tM/Z3ubfYUQJQtVyqlkvZ3BUArCQFOasAACAA
      SURBVBrMnNruVmw7O0oASoaDKyBf3V2ikfIcTL273a3YdnaUABQMm/aITm5XAKAy780CO5wd
      JQBFw6En4SNTta+58/uOoLIA1u4OoDtGAIQQFGoOqbBGzdq40fKOozIPrgk7fCDYOQKA5wWK
      +BQEEra7s188dg0CTWAb292SbWXHCIDjCiQJFFki6lMo1HbwLODY3ujvj4Nd3e7WbCs7RgAM
      W6ApErIkkQiqZCs72BCu5cCfBNUP1q4A7AiKNZuIz0vGiwdUMjs5IlyZh2ATqD6wytvdmm1l
      5wiA4RD1e7l/Mb+6s1WgJQHQwuDs7IKlHSMA+ZpDWPdmgJAuU7NcnJ1qCFfmIZgCPbTjXaE7
      RgDKpkN4UQWSJAmf5gnBjkMIqGYgkPRUIHNXBdoRVC2XkL7yuDG/QtHYgYawa4NwQdVBC+7O
      ADd7ouvYXLl8gel0FrNa5NLQVRxXMD0+QjpbpFwqIVyHXL6wle29KWxHIIRAU1YeN+5Xmd+J
      niC7BooOSKAGvb93MLdQFC/o6O7j3LnzZHSNno4kl4aGkZUA1sQogZAfTTgEUz1b19qbpGY7
      +LW1sp4Iqlye34EuwGrWU38kCfRdAbhpAZAVjfToFVB8yJpKOBLGHEsTb02h2GWsWpnZgsmD
      fb5t3yi7ULUIqNKa+wdUKFbte3bz7vfGS9zXGUKVN1fHLRVnkfwJXNsGVBSjiHOP/gZbwU0L
      gFUrki9bKLJKPKjxwelh+vbuY2L4EkowRiLeTH9fhMmpWfq72+/MRtnFGaikofXomo/Llkk0
      oK25f1ARmC4oinJbFwO4HRRqNhcXDAZbQjSHNvmbmnmI9SKrKiyqhKoig7RjzME11P31LKPM
      e++8y+TcPLFkG48++jDhwNqCds0f4cjRlQ2027u9/yeO37/muP5gdIubfA0KEzB3BlqOeFP8
      IiXDoSm0tuhfliTCPmVNfOBeYaZgEvUpLJQtmkObXMygMg/tS+9I8uwB11kWhp1G3Tc/NT7O
      wJEHeCQeoVrMMjI2zqH9g3e6bZvHLEFxElxr0dDzKJoO/cmNi3PF/AqZin3PCcBUweRoW5DJ
      osn+luDmTjbLoK9an0mSFwXg9q4KcrdSV+x79xygKezDsgxMtHuj8wMYec/AK04vfySEoGq6
      BPSNaxIlg9o9VxxjOi4lw6Jr+L9RKm3ShWmbgFgzOIDwBowdSsN57+TJ93nvzdf4q5dfvZPt
      uSVco8JVeS8iN7L8mcDLBK1nLCYC6j0nAPmqTcLNoddmUd3q5mobajnwxVbUQ0nyEuKcXQHY
      QGcqSVWL89CRfXeyPbeEY5a54HQhsqPLn5m2QFEklDoCEFm0Aba6Oux2plhM5E06rCtIskqz
      ZjJT3ETnrWa8HKDV6OEdHQxrKAC241LIZ7Cte2R0EC7YBq0dnZQr1eU036JhL+cArUeSQFck
      qlucEvHNi1nGsrUtFywhBHNFkxZ7ClqO0axWWajUfz+zc3NUCpm1H1bmIbhurwbVt6OLYhoK
      QD6fJTc3wcnzQ3eyPTeNsGoovjBH2kLklKZlO6BQc4j6GwmARFtEZ660dULuuIKa7XJmpkx6
      C68LXk2DsGuEVAli3bSqJeZL1gZBc1yBM/YG/rO/7wW+lqgubJwBtIBnO20HQkBuzDPCt4m6
      AiCEwB9N8okf+gSH9g3c6TbdFNVyETQ/uioTbdsD2SuAlwQX8TX28rRHdcayWxcNrZgOMb/C
      k/0x3p0obqmNMVM0aRHzEG4BfwLdrSCEV+q5moWyhajmuKCdgHNf9Tw/q5PgVqMGtzcl+uJ/
      h/L8tt2+rgC4Vo3vfuslXn/zLTKleyNfvFDIIy+69yKt/VjZca8Q3nCWC2HqkQxp5GrOlunt
      ZdMlpCtE/SoPdUV4c6RAdYuK8KcKBh3WKCQGwBdGqmYI1SnvHJqvEBJlRgMHcHufgdNfBKPo
      eQSUdQsU6+HtK4sULtSyUJzYnvvTQAAUPcDzH3kax7aYX8jUO+SuQghBuZgDfwwA2R9Bdi0v
      Kc9YSYOuhypLpELalqkrJXNF4FoiOkfbg7wynMd2bk3AHFeQq9g0iwWIdXuZnI5NW0RjbtUg
      ZTku2VKVcDCApCiYsQHofATO/jHIdSK+im/78oHMCq6kIFa5re80DW2AZGs3J06cIKDc/Tnz
      jgvVchZ8iwEeSUaJdZCevILhuPjUxcd0Hchc2XB+V0xnPLc1nSBfs9cIXGfMRyqsMXKLalbJ
      cAiICooie4Usig52lURQY3aV8I5mDTpDAlXTCfsUSqYLbUeh4yFo2r8mQg4s2gDFW2rbTVPL
      MU0ndvEuU4EAjEqB4eFh2rr67mBzbo58zUaxKqCvSrtIDCDlR1b8/8KF4W/BuS8vBoRWaF00
      hN0t8NpUzLUqlyRJ9Cf9TOZvzdMyVTBotyeQYos5J7ICikpccyibnitXCMFIpkZ/0ARfjLhf
      JbvkJWo7Bl2PbLywons1AttBLYsb7UK4JqXy9qhhDQVgfHwUWVGpVu/+iqHZoklIlMC3SgDi
      fXSKKTqjumcATr7npUpEusBcO+JpikRIv/WlUoQQlAyX4Dq3azygUjYdTPvmZlMhBNMFk3Z3
      EpJ7Vr7QI6h2hYAqUzIciobX/igFCCRIBFXyS88kSRtHf1jJBdoOalki8Wa0SIqLw0Pbsmp3
      QwHwyTLp+Xmy+a2bHpcKU7aa2aJJVK550/kSepBY0Md9zcD8JZg/D/s/A6GWta5BvFG6Paoz
      nru1UdqzozdGnSVJIhXSmSrcnEPBcgRV0yLiFiDcvvKFLwLVBZJBlYWKxZWFGr0JH1ItB4Ek
      cf8NRLoVDZztiQOISoZQrAkp0knATHNy6s4PtnX9g5nJIWZLFo5lYppbYxw6ruDN0QK24xL1
      qaQiGpN5E12R8KkyfUk/82WLgCbjUyQifhVXCGRJ8gYvqJu27LiCkrGY0LY+oSvSAVPvw8Il
      OPLjXhlgMOmlTDftWXNoR1TnnbEioi140+nRluO1t16Kfm/Cx/m5itdBN3n92ZJJm1JC1oOe
      6rOEPwFGiZaIzmTeYKFs89zeOMxnILkH/2LdsxCi8T1l1RMAIerPEKtYGry2In1cCIFdyaOG
      EiBLHCi8zXdrNmPZGj2JO7eraF0B8IfjRKN5otE4vlBsS26kyBJPDaxcy3UFLWEN2xHUHIEi
      gSsE82ULw3YZSPo5N1vBdASyBHuaA0wXTAzHxa8qtEY0VFmiULPRZKhIIfxCQV4UGsDr5Of/
      BO77m+BfVI8CzV7K9DoifhVbCKrWRhXmRqnZLgGtzmaDrkNTUKViujgC1E30HyEEY1mDfWIC
      Ev1rO6kvAuU0zS0ar17J0xXzeQa/WQI9jCJ7g4vXrgbPJEkrsQDVd822XJ6vki5ZHGsPEbnF
      DFrDcsCqoGlBUHTkapZHB8N8Z6hAW0RHV+9Menbdp6gWs1wZGSUSibKnue223FiWJfyyAhos
      JecONAXWHPN4f8wz7hb/ToW1xUirp2aUTIepgolPdhnX9xAqWlxd8LwtAjjW1sPF1E+j50Lo
      pRL9yQBZM4yvKuOr2oR0BYE3OioStIY9NWVP89p23CjFmk14fdBNuHD6iygdDxAPdDJfMmmL
      XrujrcZ2BYWaTdKagvjza7/0J2DhMpri1TbsSwW8kdyqeG5SIOJXyFZsArFrCLXq9xwD1xAA
      VwiuLtQYbA7wypU8rRGdI22hDaWmN0qlUiGiBT0BlFWQFYKyxZ7mABfTFY6235ktdesKQKK9
      n+MHq4yOT3DqzAX29HZuOMaxqly8OIQpVFJRjdmFAr179jIxfAk5ECMZ9pGMhZgt2PR1ttx0
      AyVJYmnMkxUJTQH/oqYT0mWG5yX2xy2aM6OQOLE8fS4Jzv0D7ZiOwHQEigy24idn+bHmK3Qn
      /IxkalRtFyEgqMmcmamRLln4VIlEQCUeUKlanivVr8qLI3x9NaBoOER86zpE9iqUZyE7Qk/r
      AGM5Y1MCMF0waQmAUilBaF0ejy8GRgFZknh+bxy/KnuZnYseIoCmRUO441oTuaIuBsMiDQ8p
      1Bx8qsxgk5/+pJ8rC1W+fTnLsY4Q3fHNqyy5Qp6Eb/E8SfJss9IsA029vDyU42j7tc/fKuoK
      wOSFd/nat96nu62ZSHP9ii5Z9dPX08mVyQVKNZf7j+3h1OkhEm17sQozFAoZRiZmeOThB29b
      TbAQkKvYhP1FXDWwWOe67gElUFUIqhIg6I77UKRLOKmHQZVJdASXr+UKwWzR5FDKh+0KHCGw
      HYds2cRyBJYj6Ir7ODdXRUJCUSQOtfi5mjWRJYn5ssWBlJ/xbBVNltAVCI2+DYMvooy/TqJH
      4v2iiWlZK2radRiar3JEncYNtuA667w1soZilnEsC02ScBwHqbyApIWXf4uwJnElY2Dbjbeo
      lWUdYZQQ/mTDY67MV+iKaTiLbehP6HREVF4eLpAKKpuuTS7mMghfbLkeWQq1IeUnkCPdJAIK
      FcNCV25/qWpdAeg+/Bj/9PBj1zzRNkpcncxw6MAeLpw5QyFXwBeJUSnlsAyDUDhEXyBAOlei
      PRm5LTXBFdNBUSR8ooIUTHp1rjdCMIVqFcC/cZhJBDXKNnTEVka1VGTtCNce91SkpVkm7Ncw
      bcFC2SIW0MhWbQqGQy03Q0vwMFm3nZz0EGK8SMV0OTldwxECnyoT1mXaojrFxRE2oHn/gWdT
      VCyXlD2E1Hp04/MJAaofVRKgLk6LVhECK79FMizzwUx1Q+1zoWbz/kSJpwdjyL4oCMsbKerg
      CsF00eJwWxh1lW6uKIKWiM5MyaGvTsVdI0zbxSwvICcSK88U7YDRV5FVld5kgMmCxd7UJqvd
      boKGPWbs0ineOnmRULKdTz3/5MYDJBnJNRi6Os6+/YOMTs6zb7Cf+ekJ1NZB/CoEAgGKxdsX
      ZZwrWbRGdCSjBKHUjZ8YaoFyGiIbBaAn4WOmaNIRu76asqSeBTSFgOa5QcM+hURQ8zrn1Cuw
      71N0h8NQnoCoxEjTANmKxZGWEKbjZY4ivEhvumxRs1z2NAc4PV2iZLiYjsO84TAWSEC5iK7K
      tEY0ZLz7+QjhMww0WfPU6UUX6BKaIoHwbAlt1Yh6MV2lbDqcm6lwRAtcc5XohbJFSFfwrdP3
      JUniQEuQt0eLm/JuLVQsQm4RAl0rHwabPe+c6xL1K/xgsrS9ApDJ5Tlw6DDBUH29UPOFOHT4
      8PLfg/3e+j8tHd1rjotGF1Uox4LTX/JclaEUxPu9+l014BlssW5vzyrN7+mw0iqjbdUPK4Sn
      ioxkalxMV3msNwoTOUhuIms1kITSbN2vUiGNU1Pla7sO6+C4Anf14lsLl7yXuiSY8T7IXKGt
      /wAX5yoc75QJ6BJLqvl6r8pH9iR4eSjLI4E8TUUf4c4YtiMwbBddlcnXbPJVB0s7SCBTxRdU
      GcsZuKUmfP4gg0WT0WwNnyJ7O2MaDhXLIqjJKLLETMHkub1xvjuUoyugERf1ffBCCEazBr2J
      +gNC1K+iKRLpkkVLpLGatZp0ySLuFpZztwDPDvFFwSjg98fQFZlM2SK52aL/TVJXAGrlPJov
      wIUL5wkm2tjT113vsM2haHDk8567zXVA2N6/7RoYBe+/qe+vbNzW/RiMve4lb0mql89SmiZf
      sRjKy/jibTzbESMs5bxcFmUThliwCdLn637l1xR8qkzZdK+ZRLeequUQ1FblHI29AQc/uyK8
      0W4Yex2/6n10vdUoDNulYro0uZeQm/d7bkxtxUyN+lW640B1zvMKNLXQ3xSAU9+Ank/i+DQi
      PgXDdikYDvNlG9sVzJYsZgomrWGN01NlFFniu5kkx5slytNlKpbnyo0HVKI+hZrtMpU32Nsc
      wF3cZGT9wHCwNciFuQqpsHbdQUMsuroHdXttcT5AuA3Kc0iBOPtSAS6lqzy6HQLgWCZaIEJ3
      dze+cHzr7iZJa11tvnUG9t5PrPxbCK8DCQdch6whOJV1eKRD5cFkBTQdzHnITHkzSfoMlFth
      7qwnXFoQep6E2ZOLs4zfSyOoFbx2VOcXUwAEIK9JFWgJa6RLJmHfjbtDy6aLf8nXvnAJwq1r
      RzjND0hgVelN+Dk/W+HB7kjdUk2A8ZxBb0xFnp6AwY82vrEv6qUUg+dyNcugh1BkiaCuENQV
      OmM6ZdPhaHsYIQTfKVvsSwWIBzVvhB/J0l27hN3Zg2G7mLaLJEnUbJeh+SpIEkPzVbrjPs7N
      VmDRdXxfe4hL81V8isx00SRf89I9dEVCV+XlJEQviOkJju0KTFsQlA3P/bqaaKf3Lpv30RnT
      +WCyhGGvSma8DdQVANOV2bt3P5LkSWwmkyGZbOwhuC0sd0iZjAFvjhV4fE8P/uC6EaF5H2SG
      oP9Z7+/WQ4sunUWPUOsxsCvezCJcKIx5gSKj5FUjpc973wMkBsG16culKTgauD2e69EsekKk
      BhYzTjfm1ZSX6g6EgPE34cCPrD1Gkj1DrzDJ3tReTk6V+etLWR7tiRIPrn0NQghGMzUeiRc8
      FUq5hnHvT0Luqvdv1/ZUR2ljLtLEYppHoeYggFhAXfyZJXpbEqRPLhDqExtmpbGcwdG2EP1N
      XmddUnNcIRACDrUGMWxvZhierxLzKxQMB8sRtEd1FsoWBcNBlqAp6AUvy6bFGekA0ZxFSxhK
      pic0Pl8LvukfIC2qnz0JH6OZGvs2u/TLOq6lztb9Zd1aga//+WtUDRNd93Hw/ke40/1/ifmS
      xZujBZ7sj3rG5Xpsw+uYq5GklbSI9b7z7kXvVnnOG6H3fQIQK7slujbhZIWzl2fp0MPIjuWt
      OOeYnh3TfMDr4GJx9uj9CMy8T6QiSOp+UNpX1DrHAn/EU+EAYj2Qu4rcvI/jHSHmyzqvj+bp
      S/jpTfiwFo3isuniCEGocBFSB6/9A/kiXqUXeIasom4QzrCuUDa9RLMrC1X6k/41HULS/Chu
      hbfHCjzRH1secR3XS8I71h7yDqzmvEEkmPTcuBKEfSphH0T9Ct+8mOVoRwJ91SJb3XFvxl+q
      Nzo7U2ZPyKCtamMqEqbjuZ4tx8W0ZAZLNqcvZ0GScISX6Vs0nMUZRaIr5qNsOvgUGU2Vlu8l
      N4jN1CyH7w3n+ei+RN3Ztq4ANHX08+kX+6/9w98B0iWTt0aLjTs/eFFP9caML+E6WOf/Cu3g
      J5ACzV4nDSbxRvTFg2QFWfVhhiUySpDmsA6RddHw2OcWLygAAf5nGBtJsy8hQ+4cxHqhNO0F
      l8Lt3mxTmPCEyCjA3Hmk9DlSqo+P+WKcK/Zy6uoorhrAFwijx9t4oE1DunQVep+69kNpwZWi
      dqPoRYfXdYSltALDcpksmBxqC629hqKSDMh0RHVeuphlsMnP/lSAbNUm6ldW0hJGX/Fmm32f
      2eB00BSZzpiPkUyNfau8N0udcskBtVCxOa4XSMgSLHralmYjAEo6z3ZYiFALjgvfu5KjKaQR
      0mVM25t1ZosWhuNiO4K+hJ+r2RrG4sIG7VEdhEvZBr8qUah53rXpgkEioKGr0ppVwhvOrRMj
      w1hWlXNjeT71/BPXegW3DccVPDMYW5mWhcsG9cOqgt44grnmepOnML7zq8ihFGqwyYvQJvrq
      HtsV8zFVMD0BaIQkARJCC5J2oxyOR2HiO3DoR72ReTXiQe//H/ye5/Fq2gO2geYY3CerEEuA
      ZYA1D/EmGPrvnmp24S+g62HPxnFdL3050Q+4XvqC4vNUNKvqCZke9lQhee2rDeky5+fKtIb1
      jTq1JCNJMvtTfgaaAlyYq/DSxSyK7Lk5vfYLb1WJIz8Bl7/hFdh3PLCmwmx/S4BvX84x2BSo
      O9o6rvBqtLXSxtrkJfo+Ape/gXTfz6IqKr0JP7mqTV9yxWA+0r5WgFsi3uAoAKp5zNN/jHH0
      b1EyBefnqhxpC3F+tkI0oCIE9Cc8W0aSpMYCMD87xqmrOfq7bz6N4VZZkzIgBIy/5blIVxd2
      GIWNna0OQgjsy9/C9+Q/w/zgiyhP/yOkhYsNj2+P6rx2Nc/RG3CHikUNSrXKnv693rsBK0Ib
      bofSjCcAisZyJpR/Xa5CpAPajnuFLOAZiK7lzSKyuljjmwer5A0M2RGYOenNhpfL0HLUU9Uk
      CbQArf4T2OPn6G9NwnwYIp2LSyL6FmdQGUk46IrGsfYQ+1JBxnM1umKLA4BreQ8ZTMHRn4JL
      X/eK2fd8bDlDNaApdEZ1hheqa2aBpd//ykKVtoiOWs1A5ABCCNz8LHI0hbSU5Rpp80o4r7wM
      gx+lK6bzveH8NfX4pc8lgPIM/uoMfqlMTQmRCqn0JnwUDJtHelacLq1RH64rGgtAItnB5x54
      Bv/dsmaqY3huUtUPnQ+vdCgjf0MCgFHGmT6N7+lfwZl8CyczhlpJNzw8qCteoMqqv6ziamxX
      IBAomUueUX4tgUn0eytWrEvHXoPreIb9avVHUb3/lmoe9NCKarYw5AX1QilvcIgu5m4ler1Z
      w64RLblMFLuIhmXPIWAbkD7nrRbnmJ5X7MrLYBZA1vCHWtkbboWJCS9blEW7qjLvzUJ7Pg4T
      b8OZP4aDP7LcroOtIb59OctAMoC6KvBmOoKL6Sov7E3A+cUlLM0KlS/9NL7H/gH6sc+uPGvz
      fs85MfkOvs6HkWVpcYurG4j0l2Yg2ITIj3Ox3MP+liCxgEqx5iyn1y8hy9eYAcziDP/vb32P
      vQcP1Y8E32lmz3gjYm7EewlLASazBKHW655uj76N2v8kkqqjP/SLGK/9J5S+B1nTVYWA4pS3
      gbQe8rwYFZuu6whA1XIJagpS5jJizyewznwdKdSE2vvQysi2RLTT6ziN8u+F8F5+sHnjCg6N
      8IW9jmxVNqqDsgx6kJa4IB7ej7T6WUJPr/z75Bc8B4EeXNxGSSxupbS4l/Dcae/ac2e97+2q
      J2wLl+D93/F2ne9+DH9+jCOGSeVqiGhL7+LsIHF1wWVPIoBPEZ7KpoewTn4F7fDnsc78CWrf
      Y8jRRYGWFTjwIpz6AyRflPZIDxM5kwOtNyAAlXnoehwjPUxZ7SIV0pAliYhf8ZaVXGdLNrxi
      sr2PA4cVDvZ3NTrkzuFY3vR+9Ce9kSZ9fkUAbmAGEEJgXfgGvid/BQCldR9oEZzpk6i2uWJE
      m2U4/zXvesd+ivaIzmjWoCt+7bSIQs0mTAWsKgIV64M/RE7txXzn/0Md+Aja/heQo4tCqoW8
      53Gsjca7bcDQN729e/d96roFKsv44p4quNix6qHI0rVnMm1xtxh/dK39sHS97LDnJm5at1Dy
      Q3/Hq7gb+a53bOt9dMYKXLl8nojxFpJVoeRLES1V6Eg1w1wCqhnE+a8hL5xDve9nEFRwT/0R
      cv8TnpetPOe1Z+CjcPkbdPV8gvfzYQ60Xscd6rpetd/efTgjb9M/6EdetEVaw17d93oBaKjg
      jI2NYVVznDxz7to3vROkz0O0yxudmvZBbnRF8baqy7nvbjWPkx3fcLoozIBtICdXItr6g38T
      Kz284kIUwnuJvU97+vHo6zSHNLKVtSuvuULgrltDqGy6RMtXITmAM/YW6t4XCPzQvybw4n9E
      0nxUv/4/Y13+rnewJHmzQH50MSK++Bz5cTj1B1409PDnrynUQrg4C2MIZzHW4Yt4U7+6rmJs
      M6iBa68PVJrduKrcEk17vSDmua/C6CuoV/+adnmeWaUDHIMz7MPd+0noewoSPRDpwNabsLUk
      cvMg8oO/gOOANb0Yna9mPKFKX4D+54ld+kPun/0K7sk/gvwkXPoGDP01jLziuagzw95qH4UJ
      kFVcWUNSNAZDxrJ7uzWiM1M0N5TkNpwBjhw9ytS3vkfHnuv4oW83woXJdzzPCixGj8VyxBPH
      AsWLaBov/3uc9AWCn/0vK9MpYA29jLrvh9YYUUr7Qcz4IE7mKkqkDfITnhqx75PgHoDTf4ge
      78WvxSgaDqosMZKtMZY1EEJwoitC62JQqGDY9JYuIwY/gf3d/4j+8C8DIAdi6Md/DHXfR6n+
      2a+gtB70ZoKWwzD0Eoy8Ciwaoq4Dez+50eW6/uewLYw3fgt75BWU9iP4n/9fkHwxmHx3oyG9
      GVSfp07Ww7E8Y9vfYLMTyVuqkaM/AeUFiHWhC43vXc7ydEuUQ+l3icR+zDvW8BYvsM7+Gb6n
      /yeQVSR/FO3Bn6X6tV9BOfQicudDay8/+EMUh89S6PpheqN+z35wTM9Lpoe8dteyUJiEQILy
      2EkwawQvfNmLvST3Ep05xWDJAbkZ2u7z3rcWaDwDnDr1AfHmFGK7l87OXPX0Yf9iSoYkebPA
      /OJo4XoCYF99EyQN//P/kto3fxWxmFMkXBf78rdRB9baMZIko9/3Y5hn/8J7xivfgsGPeW49
      RYP9L8LQX9Hut3l5KMerV/Ig4Kn+GI/3xTg5VeLkVAnHFVi1KkndAcWPW5hFblq7MaAcTOB7
      4h9R+9aveveKdcP9fxuO/yzc97Neysfxn7t+5zfK1F76V6D4Cf30HyLHBqi99K8Qih9Kk16B
      zM2ihxovkGUUPTXretso+eOeiqT68GkynVGdby404XPKSOU575jqAk5xARQ/cnLld5JDTej3
      /zTG/9/eeUfXdZwH/je3vALgvYfeG8ECgiTYSUmkLNm0KFKWZTW3lZ11oije9frEm7PZtX2y
      Jyt5rXiPSzZrS3Fsb+Io3kiWo94tsUoULYkCRQJgAwgSRO/lPbx62+wfFwRBEmATWGzhdw7P
      4cO997tz585355tvvvlm96NnJ04oXEZZboCMgb3jZfWDP+QO/L0B16FQstqt14wi6pz5JKpu
      c83kebdCViVK9afozlrHWLAGFN11GaXCUyvASE8rBw+30tHZSU//1Uta5KYzeQ/K1p1uD+fV
      uGaRmQDNh7QMjD3/hHf919BKV6DN3UBy549cN9tAC0qoBJF2dkyTmjcf2VuH/f4v3cqbHFLt
      z4KydSwIv8lNVSFurc5iUWE66V6VkF9jw7wsbEeytXkE31gbenYF9uBxBcWj3wAAGFFJREFU
      1KKliClCF9SyVaiFSzHq/tX9g6K6iqb53Jd4HtPFiQ6ReOXbqKVr8K57AKHqeNZ8GSVvIYlt
      f4O0DPB/iLgtPX36kOj4oBvbdJEsKkxnTXkIb9XHoP1tAGQyjNH0Kp5lnz3LraktvBWsJKm3
      /x45OVWLEDBvE4HwodM2PzmLsR7CWg6W7ZBbVAHRfrcNKSpoXoKZmfTYAddpUFALxaumVoBQ
      fhmFRTmsWb0aTV7F3KCRTkCcHevvC7l/j3SDN4Cx9wm0+Z9EBNw5C33ZPQCY9c9gHngWfeHt
      U/qQRVo2vtIVpBqexMlfevags6AWVfeSNVJ/9stSBStKMlhWnEGxeRzyFmG1bEObt2HKRxFC
      4LnufuzO97E69l1UNTjhbhIvfxN9xZfRl951yu8tBJ5V96Et2ESi9V3M3qPYQ61I4xKy0Gm+
      6XuASCdkFCHNFM5ox2n/ZHL69R5eTaEi2wfZc12TdawPGenB0YKo5avOOl8oKr5N30EJlRB/
      +mtYXQ1I6c7wCs1LS+4mjEMvTquoTnKUPQMaS4szUITiflhSp/apLsjQ6Rs7vT1PPQaQDl6P
      l5GRUZbULpv6FCmJR4ZR03PQ7DgnugaomlPOYE8HakYOfg38fh9jYwmCwQywTVJ7/h8oGkpG
      HkqoFLvvoDtxpChoFddjdbx/qmAV12Pve8KdeDm6FTVvIU6kB2nFEIqKsC04+hpOKobZuhff
      xoeQ8TBOdAgAffHnSO36ATLSi77032GHB1DSgjiJMdc1KQTC40Ok5aLX3ENyx/fxb37Y9YBI
      Z9wUUl2zaN9jkFkxPgh0l1ZOVKoyCp44Mi0Pu3s/3nX/afrcR4qGd8NfkXz1Wyj3/AzhcyfB
      zjXRJo0EiTcexnvjX6CV1p51XAiBvuhTKCNN2PFBrHd+jhMbAiTem/4LWtGiaWWfhuadOk26
      lBDtwwlUkHzpv4E43SSW8TG0yvXoK7+E8AWmfhYh3DmN9rcxO/eiL74TMY05JRQVvfYu1JKV
      pHY/gmhIw3fLf0foXtKzCjgwMJ+VXXug8ubTL3RsErEIweJM8jP0cWdDqetc8GcBblDgWMrG
      caTrHZISIad4W7HhLl787VsgBFlFlWz++PVnFdSxDA7vfZNQzUYibY2UFGXRM2oAOmZilPR0
      Px4cPDml5IfSCI+OkGFGkLaBUDWEP4QzcgKcJAgFJbcau7dxQr5aWIvVuhuz8SmcoWP4bnkY
      PF5kYhQc282R0/wcyba9aMvvR82uQMmuxGofVyLHRJt7M9bRrSBtpBlGX3wv1pGXkIYb/alV
      fQK7vwkn3I4c7QRvEH3+LVhtu90X7wmgz9+IUf+kO2jKXIB37VdI1T3OydBmjx/MlMRJjSHH
      OvFc91VkpAt7oNl9jrxqlMwyrOM73RfsSUfJq8GsfxwRLEb4QnjWPIDx/j+65VZ86DV3YLXt
      QcYGcIYOoxYtR8mpxhly85qKQAFq3hys1vHtq1QvevUmzKbX3LAGVUUpWk1q+4Poi901CVr5
      DThDR5HJUfc22VVIPMho/3gbFSjhFpzsJa4yCIFatAS79xAcfZlUVyOe67+OEioa/0AIlMxS
      ZHQIo/432G270Jfd5461xuOfhaIj0vKQiTBIidPwr6SO78Z3xyMIb7pbVl/6eI8lQFEQqj4e
      8gJIidH4DDIxgveG/4BpS7Yf6uZWZzti+R+7548rnIwNET7wKv6VXzq1ci3cgez+AFm5AcXv
      etXeOjZKbVG66w51nKkVoKu5jrB3DvOLA+za9TYbNkzdrUc6DxIJLibW08yCuYU0NB4nq3AO
      ZqQPw04wHE6x9ro1KNIhEokQCFxYzM5pODZO+3uYH/wKmV6EWrHGrSzpIJpfwvEX4dn4Py7c
      Zz4N0khgvPgNtJu+hZp/9iyt0v420jaRJ8OuHQvl0NNQUIuTtxhzz2MoWRWo8z8xSag8/f8n
      Y5kUgdO1H+PtH6OufgC9ar1rw7snjmdpsDB2/QQlIwdt1ZdByomBvVBUUFXkyaS20kH4s5Gx
      wfFQcBsRLMTe9zj24DH01X+CyMiD+PCEDKtpC/bRV1CK16LX3o2wUyh9e7EL146bQhJRvAJ7
      72OYza/gXfsAovJmZMc7E6HmIm8xMtIF8QGkbSHNpPuBSYTRFt6JklmKKFmFffh1rKbnUQIF
      eHLnYKeVnarDBRtxjr+FTI2Ak0QpvxEZ6UIOH3PrvWoD1p5fIHyZiLQsjjGHPKuNoIwhFQ3h
      z0Gp/BixPb/CJ0zIKEVb9SXMusfBtmCgDkdKRO4ShJ7BWCKGr3oDnvAJ5GDT1AogbZNdO7Yy
      EjNYvPIG5k0RD2QZcQ7UvYsRqKA4AAPDYcrnLaDrWDOKP0hWwEtOZpCuoRhzy4sJh8OEQpfu
      pZBSYrftwR44Oj6w0RCqjl6zCeG7BMWaAnuwleSWh0i756fuF2oyjuX66Stucpc3HtviztTO
      +TjScYg/8zX8t38fZYrB9nQ40UGSb3wHtWgZ+vIvIDTvxOJ2s/EF7K4P8G168OzZ5AtEWgbx
      Z/8c3ye/jZpzKrrX6j5Aavej+D/9Q4x3fooT6cF301+inNgCK+8fv9bEaq/D2PVDfCu+iLr0
      8xd4TxPz4AuYB59Hq7gRJWcORsOzaPNuwbPsboS0z5uA60ys9jqM/b/Gf8cP6QqbjDTtojI3
      DV/l9eiqQk84xcDBbSydWw4F7t7V0kiR3P49xMhRtFV/itH4DP67HyGcdGjoiblJ2k68ObUC
      XA4+rAJcCaSUWM1bMRufw7f5uygZZ0z8xIfdyZ68Re7EU81doKg4YwMk33gQ/z2PTmvbTntP
      y8D44N+wO+uQZhxSw6BlINJy8d/+Nwj94hrLmVjdBzDe/Qf8d/4YoWquN+nlb+Hb/D9RM4sn
      Piyp3z2KnpaOLL0Ru3s/cqwPJWcu3rLlKNmVULT84p7LTGIefhVn8Cie1X+CErz0oEopJcnX
      H0RbsBFtzo3Y0SFG65/nnay7mZfro3U4yY2xNwguvAUy8nDG+klu/V9oc9ajh/LAFyLVvAMl
      sxyl9h7eaBpm04Is1Pp/mVWAqTBbdmK8/xj+276Hkll8+sHehvGwjC9MxOoYjS+BGcez8gsf
      +t5SSrfrVpRL/vKfKS+180co+QvRF95G4uVvoS+5F33uutPOcxJhzO0PI7Lno1ZvRgkVu+7c
      Q89A2frzzlFcbpxIH4lXvknaZ3/hfhQ++CXJBfdw7J0XCfXXkW21QXAOCHVizKBVXucOgrvr
      kFW3ur30Z/6O+lEPsdFBqsM7UB966KGHrsQDpFIpfL4rl/T0w6BkVaDkVpPc8hBqXg1KRi7S
      cZCJMHZ0GCsxihPpRyaiyOQYZv2v0Vd+GWUGTDEhhOvlusie5FzylKKlpHb+AGeoHREqwbP0
      zrO8NUL3oRUvRx1tRqlYh9DG08q374by9W5Q3dXEk45MjGL3HkItXorddwRr99+Rk1dM5g1f
      QcNEu/7raHM/hqf2LtScyonraNuFyK1GZFVh1v0zpSs3U5pqxhvInj4U4qOMEAKtaBFi83dJ
      vvpNlPzFrgdG86MWLEQJluCE25D9h5CpOEpeDUro4ieKrhSKL4BnzZ9itezAd/M3pne7ZuS7
      6what7uxPWbctdfPtSb5CiGEwLPiPuJPfxVnqAUZ7cM77xOoa//MnQ/KLINA7tkXKpobun3w
      KbRFn8M6omId34We6EGdu3HWBDofTjKKM3gMNW8+ePwzkhr8anDBqc2lA41Puqu9NJ9r7i38
      zBUo4YVh9x3BCfehVd2A2PdPsOrPXLPUSkL5uukvjHRD8ys4ZTeR2PpdfBWrUNf/51kFmGUK
      kmE48BvIXuDG3Uy1tdK1QNPLbmDh4BF3/7PzJUeL9sGR57GVNFIHnkcpvX76YLhZPsL4Qu7A
      t22HuzTzWiVvkRsyHRu8sNSYGQWw8G5UYwT/nT9BLV422wPMMg1SuktQC5dd+Mq0K41jwfs/
      BySs/fqFT4bapjs2ONei+Fk+4ggBZ8TlX3MI1c37ZBsXFwkwaSutWQW4Aszk3lqTZf6+Dshn
      DCGgYJm7kOkSmR0DXGbGkmP85M0fsevYzhmRF46P8urBF/n+1u/SMdI2IzKvFsOxIX626xH2
      tdddupDc6g81SJ9VgMtIT7ibv93+Pa4rX8/Oo1s5MdR6SXIc6XCk9xD/d/dP+fGbP8Sr+vj8
      8vv45Ts/p3OkfYZLfWU40nuYR978W1aUruat4zv45e9+RsK4hM2yp9v/+EKRV4jR0dHLKt9x
      HNnQuV++0viCPDHYKm3HPu1Y+1CbfHrfk/L/bP+BPD7QclnLIqWUTb2H5Xde+SvZ0t8spZSy
      a6RT/vXL35SRePii5DiOI5/b/5T8yY4fyaN9TdKyrYlj3SNd8sFXvi07httntOwXWq4DXQ3y
      xcZn5Whs5KKu29G0VT782l/LvnCvlFJK27bllsO/Pa2+ZoqUmZKdwx3ScZwpj19RL1B6hptg
      STk5rT7pzkII11YWuKt5LoK+SC9P7XsCENQWL6OxZz/9kX7KsssJ+TI52NNA0BdkbcU6ioIl
      PPnBr1hbcQMbFtyKNsOznI50ePf4brY0vcaf3/SXZI8H1Ekp2d+5l+3NW/jGzf8VXZsm1+kZ
      sl5seJbR+Ah/dN39qGfEBkkp6Q338IvfPcr9N/xHikMlRFNRhmODdIy249N8VOXOI9OfNaPP
      ORwb5t8+eBzTNlhcVMtbx3ZQkTWH2xbdQWFo6t3tDMugO9zFtqbXsR2br1z3AN5JgX5SSrrD
      Xfy67leYloGiqKiKiqoqrJ/zcVaWrUI7cx/oaYilYhzuPUhd+3sMRPvQNQ9zsqv47Iovop6R
      MvKKKcDA8ABPH3wCKSW56fnMz1vA7ta3ANAUjdsWfYaXDjwLgO3Y3L308zzf+PTEkrib5m3g
      cO8BBqL9aMLDgvxqTNtg94m3sG2bgkAhn1ywibePvYVAYFgGqypW89T+JyjKKCXkz2Tz4tvZ
      3rSFcCJM0+BBqnLnUZxRSiQVQQCVOVUEfEEauvZhSoOg11Wabc2vTzzHvcu+wDP1v0Effxkb
      F36K3cd3EjfiONIhZkRpGWympmAxGd4AJaEy8jMK2Nfl2rn7u/YyL6eagD+IOv4h2LzwDn57
      5KWJe9w452bqu/fRE+nmQE89f7z2qxh2irYR14TKTc+nIquSQz0HEEKhN9xNb7SHuBljLBUh
      Yca5tfpTbGt+A0UoZKZlMT+3muJgGYpwF5GUZZajKird4S4AAt4AJZllHOk7lQZnbeUN7Os4
      ZZ/XFi/nvRO7ee3Ii1RmzeNzK77IaGKE4dgwdR3v0TrUQlGwhJz0XLLTcynIKAAhONjTwNHB
      JsKJEb6y5qv4dO9ErNOC/IW0j7RhOe5Ks6JgCcOxQYZjQ5iORVZaFi81PoeDw8aFt1GeVYGq
      qAxG3ax+aZ50CjKK6BvrBaA73Mm2pjdI92Swpvx6ijNLKMsq4x93/wMe3cvti+4kKz2bhBEn
      Zaau7XmAoegg4eQoQW+INE86Pt1H3IhzqLeRuvb36B/r4/rK9Xxy4aaJBnkx1Hft44X6p/Fq
      Xjg9R9z4BngSKR28upfP1N7L/PzqiePWeE4eVVFJmkm2Nb1OXft73LvsiywqXoLt2DjSQUGg
      KCrW+CISx3H4+13/m+JgGdX5NRQFSygIFZA0k25osmMjhOCFhmcQCnx68d14Ne/41lDG+D01
      dFVnLDmG240KAr6M8d8uQX+IwbFTqR8NJ0V99z52NG+htnAFmxfdjlf3Tlyjqzohf4jB6Kkk
      CAXBAlqHj2E7DvWdH3Cwt5HlJauoLXHzlRYEihiNjxAz3O2VQv5MNEVlKDaExCGaiJKyU2RO
      Wqy/IL+G5v5Tu/NU5c6jdegY5nj2keJQKTEjSjjhenbKsyroi/QRNcZoG26loWcftYUrXAVW
      Vbyql5LMMg71HmBb8+vkpufxR2vu52CPu7pQIllcVMuBngaGYoO80fQKX1v3F0SSYV4+9Py1
      rQBHeg+x69hOYkYUwzSIpMKkedKpKVxEbdFyyrMr8VxgavTpsGwLy7Y4uR23HHcvCiHcryWC
      nkgXz+z/DX7dz93LPk9+wG2wbcMnONx7gAM9DSwuquW2RXfg95x/V5mkmeT9tnc4MdxKb6SH
      SDKMT/MTN2N4VA8+zc+C/IXcufQelBkIiZ5MNDnG9uY32NP2LkuKlpGdnoPf4ydNTyc3PZ8M
      bwbp3nQ0RUMRgiO9h3npwHNkpWXz6SV3URQqvqru1+HYEC80PkP3aCefW3Ef8/OrMW2Tx99/
      DCEU7lv978/ZJvZ3fsBT+57Aq/pYVb5mZhVASocTLc2o6dkE/BrBQDqDIzEK8rJ/72eCT9rw
      rx580VUWKSjNKmNhwWJqChYTSrv0ZzNtE8u28Oreix7/XCpxI87R/iaiyTFGkyOu6WTECSfD
      jCZG8Ko+TNukIFjIHUvupjjz7M3SryZdo508te8JNKERN2MsLV7BpkVTZ/84k2gyilf3oqv6
      zCpAKjpI57CDGR1C8yhYKYOSuQvJ8GoMjw5RH9sDQEAPkevNpzV6FHAHvTWhZRwcPZUuZEnW
      SuqH38fBRhEqmtBxpI2DOybQhI4ATHkqS4GKis2pfDJexUvKSU389iheTCc1MfbWhOamOhy/
      RkFBESrWuEyBwKt4STqn0oX4FD/9sV7SvRmoioqCMlGmkzKEENjSlakKFVWoGI4xIdOvphG3
      T+3K6FfTSNjxSeX2YTipiV5JFW6CWVtaEzI0oWNOSlnjU/0k7cS0MnWhY0+qP13oCKFgjNeP
      goKueEg5rilm2RYexYsj7IlG5VG8E+e7deHDlNZEuTShoQqN1Hh9CQQexTvxe6pyeRQPpmNO
      PKsmNCRyov7Ofu8aAoEpTRzp0Nx3GF14mJs/b8IdeuZ7P/Md6ULHwcGW9swqQHKsn96Ihjk2
      gCNMYtEU1UuW4dcVwuEwwufaq4qioDgKFicbr8AjvBgyxUnXkC68pGSClExiOzamY2A7FrZ0
      UCd9JU+O6lWhIs6w4y156TvTSylx5CllkpPkCQS6ok80bkVR3TGDdE57eVPJcc447jbms80c
      1wQ7t/lzpuypEEKZ6FUkEmc84ZQj5WkfC12c20s02Xtij49nLGlPNNyz7jvNc00l73w40plw
      hpwPRdFOawWqcH87nKqryfU2syaQY9N85BBqWjaZ6TpZmUF6BsKUFhf83ptAs/xhck0PgmeZ
      5XIzGwoxy0eaiR4gGo1i2+e2Jz8MjuNMuBcn/02ZtNj6fL/lGRGQUx2HU1GXZ/6+lHue7x4z
      IfNK3OOk3Jms/zPPmeqeM103M11XV8wEuhRs20ZVZ9YPfjX4Q3mOqT5iv49Mfh/XtALMMsvl
      5hoaA0gG+7oZicSwjCTdvf1uUqf4GCnLIRkbo629E8u59vV1ZLCPwZEIjmXQ1d2DI8FMJYin
      XLdvLDJCyrr2nyMyOkjf4AjSsenu6sZyJLaZIhZPYZtJ2lpbGQ5Ps6vMNYKUkqH+HkYiMWwz
      SXdPP1JCKh4jZc7wPMCHwUrFGYrE6e3qxqMLskI+EmST6G3EP+cGcvUEZnyUvriPmqqrm6Xs
      nNgGPf2j9PZ1k+HTCWaGiCRBxvoR/lKqyoLs3b2NwuWbKM+8thfk9fZ0M9DTR1rQjz8jRHjM
      IE1GiCghCn0GQ4aPipIC/N6Lj8O6Ujhmgr7hGL09Xfg9KqFAGoYeINzWQnbV4munB9C8fuKj
      A+QUlaBqXgpLijFjSSrL3F0qfbpKa3svgYzzx9pcVVQPdipMVm4RUtHIzy9EWikq5pSjAEca
      9+MoOkODQ1e7pOdF2Aa+7DywFfIL8lEdi9LyCnRFEMwuwK8YHG05cbWLeU6E5iM1NkheYSmK
      plOQn4eRMqmoLENwDZlA8eFu2vsjJGJxvJrDvr2HCOUHaGntoKv9BP0Dg3j9foxU6vzCriJO
      coSm1j4SiRgBn87++noCwUxaWo7T0dnB3CUrqZ5bQW7Oh9jO6IpgcvhIC0Y8TjDko2F/A95g
      kNaWY3S1n2AkHCUyFsXrv7bTXZpj/RzrGiEej+HTYP/BZrIDflpaT3DiRPu1YwLNMsvV4Jrp
      AWaZ5WowqwCzfKSZVYBZPtLMKsAsV5XujjYMy6Gjo4OrMRq9th3Rs/zBoxij7HzzOKovCyM6
      Qu+YzaI5+ew/3E5NZQHHu3upWbqWrLTL01Rne4BZriqFVUvpamli3XWL2bZ9J0OdnfQODtDe
      UMeB5hbMtHxC/ssXRzXbA8xydRGCudU1+DWdBfOr8AQKceIx8gqLyMrMIaekEOUyBt/NzgPM
      8pFm1gSa5SPN/wcMs5JojA2RwAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
