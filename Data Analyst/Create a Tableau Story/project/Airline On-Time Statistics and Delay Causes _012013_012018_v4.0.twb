<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' inline='true' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127069640_12018_923_airline_delay_causes_012013_012018' name='textscan.0lnav6n1ber7n71dkfo0y187gcjk'>
            <connection class='textscan' directory='C:/MyWorks/Google Drive/Data Analyst_NanoDegree/Visualization/project' filename='127069640_12018_923_airline_delay_causes_012013_012018.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport]' />
              <expression op='[airports.csv].[iata]' />
            </expression>
          </clause>
          <relation connection='textscan.0lnav6n1ber7n71dkfo0y187gcjk' name='127069640_12018_923_airline_delay_causes_012013_012018.csv' table='[127069640_12018_923_airline_delay_causes_012013_012018#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='integer' date-parse-format='MM' name=' month' ordinal='1' />
              <column datatype='string' name='carrier' ordinal='2' />
              <column datatype='string' name='carrier_name' ordinal='3' />
              <column datatype='string' name='airport' ordinal='4' />
              <column datatype='string' name='airport_name' ordinal='5' />
              <column datatype='real' name='arr_flights' ordinal='6' />
              <column datatype='real' name='arr_del15' ordinal='7' />
              <column datatype='real' name='carrier_ct' ordinal='8' />
              <column datatype='real' name=' weather_ct' ordinal='9' />
              <column datatype='real' name='nas_ct' ordinal='10' />
              <column datatype='real' name='security_ct' ordinal='11' />
              <column datatype='real' name='late_aircraft_ct' ordinal='12' />
              <column datatype='real' name='arr_cancelled' ordinal='13' />
              <column datatype='real' name='arr_diverted' ordinal='14' />
              <column datatype='real' name=' arr_delay' ordinal='15' />
              <column datatype='real' name=' carrier_delay' ordinal='16' />
              <column datatype='real' name='weather_delay' ordinal='17' />
              <column datatype='real' name='nas_delay' ordinal='18' />
              <column datatype='real' name='security_delay' ordinal='19' />
              <column datatype='real' name='late_aircraft_delay' ordinal='20' />
              <column datatype='string' name='F22' ordinal='21' />
            </columns>
          </relation>
          <relation connection='textscan.0lnav6n1ber7n71dkfo0y187gcjk' name='airports.csv' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='iata' ordinal='0' />
              <column datatype='string' name='airport' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='string' name='country' ordinal='4' />
              <column datatype='real' name='lat' ordinal='5' />
              <column datatype='real' name='long' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ arr_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ arr_delay]' />
          <map key='[ carrier_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ carrier_delay]' />
          <map key='[ month]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ month]' />
          <map key='[ weather_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[ weather_ct]' />
          <map key='[F22]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[F22]' />
          <map key='[airport (airports.csv)]' value='[airports.csv].[airport]' />
          <map key='[airport]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport]' />
          <map key='[airport_name]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[airport_name]' />
          <map key='[arr_cancelled]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_cancelled]' />
          <map key='[arr_del15]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_del15]' />
          <map key='[arr_diverted]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_diverted]' />
          <map key='[arr_flights]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[arr_flights]' />
          <map key='[carrier]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier]' />
          <map key='[carrier_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier_ct]' />
          <map key='[carrier_name]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[carrier_name]' />
          <map key='[city]' value='[airports.csv].[city]' />
          <map key='[country]' value='[airports.csv].[country]' />
          <map key='[iata]' value='[airports.csv].[iata]' />
          <map key='[lat]' value='[airports.csv].[lat]' />
          <map key='[late_aircraft_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[late_aircraft_ct]' />
          <map key='[late_aircraft_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[late_aircraft_delay]' />
          <map key='[long]' value='[airports.csv].[long]' />
          <map key='[nas_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[nas_ct]' />
          <map key='[nas_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[nas_delay]' />
          <map key='[security_ct]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[security_ct]' />
          <map key='[security_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[security_delay]' />
          <map key='[state]' value='[airports.csv].[state]' />
          <map key='[weather_delay]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[weather_delay]' />
          <map key='[year]' value='[127069640_12018_923_airline_delay_causes_012013_012018.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ month]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_flights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_flights]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_flights</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_del15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_del15]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_del15</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[carrier_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>carrier_ct</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> weather_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ weather_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> weather_ct</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>nas_ct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>security_ct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_ct]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>late_aircraft_ct</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_cancelled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_cancelled]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_cancelled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_diverted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_diverted]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>arr_diverted</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> arr_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ arr_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> arr_delay</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> carrier_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ carrier_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias> carrier_delay</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F22</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F22]</local-name>
            <parent-name>[127069640_12018_923_airline_delay_causes_012013_012018.csv]</parent-name>
            <remote-alias>F22</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iata]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>iata</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport (airports.csv)]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
      <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
      <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;' value='All Delays' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;' value='Arrival Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;' value='Average Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;' value='Carrier Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;' value='Late Aircraft Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;' value='NAS Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;' value='Security Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;' value='Weather Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;' value='Agg. Carrier Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;' value='Agg. Weather Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;' value='Agg. NAS Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;' value='Agg. Security Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;' value='Agg. Late Aircraft Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489063486:qk]&quot;' value='Agg. Arrival Delay' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094506573894:qk]&quot;' value='Cancelled or Diverted' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;' value='Cancelled out of Total Arriving' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;' value='Diverted out of Total Arriving' />
          <alias key='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;' value='Delay out of Total Arriving' />
        </aliases>
      </column>
      <column caption='Month' datatype='string' name='[Calculation_1349391092679319552]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [ month] &#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;Feburary&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' />
      </column>
      <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
      </column>
      <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
      </column>
      <column caption='Avg Arrival Delay' datatype='real' name='[Calculation_1349391092860329998]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([ arr_delay])/SUM([arr_flights])' />
      </column>
      <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
      </column>
      <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
      </column>
      <column caption='Top 10 Carriers' datatype='string' name='[Carrier Name (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[carrier_name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alaska Airlines Inc., American Airlines Inc., Delta Air Lines Inc. and 7 more&quot;'>
            <value>&quot;Alaska Airlines Inc.&quot;</value>
            <value>&quot;American Airlines Inc.&quot;</value>
            <value>&quot;Delta Air Lines Inc.&quot;</value>
            <value>&quot;Envoy Air&quot;</value>
            <value>&quot;ExpressJet Airlines Inc.&quot;</value>
            <value>&quot;JetBlue Airways&quot;</value>
            <value>&quot;SkyWest Airlines Inc.&quot;</value>
            <value>&quot;Southwest Airlines Co.&quot;</value>
            <value>&quot;United Air Lines Inc.&quot;</value>
            <value>&quot;US Airways Inc.&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Carrier Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[carrier_name]' default='&quot;Other&quot;' new-bin='true' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
      <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Airport Full' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
      <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
      <column caption='Diverted Count' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
      <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='Airport City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Airport Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='IATA Code' datatype='string' name='[iata]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Airport Latitude' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
      <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Airport Longitude' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
      <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[airport (airports.csv)]' derivation='Attribute' name='[attr:airport (airports.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[lat]' derivation='Attribute' name='[attr:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ arr_delay]' derivation='Avg' name='[avg: arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Avg' name='[avg: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391094447632402]' derivation='Avg' name='[avg:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_flights]' derivation='Avg' name='[avg:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_delay]' derivation='Avg' name='[avg:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_delay]' derivation='Avg' name='[avg:nas_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_delay]' derivation='Avg' name='[avg:security_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather_delay]' derivation='Avg' name='[avg:weather_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[cum:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Avg' name='[diff:avg: arr_delay:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Avg' name='[diff:avg: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[diff:avg:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[airport]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[diff:sum: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[diff:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[diff:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[diff:sum:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[diff:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[diff:usr:Calculation_1349391092860329998:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[diff:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391092679319552]' derivation='None' name='[none:Calculation_1349391092679319552:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
      <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcto:avg:arr_flights:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcto:avg:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[pcto:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcto:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[pcto:sum:arr_flights:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Sum' name='[pcto:sum:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcto:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[pcto:usr:Calculation_1349391092860329998:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[pcto:usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcva:avg:arr_flights:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcva:avg:arr_flights:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[arr_flights]' derivation='Avg' name='[pcva:avg:arr_flights:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcva:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcva:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance aggregation-param='95' column='[arr_flights]' derivation='Percentile' name='[prc95:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ arr_delay]' derivation='Sum' name='[sum: arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ weather_ct]' derivation='Sum' name='[sum: weather_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_del15]' derivation='Sum' name='[sum:arr_del15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_diverted]' derivation='Sum' name='[sum:arr_diverted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Sum' name='[sum:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_ct]' derivation='Sum' name='[sum:late_aircraft_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[long]' derivation='Sum' name='[sum:long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_ct]' derivation='Sum' name='[sum:nas_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_ct]' derivation='Sum' name='[sum:security_ct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1349391092860329998]' derivation='User' name='[usr:Calculation_1349391092860329998:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Airport Name)' hidden='true' name='[Action (Airport Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[airport (airports.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Airport Name,Airport Code)' hidden='true' name='[Action (Airport Name,Airport Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[airport (airports.csv)]' />
          <groupfilter function='level-members' level='[airport]' />
        </groupfilter>
      </group>
      <group caption='Action (Carrier Name)' hidden='true' name='[Action (Carrier Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier_name]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(MonthYear))' hidden='true' name='[Action (MONTH(MonthYear))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Calculation_1349391092718141443:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Month)' hidden='true' name='[Action (Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1349391092679319552]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Airport Code,Airport Name)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:airport:nk]' />
          <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' />
        </groupfilter>
      </group>
      <group name='[Top 10 Delayed Carriers]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1349391092689137666]' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[carrier_name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 10 Delayed Airports' name='[Top 20 Delayed Airports]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1349391092689137666]' function='order' user:ui-marker='order'>
            <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[airport (airports.csv)]' to='&quot;Yuma MCAS-Yuma International&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, state, city' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.399718' group-percentage='0.0663842' measure-ordering='alphabetic' measure-percentage='0.533898' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:airport (airports.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albuquerque International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Illinois Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Metropolitan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durango-La Plata County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Smith Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gregg County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack McNamara &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Los Angeles International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Memphis International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Natrona County Intl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pease International Tradeport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reno/Tahoe International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Barbara Municipal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springfield-Branson Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;William B Hartsfield-Atlanta Intl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangor International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burbank-Glendale-Pasadena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chippewa County International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glynco Jetport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hilo International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juneau International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawton-Ft Sill Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mbs International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pueblo Memorial&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theodore F Green State&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waterloo Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adams &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellingham Intl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cape Girardeau Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;City of Colorado Springs Muni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forbes &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greater Peoria Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Idaho Falls Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kent County International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McGhee-Tyson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muskegon County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Owensboro-Daviess County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raleigh-Durham International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Diego International-Lindbergh &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southeast Texas Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trenton-Mercer County &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wichita Mid-Continent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arcata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlotte County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas Love &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eglin Air Force Base&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gainesville Regional&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James C. Johnson Petersburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Crosse Municipal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luis Munoz Marin International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newport News/Williamsburg International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phoenix Sky Harbor International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roanoke Regional/ Woodrum &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Savannah International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Illinois-Willard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Billings Logan Intl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Nebraska Regional &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corpus Christi International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagle County Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Wayne International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Hole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Klamath Falls International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisville International-Standiford &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercedita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Castle County &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pellston Regional  of Emmet County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhinelander-Oneida County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe Municipal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Cloud Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;William P Hobby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Akron-Canton Regional&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bemidji-Beltrami County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Capital&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleveland-Hopkins Intl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dothan &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greater Rochester Int&apos;l&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Imperial County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ketchikan International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McKinney Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Beach International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pago Pago International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ralph Wien Memorial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Francisco International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southwest Florida International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tri-Cities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wiley Post Will Rogers Memorial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Austin-Bergstrom International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brownsville/S.Padre Island International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicago O&apos;Hare International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delta County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erie Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gillette-Campbell County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Helena Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joplin Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laredo International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette County Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ogden-Hinckley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronald Reagan Washington National&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shreveport Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ted Stevens Anchorage International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Youngstown-Warren Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barkley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippewa Valley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detroit Metropolitan-Wayne County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Falls International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Golden Triangle Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honolulu International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lea County Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Clellan-Palomar Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monterey Peninsula&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quad City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salt Lake City Intl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sloulin Field International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tinian International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watertown Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bradley International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmira/Corning Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;General Mitchell International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hays Municipal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John F Kennedy Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lambert-St Louis International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Bend Muni&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Columbus Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rock Springs-Sweetwater County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shenandoah Valley Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tallahassee Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany Cty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benedum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Capital City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Metropolitan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dubuque Municipal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Collins-Loveland &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greater Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indianapolis International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Key &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach (Daugherty )&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meadows &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nantucket Memorial&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Beach International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Jose International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southwest Georgia Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tri-Cities Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilkes-Barre/Scranton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arnold Palmer Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismarck Municipal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlotte/Douglas International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dallas-Fort Worth International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Paso International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gallatin &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hagerstown Regional-Richard Henson &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James M Cox Dayton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lynchburg Municipal-Preston Glenn &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle Georgia Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niagara Falls Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piedmont Triad International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert Gray AAF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scott AFB/MidAmerica &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stillwater Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asheville Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Grass &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlottesville-Albermarle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dane County Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elko Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garden City Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisburg Intl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamestown Municipal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaGuardia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahlon Sweet &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pittsburgh International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roberts &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotts Bluff County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton Metro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valdosta Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yampa Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austin Straubel International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brainerd-Crow Wing County Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago Midway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Del Rio International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eppley Airfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;George Bush Intercontinental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hector International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wayne /Orange Co&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laramie Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missoula International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northwest Arkansas Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portland International Jetport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rogue Valley International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheppard AFB/Wichita Falls Municipal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampa International &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waco Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yellowstone Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baltimore-Washington International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo Niagara Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chico Municipal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evansville Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glacier Park Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry E. Rohlsen &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joslin Field - Magic Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laughlin/Bullhead International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marthas Vineyard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modesto City-County-Harry Sham &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogdensburg Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Provo Muni&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell Industrial Air Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sioux Gateway &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texarkana Regional-Webb &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Dulles International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yuma MCAS-Yuma International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena County Regional &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Binghamton Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Wisconsin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Craven County Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Iowa &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fresno Yosemite International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulfport-Biloxi Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kodiak &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lovell &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merle K (Mudhole) Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Orleans International &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria Pub/Capt G Allan Hancock &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St George Muni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tweed-New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilmington International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albert J Ellis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bert Mooney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cedar City Muni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia Regional&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duluth International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Lauderdale-Hollywood Int&apos;l&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenville-Spartanburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inyokern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Key West International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island - MacArthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne International &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashville International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm Springs International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redding Municipal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Obispo Co-McChesney &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane Intl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tri-State/Walker-Long &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Will Rogers World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene Regional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barnstable Mun Boardman/Polando &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bush &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chisholm-Hibbing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devils Lake Municipal-Knoke &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fayetteville Municipal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Houghton County Memorial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalamazoo County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lehigh Valley International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McAllen Miller International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery Regional Apt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orlando Sanford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Municipal-Baldwin &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Angelo Regional /Mathis &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sonoma Co&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toledo Express&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wendover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aspen-Pitkin Co/Sardy &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise Air Terminal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherry Capital&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellington &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gen Edw L Logan Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg-Laurel Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Foss &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mammoth Yosemite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis-St Paul Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pocatello Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rochester International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seattle-Tacoma Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syracuse-Hancock Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valley International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yeager&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Birmingham International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleston AFB/International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyril E. King&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Easterwood &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Friedman Memorial&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gunnison County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kona International At Keahole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lubbock International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Oakland International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newark Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philadelphia Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rickenbacker International &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sarasota Bradenton International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Petersburg-Clearwater International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler Pounds &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worcester Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baton Rouge Metropolitan, Ryan &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canyonlands &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati Northern Kentucky Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickinson Municipal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flagstaff Pulliam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Falls Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntsville International &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston-Nez Perce County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McCarran International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Outagamie County Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rafael Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Bend Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Cty &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westchester Cty&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1349391092679319552:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;April&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Feburary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;May&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:airport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ACY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BET&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BTM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CLD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DAY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ENV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FWA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HDN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LAW&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MQT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OTZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PVD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SBA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SPI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TUL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ABE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ASE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BOI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CGI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FCA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GRR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IAG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LNK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MKG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OKC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ROC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SIT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WYS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ABY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AVL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BQN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CIC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CWA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EGE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FNT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GTF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IFP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KTN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MMH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SLC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TOL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AGS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BUR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CMH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EVV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GFK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HOB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ISP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LCH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MEM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MSP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PGD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RDM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SCE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;STC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TXK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ADK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BFF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BTR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DBQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GCC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HIB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;INL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MDT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MRY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PAH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PWM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SBN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SPN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TUS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ACK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AVP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BRD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CID&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CYS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EKO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FOE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GTR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ILG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MBS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MOB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ORF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PSG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SMF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TPA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;APN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BMI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CDV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DRT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GRI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HYS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JAX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LIT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PIH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RNO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SHD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VPS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CRW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DVL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FLG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GSO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IAH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JMS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LRD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MLB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OMA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PNS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ROW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SJC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;XNA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AMA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BJI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DLH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FAI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GPT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HSV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JAC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LGB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MHK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MYR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PIA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RIC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SGF&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VEL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AZO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CIU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DAB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ELM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FSD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GUC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ILM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LAR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MCI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MOD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ORH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PSP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SMX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AKN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BHM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CMI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DHN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EWN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GGG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HOU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ITH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MFE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MSY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PHF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RDU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SDF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;STL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TYR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BIL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BZN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CMX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DIK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GJT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HPN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ITO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LFT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MFR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MTJ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RFD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SEA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;STS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TYS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ANC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BLI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DRO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GRB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HYA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JAN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LIH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MHT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OAJ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PIB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RKS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SGU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SUN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VLD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BNA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CEC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CPR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DSM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FAY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GRK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LMT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MKE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OGG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PIT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ROA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SHV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SWF&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WRG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ADQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BFL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BTV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DCA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ESC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GCK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HLN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IPL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LBB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MDW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MSN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PBI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RAP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SBP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SPS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TVC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ACV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BDL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CKB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ELP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IMT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MCN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MOT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OTH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PUB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SAV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TTN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ABQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ATW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BPT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CSG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EAU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FLL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GSP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ICT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JNU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LSE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OME&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PPG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SJT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TKI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;YAK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BIS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CNY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DLG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EYW&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GNV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HRL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IYK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MGM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MVY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PHX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RHI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;STT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AEX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BGM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BUF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EUG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GEG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HNL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ISN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LBE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MEI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MSO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PDX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RDD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SCC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SRQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TWF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ABR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BQK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CVG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EFD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FNL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IDA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KOA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LWS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MLU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ONT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PSC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RSW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SJU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TLH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;YUM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Carrier Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AirTran Airways Corporation, Allegiant Air, American Eagle Airlines Inc. and 10 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Carrier Name (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alaska Airlines Inc., American Airlines Inc., Delta Air Lines Inc. and 7 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:airport (airports.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albuquerque International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Illinois Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Metropolitan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durango-La Plata County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Smith Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gregg County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack McNamara &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Los Angeles International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Memphis International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Natrona County Intl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pease International Tradeport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reno/Tahoe International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Barbara Municipal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springfield-Branson Regional&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson International&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;William B Hartsfield-Atlanta Intl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangor International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burbank-Glendale-Pasadena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chippewa County International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glynco Jetport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hilo International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juneau International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawton-Ft Sill Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mbs International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe Regional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pueblo Memorial&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theodore F Green State&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waterloo Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adams &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellingham Intl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cape Girardeau Municipal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;City of Colorado Springs Muni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forbes &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greater Peoria Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Idaho Falls Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kent County International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McGhee-Tyson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muskegon County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Owensboro-Daviess County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raleigh-Durham International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Diego International-Lindbergh &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southeast Texas Regional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trenton-Mercer County &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wichita Mid-Continent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arcata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlotte County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas Love &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eglin Air Force Base&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gainesville Regional&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James C. Johnson Petersburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Crosse Municipal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luis Munoz Marin International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newport News/Williamsburg International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phoenix Sky Harbor International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roanoke Regional/ Woodrum &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Savannah International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Illinois-Willard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Billings Logan Intl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Nebraska Regional &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corpus Christi International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagle County Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Wayne International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Hole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Klamath Falls International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisville International-Standiford &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercedita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Castle County &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pellston Regional  of Emmet County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhinelander-Oneida County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe Municipal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Cloud Regional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;William P Hobby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Akron-Canton Regional&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bemidji-Beltrami County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Capital&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleveland-Hopkins Intl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dothan &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greater Rochester Int&apos;l&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Imperial County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ketchikan International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McKinney Municipal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Beach International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pago Pago International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ralph Wien Memorial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Francisco International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southwest Florida International&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tri-Cities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wiley Post Will Rogers Memorial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Austin-Bergstrom International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brownsville/S.Padre Island International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicago O&apos;Hare International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delta County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erie Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gillette-Campbell County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Helena Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joplin Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laredo International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette County Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ogden-Hinckley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portland Intl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronald Reagan Washington National&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shreveport Regional&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ted Stevens Anchorage International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Youngstown-Warren Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barkley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippewa Valley Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detroit Metropolitan-Wayne County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Falls International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Golden Triangle Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honolulu International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lea County Regional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Clellan-Palomar Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monterey Peninsula&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quad City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salt Lake City Intl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sloulin Field International&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tinian International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watertown Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bradley International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmira/Corning Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;General Mitchell International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hays Municipal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John F Kennedy Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lambert-St Louis International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot International&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Bend Muni&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Columbus Intl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rock Springs-Sweetwater County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shenandoah Valley Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tallahassee Regional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany Cty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benedum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Capital City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Metropolitan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dubuque Municipal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Collins-Loveland &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greater Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indianapolis International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Key &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach (Daugherty )&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meadows &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nantucket Memorial&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Beach International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Jose International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southwest Georgia Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tri-Cities Regional&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilkes-Barre/Scranton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arnold Palmer Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismarck Municipal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlotte/Douglas International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dallas-Fort Worth International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Paso International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gallatin &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hagerstown Regional-Richard Henson &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James M Cox Dayton Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lynchburg Municipal-Preston Glenn &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle Georgia Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niagara Falls Intl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piedmont Triad International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert Gray AAF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scott AFB/MidAmerica &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stillwater Regional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asheville Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Grass &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlottesville-Albermarle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dane County Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elko Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garden City Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisburg Intl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamestown Municipal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaGuardia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahlon Sweet &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pittsburgh International&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roberts &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scotts Bluff County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton Metro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valdosta Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yampa Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austin Straubel International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brainerd-Crow Wing County Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago Midway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Del Rio International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eppley Airfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;George Bush Intercontinental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hector International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wayne /Orange Co&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laramie Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missoula International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northwest Arkansas Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portland International Jetport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rogue Valley International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheppard AFB/Wichita Falls Municipal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampa International &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waco Regional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yellowstone Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baltimore-Washington International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo Niagara Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chico Municipal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evansville Regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glacier Park Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry E. Rohlsen &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joslin Field - Magic Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laughlin/Bullhead International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marthas Vineyard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modesto City-County-Harry Sham &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogdensburg Intl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Provo Muni&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell Industrial Air Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sioux Gateway &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texarkana Regional-Webb &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Dulles International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yuma MCAS-Yuma International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena County Regional &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Binghamton Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Wisconsin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Craven County Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Iowa &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fresno Yosemite International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulfport-Biloxi Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kodiak &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lovell &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merle K (Mudhole) Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Orleans International &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola Regional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria Pub/Capt G Allan Hancock &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St George Muni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tweed-New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilmington International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albert J Ellis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bert Mooney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cedar City Muni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia Regional&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duluth International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Lauderdale-Hollywood Int&apos;l&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenville-Spartanburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inyokern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Key West International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island - MacArthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne International &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashville International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm Springs International&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redding Municipal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Obispo Co-McChesney &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane Intl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tri-State/Walker-Long &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Will Rogers World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene Regional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barnstable Mun Boardman/Polando &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bush &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chisholm-Hibbing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devils Lake Municipal-Knoke &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fayetteville Municipal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Houghton County Memorial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kalamazoo County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lehigh Valley International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McAllen Miller International&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery Regional Apt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orlando Sanford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Municipal-Baldwin &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Angelo Regional /Mathis &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sonoma Co&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toledo Express&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wendover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aspen-Pitkin Co/Sardy &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise Air Terminal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherry Capital&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellington &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gen Edw L Logan Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg-Laurel Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Foss &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mammoth Yosemite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis-St Paul Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pocatello Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rochester International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seattle-Tacoma Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syracuse-Hancock Intl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valley International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yeager&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Birmingham International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleston AFB/International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyril E. King&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Easterwood &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Friedman Memorial&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gunnison County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kona International At Keahole&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lubbock International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Oakland International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newark Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philadelphia Intl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rickenbacker International &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sarasota Bradenton International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Petersburg-Clearwater International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler Pounds &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worcester Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baton Rouge Metropolitan, Ryan &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canyonlands &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati Northern Kentucky Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickinson Municipal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flagstaff Pulliam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Falls Intl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntsville International &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston-Nez Perce County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McCarran International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Outagamie County Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rafael Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Bend Regional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Cty &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westchester Cty&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:carrier_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PSA Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ExpressJet Airlines Inc.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spirit Air Lines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Envoy Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Endeavor Air Inc.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allegiant Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinnacle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American Eagle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;US Airways Inc.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AirTran Airways Corporation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SkyWest Airlines Inc.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:Calculation_1349391094473297953:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474334245:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474469414:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474547239:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474715176:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474752041:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094474768426:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg: arr_delay:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473068575:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473150496:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473297953:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473531426:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473584675:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094473875492:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094474334245:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094478700588:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488068152:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489063486:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:weather_delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652334158:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652371023:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652440656:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094652534865:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094462717972:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487859252:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488887354:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094652883026:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_ct:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: weather_ct:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:security_delay:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487965750:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488985660:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:carrier_name:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Carrier : Name]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468005909:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468177942:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468263959:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469132314:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469279771:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469361692:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094472036381:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094468333592:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094462615571:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094468976665:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488018999:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094489018429:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:long:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:long:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:avg:arr_flights:qk:2]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:avg:arr_flights:qk:2]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:avg:arr_flights:qk:4]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcva:avg:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[prc95:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094500548672:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094501011521:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094498680895:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_diverted:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[cum:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391092860329998:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391092860329998:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_ct:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092860329998:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094514778185:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_del15:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094504779842:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094504861763:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094506397764:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094506479685:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094506573894:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094514802762:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[diff:sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:arr_flights:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487744563:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488756281:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:lat:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:lat:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:lat:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_ct:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:nas_delay:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094487920693:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094488944699:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:carrier_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PSA Airlines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ExpressJet Airlines Inc.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spirit Air Lines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Envoy Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Endeavor Air Inc.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allegiant Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinnacle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American Eagle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;US Airways Inc.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AirTran Airways Corporation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SkyWest Airlines Inc.&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field=' month' />
        <field-sort-custom-order field='Calculation_1349391092679319552' />
        <field-sort-custom-order field='Calculation_1349391092718141443' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_flights' />
        <field-sort-custom-order field='arr_del15' />
        <field-sort-custom-order field='Calculation_1349391094446825489' />
        <field-sort-custom-order field='Calculation_1349391094447632402' />
        <field-sort-custom-order field='carrier_ct' />
        <field-sort-custom-order field=' weather_ct' />
        <field-sort-custom-order field='nas_ct' />
        <field-sort-custom-order field='security_ct' />
        <field-sort-custom-order field='late_aircraft_ct' />
        <field-sort-custom-order field='arr_cancelled' />
        <field-sort-custom-order field='arr_diverted' />
        <field-sort-custom-order field=' arr_delay' />
        <field-sort-custom-order field='Calculation_1349391092860329998' />
        <field-sort-custom-order field='Calculation_1349391092689137666' />
        <field-sort-custom-order field=' carrier_delay' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='F22' />
        <field-sort-custom-order field='iata' />
        <field-sort-custom-order field='airport (airports.csv)' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='lat' />
        <field-sort-custom-order field='long' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Different Delays' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Different Delays' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Delay by Carriers Yearwise' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Carrier Name' />
        <param name='target' value='Delay by Carriers Yearwise' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Carrier Name' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Delay by Carriers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Delay by Carriers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' worksheet='Delay for Top 10 Airports' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Delay by Airports' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cancelled or Diverted'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cancelled or Diverted</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Month' datatype='string' name='[Calculation_1349391092679319552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [ month] &#13;&#10;WHEN 1 THEN &quot;January&quot;&#13;&#10;WHEN 2 THEN &quot;Feburary&quot;&#13;&#10;WHEN 3 THEN &quot;March&quot;&#13;&#10;WHEN 4 THEN &quot;April&quot;&#13;&#10;WHEN 5 THEN &quot;May&quot;&#13;&#10;WHEN 6 THEN &quot;June&quot;&#13;&#10;WHEN 7 THEN &quot;July&quot;&#13;&#10;WHEN 8 THEN &quot;August&quot;&#13;&#10;WHEN 9 THEN &quot;September&quot;&#13;&#10;WHEN 10 THEN &quot;October&quot;&#13;&#10;WHEN 11 THEN &quot;November&quot;&#13;&#10;WHEN 12 THEN &quot;December&quot;&#13;&#10;END' />
            </column>
            <column caption='SUM([Cancelled Arrival Count])/SUM([Arriving Flights Count])' datatype='real' name='[Calculation_1349391094515146827]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([arr_cancelled])/SUM([arr_flights])' />
            </column>
            <column caption='SUM([Diverted Count])/SUM([Arriving Flights Count])' datatype='real' name='[Calculation_1349391094515183692]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([arr_diverted])/SUM([arr_flights])' />
            </column>
            <column caption='SUM([Delayed Carrier Count])/SUM([Arriving Flights Count])' datatype='real' name='[Calculation_1349391094519586893]' role='measure' type='quantitative' user:unnamed='Cancelled or Diverted'>
              <calculation class='tableau' formula='SUM([carrier_ct])/SUM([arr_flights])' />
            </column>
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Diverted Count' datatype='real' name='[arr_diverted]' role='measure' type='quantitative' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092679319552]' derivation='None' name='[none:Calculation_1349391092679319552:nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094515146827]' derivation='User' name='[usr:Calculation_1349391094515146827:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094515183692]' derivation='User' name='[usr:Calculation_1349391094515183692:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094519586893]' derivation='User' name='[usr:Calculation_1349391094519586893:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094519586893:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515146827:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094515183692:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1349391092679319552:nk]' />
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;January&quot;</bucket>
              <bucket>&quot;Feburary&quot;</bucket>
              <bucket>&quot;March&quot;</bucket>
              <bucket>&quot;April&quot;</bucket>
              <bucket>&quot;May&quot;</bucket>
              <bucket>&quot;June&quot;</bucket>
              <bucket>&quot;July&quot;</bucket>
              <bucket>&quot;August&quot;</bucket>
              <bucket>&quot;September&quot;</bucket>
              <bucket>&quot;October&quot;</bucket>
              <bucket>&quot;November&quot;</bucket>
              <bucket>&quot;December&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Proportional to Total Arriving Count' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' field-type='quantitative' max='0.094421435649622187' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' value='Delay Causes'>
              <formatted-text>
                <run>Delay Causes</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <tooltip column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Airport'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>By Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 20 Delayed Airports]' derivation='InOut' name='[io:Top 20 Delayed Airports:nk]' pivot='key' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]'>
            <groupfilter function='member' level='[io:Top 20 Delayed Airports:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Yuma MCAS-Yuma International&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1239' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]' value='In / Out of Top 10  Airports'>
              <formatted-text>
                <run>In / Out of Top 10  Airports</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delay by Airports'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'> Delay by Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]'>
            <groupfilter function='level-members' level='[carrier_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Aberdeen Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Cherry Capital&quot;' />
              <groupfilter from='&quot;Chicago Midway&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Elko Regional&quot;' />
              <groupfilter from='&quot;Elmira/Corning Regional&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;McGhee-Tyson&quot;' />
              <groupfilter from='&quot;Meadows &quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Miami International&quot;' />
              <groupfilter from='&quot;Midland International&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Watertown Intl&quot;' />
              <groupfilter from='&quot;Westchester Cty&quot;' function='range' level='[none:airport (airports.csv):nk]' to='&quot;Yuma MCAS-Yuma International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='35048589.031235337' min='24753073.694885064' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='6177843.4610888883' min='2822114.3360016025' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min='1000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport Name:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Airport Code:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Delay:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6584098339080811' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Airports_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'> Delay by Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[airport]' derivation='None' name='[none:airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]'>
            <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;George Bush Intercontinental&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]'>
            <groupfilter function='member' level='[carrier_name]' member='&quot;American Airlines Inc.&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]'>
            <groupfilter function='level-members' level='[io:Top 10 Delayed Carriers:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='40712245.208655387' min='19467615.368795577' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='7191568.523452498' min='1686775.1144263207' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max-size='1' min='1000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' value='In / Out of Top 10 Carriers'>
              <formatted-text>
                <run>In / Out of Top 10 Carriers</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Airport Name:&#9;&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Airport Code:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Delay:&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]&gt; minutes</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Carrier Delay:   </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Late Aircraft Delay:  </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>NAS Delay: </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>Weather Delay : &lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>Security : &lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6584098339080811' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Carriers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay by Carriers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Airport Code' datatype='string' name='[airport]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[pcto:sum: carrier_delay:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[pcto:sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[pcto:sum:late_aircraft_delay:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391094447632402]' derivation='Sum' name='[sum:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name,Airport Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[airport (airports.csv)]' />
              <groupfilter function='level-members' level='[airport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]'>
            <groupfilter function='member' level='[io:Top 10 Delayed Carriers:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='DESC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name,Airport Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1606' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Carrier Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Average Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Late Aircraft Delay along Table (Across):&#9;</run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average Delay: </run>
                <run bold='true'>&lt;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]&gt; minutes</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delay by Carriers Yearwise'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay by Carriers Yearwise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391094447632402]' derivation='Avg' name='[avg:Calculation_1349391094447632402:qk]' pivot='key' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Year-Trunc' name='[tyr:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Chicago O&apos;Hare International&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Dallas-Fort Worth International&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Denver Intl&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;George Bush Intercontinental&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;John F Kennedy Intl&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Los Angeles International&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Newark Intl&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;San Francisco International&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;William B Hartsfield-Atlanta Intl&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='level-members' level='[none:airport (airports.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='ASC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]' scope='cols' value='Year (Month wise)' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:Calculation_1349391094447632402:qk]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tyr:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay for Top 10 Airports'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delay for Top 10 Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092689137666]' derivation='User' name='[usr:Calculation_1349391092689137666:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Dallas-Fort Worth International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Denver Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;George Bush Intercontinental&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;John F Kennedy Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Los Angeles International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Newark Intl&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;San Francisco International&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;William B Hartsfield-Atlanta Intl&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' direction='DESC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1303' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' field-type='quantitative' max='75000.0' max-size='1' min='25000.0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' />
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' />
              <text column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Delayed Flight Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Delayed flights count by Cause</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column-instance column='[ weather_ct]' derivation='Sum' name='[sum: weather_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_ct]' derivation='Sum' name='[sum:late_aircraft_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_ct]' derivation='Sum' name='[sum:nas_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_ct]' derivation='Sum' name='[sum:security_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:carrier_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: weather_ct:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='Arriving Flights' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Other Delays' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk] + [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Different Delays'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Different Delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Delayed Weather Count' datatype='real' name='[ weather_ct]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Delayed Count' datatype='real' name='[Calculation_1349391094446825489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]' />
            </column>
            <column caption='Average Delay' datatype='real' name='[Calculation_1349391094447632402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[arr_del15] + [carrier_ct] + [late_aircraft_ct] + [nas_ct] + [security_ct] + [ weather_ct]/[Calculation_1349391094446825489]' />
            </column>
            <column caption='[Total Delay]/[Total Delay]' datatype='real' name='[Calculation_1349391094472744990]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='[Calculation_1349391092689137666]/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Arrival Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094474784811]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([ arr_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Average Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094478749741]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([Calculation_1349391094447632402])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Carrier Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094478942254]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([ carrier_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Late Aircraft Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479024175]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([late_aircraft_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([NAS Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479102000]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([nas_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Security Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479196209]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([security_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='AVG([Weather Delay])/[Total Delay]' datatype='real' name='[Calculation_1349391094479257650]' role='measure' type='quantitative' user:unnamed='Different Delays'>
              <calculation class='tableau' formula='AVG([weather_delay])/[Calculation_1349391092689137666]' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Delayed Arriving Flights Count' datatype='real' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Delayed Carrier Count' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Delayed Late Aircraft Count' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Delayed NAS Count' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Delayed Security Count' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1349391094472744990]' derivation='User' name='[usr:Calculation_1349391094472744990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094474784811]' derivation='User' name='[usr:Calculation_1349391094474784811:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094478749741]' derivation='User' name='[usr:Calculation_1349391094478749741:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094478942254]' derivation='User' name='[usr:Calculation_1349391094478942254:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479024175]' derivation='User' name='[usr:Calculation_1349391094479024175:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479102000]' derivation='User' name='[usr:Calculation_1349391094479102000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479196209]' derivation='User' name='[usr:Calculation_1349391094479196209:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391094479257650]' derivation='User' name='[usr:Calculation_1349391094479257650:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094472744990:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094474784811:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479024175:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478942254:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479102000:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479257650:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094479196209:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391094478749741:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='Proportional of total' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' value='Differrent Delays'>
              <formatted-text>
                <run>Differrent Delays</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='336' />
                <format attr='maxwidth' value='336' />
                <format attr='minheight' value='140' />
                <format attr='maxheight' value='140' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</rows>
        <cols>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk] * [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='Different flight delays'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Different flight delays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Mon' datatype='integer' name='[ month]' role='dimension' type='quantitative' />
            <column caption='MonthYear' datatype='date' name='[Calculation_1349391092718141443]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([year],[ month],1)' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Cancelled Arrival Count' datatype='real' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ arr_delay]' derivation='Sum' name='[pcto:sum: arr_delay:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[ arr_delay]' derivation='Sum' name='[sum: arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ carrier_delay]' derivation='Sum' name='[sum: carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1349391092718141443]' derivation='Month-Trunc' name='[tmn:Calculation_1349391092718141443:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:late_aircraft_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: carrier_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:nas_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:security_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_cancelled:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[none:airport (airports.csv):nk]' member='&quot;Chicago O&apos;Hare International&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='Others ( in Minutes )' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='Arrival Delay (in minutes)' />
            <format attr='subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: arr_delay:qk:4]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum: arr_delay:qk] + [federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values])</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[tmn:Calculation_1349391092718141443:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Flight Counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
          </datasources>
          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
            <column caption='Arrival Delay' datatype='real' name='[ arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='real' name='[ carrier_delay]' role='measure' type='quantitative' />
            <column caption='Total Delay' datatype='real' name='[Calculation_1349391092689137666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ arr_delay]+[ carrier_delay]+[late_aircraft_delay]+[nas_delay]+[security_delay]+[weather_delay])' />
            </column>
            <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
            <column caption='Arriving Flights Count' datatype='real' name='[arr_flights]' role='measure' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Avg' name='[avg:arr_flights:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Chicago Midway&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Chicago O&apos;Hare International&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Dallas-Fort Worth International&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Denver Intl&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;George Bush Intercontinental&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;John F Kennedy Intl&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Los Angeles International&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;Newark Intl&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;San Francisco International&quot;' />
              <groupfilter function='member' level='[airport (airports.csv)]' member='&quot;William B Hartsfield-Atlanta Intl&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]' />
          <sort class='computed' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' direction='DESC' using='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]' />
          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</column>
            <column>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' />
              <lod column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg:arr_flights:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</rows>
        <cols>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column caption='Airport Name' datatype='string' name='[airport (airports.csv)]' role='dimension' type='nominal' />
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[airport (airports.csv)]' derivation='None' name='[none:airport (airports.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='40206' id='1' name='Different Delays' w='99879' x='1690' y='1260'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7376' id='6' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' w='16811' x='78538' y='11850'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7618' id='8' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' w='16811' x='78538' y='19589'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7618' id='7' mode='checkdropdown' name='Different Delays' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16811' x='78671' y='3869'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='56701' id='17' name='Different flight delays' w='50392' x='1448' y='41008'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='22222' id='18' name='Different flight delays' pane-specification-id='3' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' w='9604' x='66567' y='6415' />
        <zone h='57617' id='19' name='Cancelled or Diverted' w='47434' x='52829' y='41810'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='12715' id='26' name='Cancelled or Diverted' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' w='14544' x='63488' y='28064' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
        <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Airport State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='57920' id='1' name='Delay by Airports' w='97010' x='1794' y='2056'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='8' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' w='16800' x='78300' y='23750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='9' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16800' x='78300' y='9000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='11000' id='11' name='Delay by Airports' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' w='14000' x='79600' y='31500'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='7625' id='7' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]' type='filter' w='16800' x='78200' y='16000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='41596' id='12' name='Delay by Carriers' w='98804' x='0' y='58888'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='8706' id='18' name='Delay by Carriers' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' w='9302' x='68837' y='57074'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column-instance column='[Top 10 Delayed Carriers]' derivation='InOut' name='[io:Top 10 Delayed Carriers:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='5488' id='9' mode='checkdropdown' name='Delay by Carriers' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='11061' x='79107' y='88913'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='39078' id='26' name='Delay by Carriers' w='93515' x='741' y='61142' />
        <zone h='7245' id='27' name='Delay by Carriers' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' w='8862' x='87516' y='59605' />
        <zone h='6257' id='28' mode='checkdropdown' name='Delay by Carriers' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' type='filter' w='9897' x='76649' y='60922' />
        <zone h='58836' id='29' name='Delay by Airports' w='96313' x='1035' y='878' />
        <zone h='11636' id='31' name='Delay by Airports' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' w='9056' x='87710' y='43908' />
        <zone h='9660' id='32' name='Delay by Airports' pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' w='9056' x='87128' y='33809' />
        <zone h='8013' id='33' mode='checkdropdown' name='Delay by Airports' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='10349' x='86158' y='18990' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 4'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='127069640_12018_923_airline_delay_causes_012013_012018' name='federated.01r329b0qcwg0o153s8ko1kzk9d2' />
      </datasources>
      <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='56469' id='1' name='Delay by Carriers Yearwise' w='82743' x='462' y='726'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='6651' id='6' mode='checkdropdown' name='Delay by Carriers Yearwise' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' w='16795' x='83436' y='1814'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='43773' id='7' name='Delay by Carriers Yearwise' pane-specification-id='2' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' w='14638' x='83975' y='9432'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='43872' id='8' name='Delay for Top 10 Airports' w='61053' x='66' y='55899' />
        <zone h='41466' id='9' name='Flight Counts' w='35789' x='63355' y='57159' />
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='782' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98466' id='7' param='vert' removable='false' type='layout-flow' w='99166' x='417' y='767'>
            <zone h='98466' id='1' param='vert' removable='false' type='layout-flow' w='99166' x='417' y='767'>
              <zone fixed-size='163' h='15628' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99166' x='417' y='767' />
              <zone h='82838' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99166' x='417' y='16395'>
                <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Flight Delays due to various reasons peaks at around June-July and also around December. July 2014 was an exception, worth exploring the root causes and scenarios. We see that the security check delay contributes the least and the arrival delay contributes the most towards the overall delay. We also see that most flights get cancelled during January-February and most get delayed aound May-July period. This may be due to extreme weather or holiday seasons as we see it peaks around summer and winter.' captured-sheet='Dashboard 1' id='5' />
                    <story-point caption='Here we see the average delay based on different carriers spread across different airports in USA. We see that when all airports are taken into considerations across the map, Southwest Airlines gets delayed the most followed by United Air and American Airlines . When we click Southwest Airlines in the bottom plot, we see the top 3 airports contributing towards its delay are Chicago , Las Vegas and Baltimore. Similarly we can see by combining different airport names with year that which flights were delayed the most.' captured-sheet='Dashboard 2' id='2'>
                      <capturedDeltas>
                        <worksheet name='Delay by Airports'>
                          <datasource-dependencies datasource='federated.01r329b0qcwg0o153s8ko1kzk9d2'>
                            <column-instance column='[carrier_name]' derivation='None' name='[none:carrier_name:nk]' pivot='key' type='nominal' />
                          </datasource-dependencies>
                          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
                            <groupfilter function='level-members' level='[none:carrier_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='This is another Geolocation plot of the airports to discover more information on them. We see if we take all the years and all the carriers, the airport which caused the most delay is Chicago O&apos;Hare airport followed by Atlanta and Texas. Here we can also see for different carriers, which airports caused the most delay e.g When the carrier is Delta airlines, we see that Atlanta caused the most delay. For Chicago airport, Southwest airlines is not even in top 10 delayed carriers. We can also hover our mouse on the bottom plot to see the exact geolocation of that particular airport.' captured-sheet='Dashboard 3' id='3'>
                      <capturedDeltas>
                        <worksheet name='Delay by Airports'>
                          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Carrier Name)]'>
                            <groupfilter function='member' level='[carrier_name]' member='&quot;Southwest Airlines Co.&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Latitude (generated)]' field-type='quantitative' max='6183928.1169417361' min='2945832.213932029' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Longitude (generated)]' field-type='quantitative' max='36318642.212266952' min='24212765.904822033' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                        <worksheet name='Delay by Carriers'>
                          <selection-collection>
                            <tuple-selection>
                              <tuple-reference>
                                <tuple-descriptor>
                                  <pane-descriptor>
                                    <x-fields />
                                    <y-fields />
                                  </pane-descriptor>
                                  <columns>
                                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
                                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
                                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum: carrier_delay:qk]</field>
                                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:Calculation_1349391094447632402:qk]</field>
                                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[pcto:sum:late_aircraft_delay:qk]</field>
                                  </columns>
                                </tuple-descriptor>
                                <tuple>
                                  <value>&quot;Southwest Airlines Co.&quot;</value>
                                  <value>148920.66051411082</value>
                                  <value>0.17236488611552994</value>
                                  <value>0.21787532066589027</value>
                                  <value>0.20510200238995918</value>
                                </tuple>
                              </tuple-reference>
                            </tuple-selection>
                          </selection-collection>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='So now,we only take the top 10 airports and top 10 carriers based on the delay.We see that the results change a bit. Now when we plot all the 10 airports on the map and plot the corresponding airlines which got most delayed(within top 10 overall).We see though Southwest is still leading the delay charts, but when we select individual airport, the situation changes.eg. For Atlanta airport, Delta and ExpressJet Airlines contribute to most of delay. Similarly, for Chicago, Southwest is not even in top 10 delayed carriers. This means the most delay of Soutwest is not from the most delayed airports but rather spread over the all the airports.' captured-sheet='Dashboard 4' id='4'>
                      <capturedDeltas>
                        <worksheet name='Flight Counts'>
                          <filter class='categorical' column='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action (Airport Name)]'>
                            <groupfilter function='level-members' level='[airport (airports.csv)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Different flight delays'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delayed Flight Count'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='390'>
            <card pane-specification-id='3' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cancelled or Diverted'>
      <cards>
        <edge name='left'>
          <strip size='468'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='315'>
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094514778185:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Carriers'>
      <cards>
        <edge name='left'>
          <strip size='177'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='156'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airport'>
      <cards>
        <edge name='left'>
          <strip size='221'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='195'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:Calculation_1349391094447632402:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Carriers Yearwise'>
      <cards>
        <edge name='left'>
          <strip size='400'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='197'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[mn:Calculation_1349391092718141443:ok]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[yr:Calculation_1349391092718141443:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airports'>
      <cards>
        <edge name='left'>
          <strip size='468'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='312'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Action(Carrier Name)]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Carrier : Name]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay by Airports_1'>
      <cards>
        <edge name='left'>
          <strip size='390'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='390'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 10 Delayed Carriers:nk]' type='filter' />
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Multiple Values]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[attr:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Delay for Top 10 Airports'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 20 Delayed Airports]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[avg: carrier_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[io:Top 20 Delayed Airports:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:city:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:iata:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:state:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:weather_delay:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Different Delays'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='390'>
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468005909:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468177942:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468263959:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094468333592:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469132314:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469279771:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094469361692:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391094472036381:qk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cancelled or Diverted'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:Calculation_1349391092679319552:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;June&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Different Delays'>
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Different flight delays'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='19' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Delay by Airports'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Delay by Carriers' />
      </viewpoints>
      <active id='12' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Delay by Airports'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Delay by Carriers' />
      </viewpoints>
      <active id='29' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Delay by Carriers Yearwise'>
          <zoom type='entire-view' />
          <highlight field='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Delay for Top 10 Airports'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Chicago Midway&quot;</value>
                  <value>448039.0</value>
                  <value>29357.826388888891</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;George Bush Intercontinental&quot;</value>
                  <value>795579.0</value>
                  <value>32992.082242990655</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;John F Kennedy Intl&quot;</value>
                  <value>516193.0</value>
                  <value>34558.676532769554</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Newark Intl&quot;</value>
                  <value>585972.0</value>
                  <value>34605.501683501687</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Los Angeles International&quot;</value>
                  <value>1104276.0</value>
                  <value>35897.468493150685</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Denver Intl&quot;</value>
                  <value>1132380.0</value>
                  <value>37432.337817638268</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;San Francisco International&quot;</value>
                  <value>858303.0</value>
                  <value>44248.389140271494</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Dallas-Fort Worth International&quot;</value>
                  <value>1224951.0</value>
                  <value>48305.900156006239</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;William B Hartsfield-Atlanta Intl&quot;</value>
                  <value>1927689.0</value>
                  <value>59921.311926605507</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:airport (airports.csv):nk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[sum:arr_flights:qk]</field>
                    <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[usr:Calculation_1349391092689137666:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Chicago O&apos;Hare International&quot;</value>
                  <value>1443365.0</value>
                  <value>64079.745889387144</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Flight Counts'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
    </window>
    <window class='worksheet' name='Flight Counts'>
      <cards>
        <edge name='left'>
          <strip size='312'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='312'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='312'>
            <card pane-specification-id='0' param='[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[Top 10 Delayed Carriers]</field>
            <field>[federated.01r329b0qcwg0o153s8ko1kzk9d2].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cancelled or Diverted' width='192'>
      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
      HtWJRkL8E2FW7jkuYlihAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      f8HeYRXoNVt4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
      ddOtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delay by Airport' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delay by Airports' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delay by Airports_1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Carriers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Carriers Yearwise' width='192'>
      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
      pYcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Delay for Top 10 Airports' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAOiklEQVR4nO3d6W8bd3rA8e9vDg5PkSIp6qSsw7JlW7aTOGm2yKZdYF8V2Dftu77pX9L/
      oe+KvihQtK8K9FXRAkXRblFs6zhJ4yO+IluyrPskdfAeztUXSmw5Ua5dK5L393wAQyI1M3xE
      8TscUoZGRVEUIYSmjNMeQIjTJAEIrVlHL9xffcyd5QenNYs4IR9cuUrDPzjtMc6kVwK4vXSf
      v/nN35/WLOKEFIb+go3O8mmPcSbJIZDQ2rEBJJ0kCiikejEMm0wiS9J2SNkx0k6STDz9nRsd
      7B3lUv8YBmAYMRKWRSKWxFDfP854sUzuyPZtK07MOBwzGUu8uL6YKfJyc4q08/Jr33cbqVj8
      G9emnOQPXP/N1dqr8fzhOp4fvrjOa7t0XY920zt2Hb/dZuHeMnvV1rdvt94G4GCnRuB2cd3g
      2OU6TffF51EQ0D5y+cfq1FoE4bd/Pey6dDrHz3GUddyVmew4heYaP5t+j5vLK6TCGhXXYSqT
      ACfHyt4mykxysVji8dYyF/rG8MMuXrfB7M4q/ekc652I63155loJRpNdcIbYqC4wWZpkfvMp
      vdkhetMDTKYD/ntxkZGeDE1ziOupA255XSIryUQ2x1bXwO6skslNUHJs/mv+NqgYP7/4Abce
      /QcfXvkTPpu/RSmXZ6PRJmv6bLRdRnP9bNd2+cXFt/j3hzcZ7xvlyfojaoHFlf5RdtyIrB1h
      ZsbJtp7TMtN8/Pzub/0DeRMsPd5k9NIAX9xaYLicZvcgIJfw6cbjNCuKGA2cYh6j08RVDqNT
      RVrLq5AfJZ0xWLyzQLxUxFFdapUGT+6s8v6fvkdrcR23XODOr5e4fDmDPVhiYW6T0ZlhDjb2
      aG5VWNmzGChaWKbB8PVxnNBl5ekuCcvHJcbB02VSF87R32tR3fXoH06zv93CskMO9jzGp4ss
      PNyg0Gty73GbGzf6SdmKp3fXKM8MU1nYgniS3h6DjbUm5wZN1rw858e/e8d2bACV3WV+efl9
      vlhbYibfw+2qTdHZevH1cu8QW60micwYb5mwXdlkoDRITR3uqXPpPlJxj/XtJcBgengGZaQ4
      aFZJxOJcG7qEGTP5ZHUJv9GmJ1UiZpmsN/e4W7nPUN9bZNIliLp4+1XM5Hka1VkquSmuDF+h
      TQzcJpf6R1iuLLC4v0MpVyCfynG+0E+susr85jLlXJ65rWcEVhLHTHF9eIL/WT48Fi4kkhwE
      HmZ9h/XtOcrDb7+mh9kZphTJ3gwxe5tapcHq0x0SMwOoOBB41GodDpYW6e+Po9KK1QdLGJ7H
      6sIyVs0mSveyu7iJ53a59POLNFsh2ZxDYrzAZ/+5yMRMno2KS7KxzuSNc8x/NE9bOcxM90Ej
      DbvbnLuYZXmpwVjZBqDZ8DHtiNxAgZGrg9z5p1uYlkO3maL/wjl25lZJJ2x2K3XcRout/S4j
      ly9SW91kdX2X6RtjPPvkKSqRxfab1DxF7fkqW04ZMt9/lxwbQOA3CD2PJ9UNBjIpXK9JO/Kw
      UBA1AIOEHcd1G7jdDjW3hdXYx/UP12+6LSwFQRQRBB3uLN4Fu4htO4RBl3a3zX79gG63Sd/I
      FHs7Fez0AEZYoRNAvdOg7of02BG7rTomLucHr9J0G3y6/AXTA1P884O7TA9MYdgwlitQ77TJ
      pJPU2w3q7QM6XodGt0G+d4iBVIQXdOh6XYhC6m4bN+zQAfxuxIXBC+y5jdfzIDvDEnGDxzfn
      yAwUaG9tk8gkiCUdlGMTOj71EJLZBIm0w369w/kPJmgtrzA9WabgtHl4cwEn10Ox1EMsZhK2
      Wxzsu/T0pLHiBsMjWfb2qvQPJ/nio2cUR/rI2jHsjMnBw3WKQz3E4g6JhEKZBom0g5GyQEFC
      BTz/fIPiSB6PGLlSgp5cnE4hTdwyaHdczJhNvDfF7tIamf4kg8U4sx/NUxgpokwb5XdpH9Rx
      epLE4jHs+Pe/xFVHfxP8dzf/Ud4F+j30l38u7wJ9G3kXSGhNAhBakwCE1iQAoTUJQGhNAhBa
      kwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJ
      QGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE
      1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhN
      AhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBas057AHHyDGViKvlRH0fuFQ18+JsD
      1MLOaY9xJkkAGgjWVlBPHp/2GGeSvAYQWpMANGIMjWNdexuVTf/4dUsDLy9YMYjZqGI/GOo1
      TvjTk0MgjRj5LP6De1gz1wnrbYxsnLDWxsj0ENVrRPtrkCmh4imUFRB1IsAlWHiOURpA5ftR
      GYeo5mMOJAh3avj7OxBGp/2t/dbkGUA7ClBY56fAMFFxC//xfSDEmHoXZYM5NgamhYrbBAvP
      X64auASbO0S1fYJnc0ThKX0Lr5E8A2gkrO5hXblKsPiEcO8AI20T7lQg9Al3K6hQEa4vEUUO
      SrmEu7WX626tE/kBke9D18M4P0m4tflG7/1BAtBKuLFEuLEEQFRf4OgOPDrYJzrYP1xuYfab
      6+5sv1wW8B89OMlRfzJyCCS0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkA
      QmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0
      JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNDaKyfIiNsOvcnsac0iTohqn/YEZ9crAZiejd1I
      ntYs4qSYpz3A2fVKAJXaLrNr86c1izghUXmYN/tkpidHXgMIrR0bgFIW7196n8uDwwznD0+Q
      nElmsX5gLpad5o+u/Ix3RidIpooMFsuM9SToL5ZJfOc2LMaPnJA5mcgQ+4EnYu5NZcFwyCfj
      37nceKn8g7Yn9HDsWSKHy1fZWbnLQqPLr97/FVeaW8zv1mi2E8wMjzG79pyJoUnWN58xMjxF
      PHJZaXgM9aT59PFHTExc5t7sJ0xOvkdfvMmWF+PPpmY4sEvce9xiojzNWmWJi0MTzG0uM9g7
      wMb2PPOVBkP5IsOlC2TNLvtGjlR7laVmxEguzeJejdGUST1KkkvEuPf8Cy6NTFJr7PMH0+/x
      r7dv0htzuTY5ge8e0IwS5BMO9xe/YHpkkp3qCoXefp5vr/zU97M4o47dH3u+R8KJYxkma9vP
      2Wy0yCQzlEuDPHj6GfF0EcdJMl2+TGP/GZ3QIB+PcXtjl3ImTjcIScZsYpbJzv4WbgTbe5ts
      1w8YKgxgGwnOD5WpVBfJ5MqkLIVpvmyx2ayyXquzubvOg+U5ro5dIlSQiTnce/aIwGvyYG2N
      cn+ZpGkxmu9ldmWO7ZZPvncIt7YIZgL8Fp+vrFAeHCVlWlwYGvuJ7lbxpjj2GWBr/TGliWuM
      m5usVDeIIsCwaLXrXB27xlplg1rcZqu6zrmRSwwlbX799AkX8xn+b75FuP+AG+dn2Ks8pxUA
      nQoPtzq4losFjBsWm7UtWq06+xu7xCcvst+sAx4LW+t4weEcNdfn2vAYt2Y/YySbZLmyRTOI
      WKlu0Oz6BF4TpzTA5t4WdqJAX6zL3MoshcIkwe4q1bZLw/VY3mzj9A+wubFNJ/g9OL25eG1U
      FEUvTvX91//2D/zVv/ztj9rA1Mg0+3sr7DSbr3048Xp8Wv5j1IPPT3uMM+l3PlP83Oo3zyou
      xJtC3gYVWpMAhNYkAKE1CUBoTQIQWpMAhNYkAKE1CUBoTQIQWpMAhNYkAKG13/n/AomzzyiP
      o/zo+xfUkASgAffxU6I7d097jDNJDoGE1iQAoTUJQCP2teuHnxgWRl8BUBh9JTAPHwaxD36J
      Ve4DO4ZRLIKhULk8RiYFThIjm8GavoJyLIxCEUyFkS+iHPtw+9evQyKJke/FKJ/HHh8GK4ZR
      6AXLRmUyKMfBKBbAMDD6SijHIXbjXVQyjlHqQ6V7UKkExF5dDts83P5rJq8BNKK+fKDbM9eI
      mk2s8SnMXAL31seEdQ+8GkZpBDt/jsh1MUt9qLiJiqdR2QHMQgLv80dE5y7hXJ0iWF3DGOij
      e/N/Cdx9lGESe+sdMEOinTZKecT+8EOs4QH8uaeosEZk5og6HQzHwbr2NjSrYKdBKayRSVQ8
      BAwiNyRqtzHicayrb0Fjm7ARvPb7RJ4BdGLFsa9cOtyrZnuI6lWCeoQ11IcxOonyOxjZLHhN
      /JUNFBEqmUY5NmFtj+69u0QB4HsEq4v4i4sEqztYY6MvbiLarxJU9wj3dlE9WWg38R7dJ9iv
      4809I2rW8Nc3UYURqG1CqIhcH+XEIIrAjqMsk6hVx1/fQOVHoL7FSe2r5RlAI93bn4Blgue/
      /GgvgueBUrjLEagv/w5TFNF9Wif2zttEtQrdh0/AMCAIIIoIVmzwfYLqLgT+4fbvHXmnKYoI
      dq3D5S0LfB+iiHB2FqIIb28b76vrlQGEdPc+PbyNKHrxzzuovlzuBEgAOglD6H75VzG8Lx9Q
      nnf48au/jRAd+X2B79L99ONX1//KV+v53svroq/9rsH/2m18/XZe3PaRQ5vga4c5R5c7AXII
      JLQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBC
      axKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQm
      AQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCaxKA
      0JoEILQmAQitSQBCaxKA0JoEILQmAQitSQBCa9bRC+XiEB9Mv3tas4gTEktPEUXqtMc4k/4f
      vPoGHmoOhawAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Delayed Flight Count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Different Delays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Different flight delays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Flight Counts' width='192'>
      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
      mgRA2Nr/A448tI2d2vmfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dZ5Pr1p3n8S9yJMDMTvdKstf2eJK3aqZ2357foePYY9lXN3U3M0HkDOwD
      3qBgJVtej4XzqVJJDRLg4QF+AP4HACX1fd8jCAMl/70bIAh/TyIAwqCJAAiDJgIgDJoK0Pc9
      TdP8vdvyvSLLMl3X/b2bIXwN9e1/xHH892zH94okSWiaRlVVf++mCF9DnAIJgyYCIAzauwBs
      tlv6rma3O9G2LX3f03UdXd9f/oZ30/q+p//09K6jbTv6vqN983rbdtD3nE4nmjLjeI7pujfL
      7DrgMn/X9e+Wd3mtp+8v73nXjrZ9N1/XXa7bdV3L/nB4N/3S/vfzvP3ncDi8m9Z87t/vptc1
      x1PwmWlt29J9B9cIu7bhk49/xx+fv2a/P9C2HUWe0XZvPwuyLLt83zc1Q/emX7pP92vbkYRn
      irp5853eT3+/XlqeP3vG68fNF79LfmYXlp/t07evtQ2n4EyRZbSfm+8z67pv2W7e9/npdHq3
      Pbx9/dkf/0jVtJxOJ4okJkwzuk993vv3dmRZTt99dl1/etvL45CkqN99Xt/3HE+nP9O2jOP+
      TJZXX1jO57eHTy+/7/v3NUB0PlIWCW3d8/HHv2d+dUtbxLiOxf3jhp/8639QREeaIkQ2PMqq
      ZLfd8NN//0/i7Qtaw6eJd+zOBcvZiN3hzH/8n//L4/0rpNtbdoczcWQQbNc0mst//uynfPxf
      v6bRbMajEVJfs3t8pLd8PAPmy2s++dN/40+v6bmEIjnu6Eyf//y3H/HJs5d0ssz29XOSVuN6
      NSPYr/n1xy/54YdPsHQFa7IiTSLOhz3jxYI//PY3PP3BjzlGCfORxqtX96zuPkKVe1TdJNhv
      ifMSWZNIghLHd3l6d/1XBUBWVBaLOY3qEWxfEZwCbMtEkhqiUuInP/yQ4/FAmUYY/oon13Oe
      ffxfJI2OZ0q0vYppyNRlTdM12OMlZXTgFIRIbcb6kPL0donpjpkZFeb0mvy85+HFn3jx+pHV
      kw8xpAZT14irhPDUYihQFBVXqwV/+P3vGS+uSJOEqe+jmyplUSIrkOY9juuymho8f3HAdHXk
      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
      PyMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
